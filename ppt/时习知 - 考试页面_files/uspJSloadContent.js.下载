/**
 * v=20220312005
 * 灰度数组
 */
 var grayappIdArr = ['M000026', 'M001351', 'M002044', 'M001922', 'M001879', 'M001916', 'M000557', 'M000673', 'M011120', 'M013661', 'M003576', 'M022180', 'M011942', 'M000729', 'M029600', 'M029920', 'M003738'];

 /**
	* 对Date的扩展，将 Date 转化为指定格式的String 
	* 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， 
	* 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) 
	* 例子： 
	* (new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423 
	* (new Date()).Format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18
	*/
 Date.prototype.Format = function(fmt) {
	 var o = {
		 "M+": this.getMonth() + 1, // 月份
		 "d+": this.getDate(), // 日
		 "h+": this.getHours(), // 小时
		 "m+": this.getMinutes(), // 分
		 "s+": this.getSeconds(), // 秒
		 "q+": Math.floor((this.getMonth() + 3) / 3), // 季度
		 "S": this.getMilliseconds() // 毫秒
	 };
	 if (/(y+)/.test(fmt))
		 fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
	 for (var k in o)
		 if (new RegExp("(" + k + ")").test(fmt))
			 fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
	 return fmt;
 }
 
 /**
	* uspJS 引用注意事项
	* 在引入该JS文件需传入参数 
	* appId 应用uspJS系统中注册的ID
	* servertype [可为空,为空时就是生产环境] 可赋值为 dev,sit,uat，表明环境是哪里
	* pagecode 对应的pageCode编码，用来标示该页面或者该模块
	* locale为语言zh_CN/en_US
	* 
	* getClientLocationURL : 自定义URL可以在加载该JS文件之后重写这个方法,返回一个URL字符串 如:
	* uspJS.getClientLocationURL = function(){
	* 	return "http://www.huawei.com/?a=1"
	* }
	* 可以自定义调用方法来执行插件的执行
	* 
	* uspJS.openOnlineHelpWindow(appid, url);
	* 打开机器人界面，
	* url与appid可以同时提供或者二者选一个，
	* 如果不提供appId,则默认通过url找appid,如果找不到则系统不能正常使用。
	* 
	* uspJS.openPageRankDialog(appid,url,pagecode);
	* 打开页面评价窗口，appid为可选，url/pagecode二选一，
	* 如果同是提供则以pagecode为准，
	* 如果提供的appid与url/pagecode冲突忽略appId. 
	* 如果之前没有配置过appIdgn url/pagecode的关系则会记录此关系。
	* 此关系也可以在后续进入用户支持平台后台修改。
	* 
	* uspJS.openMyServiceListWindow(appid);
	* 打开我的所有服务单,该参数可以不传入，如果不传入则表示查看我所有的服务单。
	*/
 //用户支持平台脚本
 
 var uspConfig = {
	version: '20220312005',
 	onlineSupportURLHost: "http://w3.huawei.com/ihelp/icsclientC60/",//机器人服务器地址
	ihelpNotLoginIcsUrl: "http://app.huawei.com/wecare/icsclient/",
	onlineSupportURLHost32: "http://w3.huawei.com/ihelp/icsclient/",//机器人服务器地址
	uspServiceHost: 'http://w3.huawei.com/ihelp/usp/',	//USP服务器地址
	uspJSImgHost: 'http://w3.huawei.com/ihelp/usp/', //USP控件引用图片路径地址
	onlineSupportURLHostOutNet: "http://app.huawei.com/ihelp/icsclient/",//机器人服务器地址（外网地址）
	uspServiceHostOutNet: "http://app.huawei.com/ihelp/usp/",//USP服务器地址（外网地址）
	uspJSImgHostOutNet: "http://app.huawei.com/ihelp/usp/", //USP控件引用图片路径地址（外网地址）
	cssPath: 'usp/common/css/usphomev3.css',
	uspJSConfigParam: 'usp/common/js/uspJS_config_param_w3.js',
	netmodel: '0', // 访客内外网标示:0-内外；1-外网
	uspPortalServiceHost: 'http://w3.huawei.com/ihelp/usp/',	//仅作为内网访问情况下入口加载之用不涉及其他UI的跳转
	uspPortalServiceHostOutNet: "http://app.huawei.com/ihelp/usp/",	//仅作为外网访问情况下入口加载之用不涉及其他UI的跳转
	grayOpinionAddressURL: 'http://12345.huawei.com/unidesk/portal/#/service_log',
	grayOpinionAddressURLApp: 'http://app.huawei.com/ihelp/usp/index/index.html#/service_log',
	ihelpAnliOpenUrl: 'http://12345.huawei.com/unidesk/portal/#/case_details',
	icsExemptionLoginUrl: '//app.huawei.com/wecare/icsclient/index.do',

	 imgUrlArr: {
		 urlB: 'usp/common/imgs/v3/iconsB.png',
		 urlB1: 'usp/common/imgs/v3/iconsB1.png',
		 urlA: 'usp/common/imgs/v3/icons.png'
	 },
 
	 // 获取请求参数
	 getRequestParam: function(asName) {
		 var uspJavascript = document.getElementById("uspJavascript");
		 var lsURL = uspJavascript.getAttribute('src');
		 var loU = lsURL.split("?");
		 if (loU.length > 1) {
			 var loallPm = loU[1].split("&");
 
			 for (var i = 0; i < loallPm.length; i++) {
				 var loPm = loallPm[i].split("=");
				 if (loPm[0] == asName) {
					 if (loPm.length > 1) {
						 return loPm[1];
					 } else {
						 return "";
					 }
				 }
			 }
		 }
		 return "";
	 },
	 // 获取网络类型：
	 getNetmodel: function(model) {
		 if (model == "0" || model == "1") {
			 return model;
		 } else {
			 var netmodel = "0"; //内网
			 return netmodel;
		 }
	 },
	 // 获取当前日期时间
	 getCurrDateTime: function() {
		 var currDateTime = (new Date()).Format("yyyyMMddhhmmss");
		 return currDateTime;
	 },
	 initNetModel: function() {
		 //var modelParam = uspConfig.getRequestParam("netmodel");
		 //uspConfig.netmodel = uspConfig.getNetmodel(modelParam);
		 return uspConfig.netmodel;
	 },
	 initProtocol: function() {
		 try {
			 if (window.location.protocol == "https:") {
				 uspConfig.uspServiceHost = uspConfig.uspServiceHost.replace("http", "https");
				 uspConfig.onlineSupportURLHost = uspConfig.onlineSupportURLHost.replace("http", "https");
				 uspConfig.uspPortalServiceHost = uspConfig.uspPortalServiceHost.replace("http", "https");
				 uspConfig.uspPortalServiceHostOutNet = uspConfig.uspPortalServiceHostOutNet.replace("http", "https");
			 }
		 } catch (e) { }
	 }
 }
 
 //初始化入口URL的协议
 uspConfig.initProtocol();
 // 加载版本JS文件，
 //if (uspConfig.initNetModel() == "1") {
 //	dynamicLoading.js(uspConfig.uspPortalServiceHostOutNet + uspConfig.versionPath);
 //} else {
 //	dynamicLoading.js(uspConfig.uspPortalServiceHost + uspConfig.versionPath);
 //}
 //addby 2015.9.14 start
 var uspYanWidth = 44;         // 导航箭头默认标准宽度
 var uspYanHeightOfHide = 22;  // 导航箭头缩小之后的高度
 var uspYanHeight = 0;         // 导航箭头当前的高度
 var uspYanHeightOfOpen = 0;   // 导航箭头展开之后的最大高度
 var uspYanDivRemoveArrowTop = 0; // 导航箭头展开之后并去除箭头的高度
 var singlePortalHeight = 52;
 
 var oldUspYanOffsetLeft = null;
 var oldUspYanOffsetTop = null;
 var openEvaluateBadDivFlag = 0;
 
 //
 function getUspYanDivRemoveArrowTop() {
	 var result = uspYanDivRemoveArrowTop;
	 try {
		 result = (document.getElementById("usp_entrance_ul").children.length - 1) * singlePortalHeight;
	 } catch (e) {
		 result = uspYanDivRemoveArrowTop;
	 }
	 return result;
 }
 
 // 入口图标拖拽操作
 function dragHandle(event) {
	 var drag = document.getElementById('usp_yan');
	 var event = event || window.event;
	 try {
		 if (event.preventDefault) {
			 event.preventDefault();
		 } else {
			 event.returnValue = false;
		 }
		 if (event.stopPropagation) {
			 event.stopPropagation();
		 } else {
			 event.cancelBubble = true;
		 }
	 } catch (e) { }
	 var startX = drag.offsetLeft;
	 var startY = drag.offsetTop;
	 var mouseX = event.clientX;
	 var mouseY = event.clientY;
	 var deltaX = mouseX - startX;
	 var deltaY = mouseY - startY;
 
	 oldUspYanOffsetLeft = startX;
	 oldUspYanOffsetTop = startY;
 
	 if (document.attachEvent) {
		 drag.attachEvent('onmousemove', moveHandle);
		 drag.attachEvent('onmouseup', upHandle);
		 //		drag.attachEvent('onlosecapture', upHandle);
		 drag.setCapture();
	 } else {
		 document.addEventListener('mousemove', moveHandle, true);
		 document.addEventListener('mouseup', upHandle, true);
	 }
	 // 鼠标移动操作
	 function moveHandle(event) {
		 uspJS.addCoverlayer();//添加遮罩层
		 var clearBol = true;
		 drag.removeAttribute("class");
		 var event = event || window.event;
		 try {
			 try {
				 if (event.preventDefault) {
					 event.preventDefault();
				 } else {
					 event.returnValue = false;
				 }
				 if (event.stopPropagation) {
					 event.stopPropagation();
				 } else {
					 event.cancelBubble = true;
				 }
			 } catch (e) { }
			 if (event.which === 0) {
				 upHandle();
				 return;
			 }
		 } catch (e) { }
 
		 if ((event.clientX - deltaX) < 0) {
			 drag.style.left = "0px";
		 } else {
			 var dLeft = (event.clientX - deltaX);
			 var jLeft = uspJS.findDimensionsWidth() - uspYanWidth;
			 dLeft = (dLeft < jLeft) ? dLeft : jLeft;
			 drag.style.left = dLeft + "px";
		 }
 
		 if ((event.clientY - deltaY) < 0) {
			 drag.style.top = "0px";
		 } else {
			 var dTop = (event.clientY - deltaY);
			 var jTop = uspJS.findDimensionsHeight() - uspJS.getUspYanHeight();
			 dTop = (dTop < jTop) ? dTop : jTop;
			 drag.style.top = dTop + "px";
		 }
		 n = 1;
		 if (clearBol) {
			 clearBol = false;
			 uspJS.clearEvaluateBadDiv();
		 }
	 }
	 // 鼠标弹起操作
	 function upHandle() {
		 try {
			 var dX = drag.style.left;
			 var dy = drag.style.top;
 
			 if (document.attachEvent) {
				 drag.detachEvent('onmousemove', moveHandle);
				 drag.detachEvent('onmouseup', upHandle);
				 drag.detachEvent('onlosecapture', upHandle);
				 drag.releaseCapture();
			 } else {
				 document.removeEventListener('mousemove', moveHandle, true);
				 document.removeEventListener('mouseup', upHandle, true);
			 }
			 uspJS.uspJSLocation[uspJS.appId] = drag.offsetLeft + "::" + drag.offsetTop;
			 uspJS.removeCoverlayer();//删除遮罩层
			 uspJS.cachePortalMoveAction("ihelp_portal_index_" + uspJS.appId, drag.style.left + "_" + drag.style.top);
			 //			localStorage.setItem("ihelp_portal_index",JSON.stringify(uspJS.uspJSLocation));
 
		 } catch (e) {
			 uspJS.cachePortalMoveAction("comPosX", drag.offsetLeft);
			 uspJS.cachePortalMoveAction("comPosY", drag.offsetTop);
		 }
	 }
 }
 
 //addby 2015.9.14 end
 
 /**
	* uspJS 引用注意事项 在引入该JS文件需传入参数 appId 应用uspJS系统中注册的ID servertype [可为空,为空时就是生产环境]
	* 可赋值为 dev,sit,uat，表明环境是哪里 pagecode 对应的pageCode编码，用来标示该页面或者该模块
	* locale为语言zh_CN/en_US
	* 
	* getClientLocationURL : 自定义URL可以在加载该JS文件之后重写这个方法,返回一个URL字符串 如:
	* uspJS.getClientLocationURL = function(){ return "http://www.huawei.com/?a=1" }
	* 可以自定义调用方法来执行插件的执行
	* 
	* uspJS.openOnlineHelpWindow(appid, url); 打开机器人界面， url与appid可以同时提供或者二者选一个，
	* 如果不提供appId,则默认通过url找appid,如果找不到则系统不能正常使用。
	* 
	* uspJS.openPageRankDialog(appid,url,pagecode);
	* 打开页面评价窗口，appid为可选，url/pagecode二选一， 如果同是提供则以pagecode为准，
	* 如果提供的appid与url/pagecode冲突忽略appId. 如果之前没有配置过appIdgn url/pagecode的关系则会记录此关系。
	* 此关系也可以在后续进入用户支持平台后台修改。
	* 
	* uspJS.openMyServiceListWindow(appid); 打开我的所有服务单,该参数可以不传入，如果不传入则表示查看我所有的服务单。
	*/
 //如果是存在 uspJS对象，先将uspJS用 tempUspJS 存起来
 if (window.uspJS) {
	 window.tempUpsJS = window.uspJS;
 }
 //用户支持平台脚本
 var uspJS = {
	 supportTitle: { 'zh_CN': '在线帮助', 'en_US': 'Online help' },
	 feedbackTitle: { 'zh_CN': '评价与反馈', 'en_US': 'Feedback' },
	 myServiceTitle: { 'zh_CN': '我的服务单', 'en_US': 'My service list' },
	 myCommunityTitle: { 'zh_CN': '我的社区', 'en_US': 'My Community' },
	 goodFeedbackTitle: { 'zh_CN': '好评', 'en_US': 'Good Feedback' },
	 badFeedbackTitle: { 'zh_CN': '差评建议', 'en_US': 'Negative Feedback' },
	 seekHelpTitle: { 'zh_CN': '求助', 'en_US': 'seekHelp' },
	 arrowIconShowTitle: { 'zh_CN': '显示', 'en_US': 'Show' },
	 arrowIconHideTitle: { 'zh_CN': '隐藏', 'en_US': 'Hide' },
	 supportSpan: { 'zh_CN': '求助', 'en_US': 'Help' },
	 CustomerSpan: { 'zh_CN': '客服', 'en_US': 'Help' },
	 Appraises: { 'zh_CN': '评价', 'en_US': 'Appraises' },
	 OpinionSpan: { 'zh_CN': '意见', 'en_US': 'Advice' },//
	 OpinionSpanAdvice: { 'zh_CN': '建议', 'en_US': 'Advice' },
	 ihelpItemPFBVAL: { 'zh_CN': '反馈', 'en_US': 'FeedBack' },
	 ihelpItemTidan: { 'zh_CN': '提单', 'en_US': 'Req' },
	 ihelpItemCommunity: { 'zh_CN': '社区', 'en_US': 'Community' },
	 ProgressSpan: { 'zh_CN': '进展', 'en_US': 'Status' },
	 ihelpItemCases: { 'zh_CN': '案例', 'en_US': 'Cases' },
	 goodFeedbackSpan: { 'zh_CN': '点赞', 'en_US': 'Like' },
	 badFeedbackSpan: { 'zh_CN': '吐槽', 'en_US': 'Dislike' },
	 myServiceSpan: { 'zh_CN': '服务单', 'en_US': 'Ticket' },
	 myCommunitySpan: { 'zh_CN': '论坛', 'en_US': 'Forum' },
	 myHiddenSpan: { 'zh_CN': '收起', 'en_US': 'Hide' },
	 ihelpItemTitle: {
		 'CustomerSpan': { 'zh_CN': '召唤智能机器人或人工客服', 'en_US': 'Connect with intelligent robots or human customer service' },
		 'ihelpItemPFBVAL': { 'zh_CN': '反馈您的问题或建议', 'en_US': 'Feedback your questions or suggestions' },
		 'Appraises': { 'zh_CN': '请对我们的产品进行评价', 'en_US': 'Please rate our products' },
		 'ProgressSpan': { 'zh_CN': '查看服务单的处理详情', 'en_US': 'View the service details' },
		 'OpinionSpanAdvice': { 'zh_CN': '反馈您的建议', 'en_US': 'Feedback your suggestions' },
		 'ihelpItemCommunity': { 'zh_CN': '查看互助社区平台', 'en_US': 'View the community platform' },
		 'ihelpItemCases': { 'zh_CN': '查看产品案例自助解决问题', 'en_US': 'View product cases to solve problems' }
	 },
	 yfOpsInfo: {//研发评价平均分
		 yfSvgScore1:'0',
		 yfSvgScore2:'0',
		 yfSvgScore3:'0',
		 total:'0'
	 },
	 onlineSupportURLHost: "",
	 onlineSupportURL: "index.do",
	 uspServiceHost: "",
	 uspServiceHost_dev: "http://localhost.huawei.com:8080/ihelp/usp/",	//
	 uspServiceHost_sit: 'http://nkweb-sit.huawei.com/ihelp/usp/',
	 uspServiceHost_uat: 'http://nkweb-uat.huawei.com/ihelp/usp/',
	 uspServiceHost_prod: 'http://w3.huawei.com/ihelp/usp/',
	 reviewsDetailsURL_host: 'http://w3.huawei.com',
	 uspPortalServiceHost: "",	//
	 uspFeedbackURL: "#!usp/pagefeedback/feedback.html",
	 uspBadFeedbackURL: "#!usp/pagefeedback/evaluatefeedback.html", // evaluatefeedback.html
	 uspTicketURL: "#!usp/serviceticket/myServiceListNew.html?tenantsId=3",//"#!usp/serviceticket/myServiceList.html",
	 uspIhelpDemoURL: "#!usp/serviceticket/ihelpDemo.html?",
	 openOpinionHTMLURL: "#!usp/serviceticket/opinionSatisfaction.html",
	 recommendationURL: "#!usp/serviceticket/recommendation.html",
	 reviewsDetailsURL:'/ihelp/usp/#!usp/serviceticket/ReviewsDetails.html',
	 userDefinedparameter: "",//提单自定义参数
	 CustomerUrlParameter: "",//客服自定义参数
	 //用户自编辑知识相关 
	 //	userFaqJsPath : 'usp/common/js/uspUserFaq.js',
	 myServiceURL: "",
	 myCommunityURL: "",//各产品配置的社区URL
	 evaluateFeedbackService: "services/evaluateFeedback/evaluate",
	 imgUrl: {
		 host: "",		//测试时使用该路径，正式环境需要修改成正式路径
		 "z_s": "usp/common/imgs/z-s.png",
		 "z_ba": "usp/common/imgs/z-ba.png",
		 "z_1": "usp/common/imgs/z-1.png",
		 "z_nei": "usp/common/imgs/z-nei.png",
		 "z_2": "usp/common/imgs/z-2.png",
		 "z_3": "usp/common/imgs/z-3.png",
		 "z_x": "usp/common/imgs/z-x.png",
		 "z_an": "usp/common/imgs/z-an.png",
		 "feedback_tba": "usp/common/imgs/feedback_tba.png",
		 "feedback_guan": "usp/common/imgs/feedback-guan.png",
		 "tant": "usp/common/imgs/tant.png",
		 "tang": "usp/common/imgs/tang.png"
	 },
	 Bdigmsg: {
		 //			msg1:{"zh_CN":"我们的产品是否满足您的期待？说说你的体验，帮助我们更快改进！","en_US":"Does our product meet your expectations? Tell me about your experiences and help us improve faster!"},
		 msg1: { "zh_CN": "觉得我们产品好用吗？留下你的评价吧~", "en_US": "Do you think our products are easy to use? Leave your comments~ " },
		 msg2: { "zh_CN": "提交", "en_US": "Submit" },
		 msg3: { "zh_CN": "评价", "en_US": "Evaluation" },
		 msg4: { "zh_CN": "非常不满意", "en_US": "Very dissatisfied" },
		 msg5: { "zh_CN": "不满意", "en_US": "Not Satisfied" },
		 msg6: { "zh_CN": "一般", "en_US": "So so" },
		 msg7: { "zh_CN": "满意", "en_US": "Satisfaction" },
		 msg8: { "zh_CN": "非常满意", "en_US": "Very satisfied" },
		 msg9: { "zh_CN": "取消", "en_US": "Cancel" },
		 //			msg10:{"zh_CN":"评价","en_US":"Appraise"},
		 msg10: { "zh_CN": "欢迎爱分享、有观点的你", "en_US": "You are welcomed to share your opinions" },
		 msg11: { "zh_CN": "评价", "en_US": "Rating" },
		 msg12: { "zh_CN": "流程规则/数据是否合理", "en_US": "Process/Data" },
		 msg13: { "zh_CN": "IT工具好不好用", "en_US": "IT System" },
		 msg14: { "zh_CN": "服务满意度", "en_US": "Service" },
		 msg15: { "zh_CN": "为了给您提供更好的产品和服务，感谢您的宝贵建议！", "en_US": "You give good suggestions, We offer better products！" },
		 msg16: { "zh_CN": "匿名评价", "en_US": "Anonymous" },
		 msg17: { "zh_CN": "如您愿意接受回访和获得工具团队支持，请取消勾选“匿名评价”", "en_US": "If you’re willing to receive further supports, please uncheck the box" },
		 msg18: { "zh_CN": "查看全部评价", "en_US": "View All Reviews" },
		 msg19: { "zh_CN": "对我们的产品不满意吗？留下您的反馈吧", "en_US": "Are you dissatisfied with our product? Please leave your feedback!" },
		 msg20: { "zh_CN": "建设中", "en_US": "Under construction" },
		 msg21: { "zh_CN": "分", "en_US": "pin" },
		 msg22: { "zh_CN": "历史平均分", "en_US": "All reivews average score" }
	 },
	 currentEnv: "prod",
	 //组件是否已生成
	 UIinitailed: 0,
	 //是否初始化入口组件，不传入默认为是，传入0表示否； 
	 initcomponent: 1,
	 //组件的层高度
	 componentzindex: 1000000000000,
	 //是否显示相应图标功能
	 //是否显示机器人按钮，1为显示，当initcomponent为0该参数无效;
	 showusp: 1,
	 //是否显示点赞按钮，1为显示，当initcomponent为0该参数无效;
	 showgood: 1,
	 //是否显示吐槽按钮，1为显示，当initcomponent为0该参数无效;
	 showbad: 1,
	 //是否显示求助，1为显示，当initcomponent为0该参数无效;
	 showhelp: 1,
	 //是否显示页面评分按钮，1为显示，当initcomponent为0该参数无效;
	 showrank: 1,
	 //是否显示我的服务列表，1为显示，当initcomponent为0该参数无效;
	 showserv: 1,
	 //modify by 20150714 社区图标默认不显示 start
	 showcomm: 0,
	 //modify by 20150714 社区图标默认不显示 end
	 //应用AppId
	 appId: "",
	 appIdVersion: "A",//租户版本
	 //应用客服修改的AppId，有值时将该值作为客服appid
	 customServiceAppId: "",
	 //中英文
	 locale: "en_US",
	 //来源url
	 sourceURL: "",
	 //来源url（不带参数）
	 sourceURLNoParameters: "",
	 //应用页面
	 pageCode: "",
	 //应用页面域名
	 pageFieldId: "",
	 //搜索关键字
	 keyword: "",
	 kapian: {
		 resourceId: "",//卡片id
		 version: '',//卡片版本
		 messageType: 1
	 },
	 //组件与页面右侧距离，与下侧距离
	 //modify by 40->0
	 componentRight: 0,
	 //modify by 20150929  修改组件默认显示高度 start
	 componentBottom: 218,
	 //modify by 20150929 修改组件默认显示高度 end
	 //入口图标背景颜色范围：1-蓝色；2-红色；3-黄色；
	 bgcolorRange: "1,2,3,",
	 //入口图标默认背景颜色(蓝色)
	 bgcolor: 1,
	 //扩展属性1-10
	 attribute1: "",
	 attribute2: "",
	 attribute3: "",
	 attribute4: "",
	 attribute5: "",
	 attribute6: "",
	 attribute7: "",
	 attribute8: "",
	 attribute9: "",
	 attribute10: "",
	 userAccount: "",
	 goodUIbtn: false,
	 badUIbtn: false,
	 isDbClick: false,
	 sumbitGoodFeedbackCkick: false,
	 sumbitBadFeedbackCkick: false,
	 scriptClassName: "ihelpCreateScriptClassName",
	 w3Account: "",
	 w3Tel: false,
	 w3TelVal: "",
	 customBottomSpan: [],//动态按钮集合,addCustomControl,这个动态添加数据的方法
	 addihelpitemArr: [],
	 hasAdded: false,//已经执行过增加组件操作的标识
	 hasDeled: false,//已经执行过删除组件操作的标识
	 invokedOrNot: false,//时候调用后台方法，默认调用后台方法
	 uspProOpenObj: {
		 titleNumber: 1, //加载次数标识
		 appIdArrStr: '',//已接入的appid集合
		 appIdHrefMap: '',//appIdhref键值对集合
		 appIdHideShowBolArr: {},
		 locHrefMap: '',//记录打开的页面路径集合，为过滤后台请求做准备
		 locHrefKey: '',//记录打开的页面路径集合KEY，为过滤后台请求做准备
		 locHrefMapValueNum: '',//记录打开的页面路径集合次数
		 Producthideshowbol: false,//判断接入的产品是否展示，默认不展示
		 maxOpenNum: 2000,//maxOpenNum最大打开次数
		 maxOpenHrefBol: false,//maxOpenHrefBol是否达到最大打开数
		 addNewHrefHttpBol: false,//新加的HTTP请求，是否需要向后台请求
		 uspJavascript: 'uspJavascript',
		 uspJavascriptJalor: 'uspJavascriptJalor',
		 uspJavascriptNginx: 'uspJavascriptNginx',
		 insuranceBol: false,//熔断机制参数
		 insuranceTimeNum: 30,//熔断时间，默认30（分钟）
		 insuranceStartDate: new Date().getTime(),
		 //		permissionArr:['M007121','M001490'],//灰度权限集合
		 iframeArr: ['M000026', 'M001351', 'M002044', 'M001922', 'M001879', 'M001916', 'M000557', 'M000673', 'M011120', 'M013661', 'M003576', 'M022180', 'M011942', 'M000729'],
		 RefreshDay: "",//按天刷新
		 ButtonConfig: ''//按钮配置
	 },
	 version: {
		 //版本 vsBappId B版APPID
		 vsBappId: ['User_Support_Platform', 'virtual_app_ihelp0000010', 'User_Support_Platform', 'M001411', 'M001412', 'M001415', 'M001490', 'M001702', 'M003501', 'M007121', 'M007862', 'M008001', 'M016160', 'M020960', 'M021660'],
		 //		w3OrAppArr:['M004543','M004546','M000735'],//进展点击跳转外网权限灰度
		 ButtonConfig: '',//组件按钮配置//1客服，2评价，3进展，4建议，5提单，6社区
		 butPlugInArr: '', //组件需要展示的按钮
		 plugIn: '',
		 customizationBtnArr: []//自定义按钮数据
	 },
	 ihelp_Switch: {//开关对象
		 keepUrlBol: false,//组件是否开启收集URL,默认不开启
		 proEvaBol: false//主动邀请评价开关，组件是否开启主动邀请评价功能		
	 },
	 ihelp_num: {//组件数值对象
		 hotClickNum: 0,//主动评价单击次数
		 newClickNum: 0,//箭头单击次数
		 repeatEvaTime: 0//重复提交时间
	 },
	 ihelp_locStr: {//主动邀请评价缓存对象
		 newBol: false,
		 hotBol: false,
		 oldEvaBol: null//记录上一次的开关值
	 },
 
	 normalWidth: window.innerWidth,
	 normalHeight: window.innerHeight,
	 uspJSLocation: {},//记录组件位置
	 showMainPanelOnly: function()//只显示当前页面主体区内容，这里隐藏所有非主体区
	 {
		 $S("#c_layout").width("98%");
		 $S("#W3AppTop_gray_Bar").hide();
		 $S("#W3AppTop_Header").hide();
		 $S("#jalor_page_nav").hide();
		 $S("#leftPanel").hide();
		 $S("#midPanel").hide();
		 $S("#s_switch_role").hide();
		 $S("#W3Appfooter").hide();
		 $S("#resizeWorkSpace").hide();
	 },
	 searchByKeyword: function(akeyword) {//执行查询
		 uspJS.keyword = akeyword;
		 uspJS.openOnlineSupportWindow();
		 uspJS.keyword = "";//清空keyword内容
	 },
	 setKeyword: function(akeyword) {
		 uspJS.keyword = akeyword;
	 },
	 setlocale: function(alocale) {
 
		 uspJS.locale = alocale;
	 },
	 setAppId: function(aappId) {
		 var reg = new RegExp("[\\u4E00-\\u9FFF]+", "g");
		 if (!reg.test(aappId)) {
			 uspJS.appId = aappId;
		 }
	 },
	 setCustomServiceAppId: function(aappId) {
		 uspJS.customServiceAppId = aappId;
	 },
	 setPageCode: function(apageCode) {
		 uspJS.pageCode = apageCode;
	 },
	 setComponentRight: function(rightSpace) {
		 uspJS.componentRight = rightSpace;
	 },
	 setComponentBootom: function(bootomSpace) {
		 uspJS.componentBottom = bootomSpace;
	 },
	 setAttribute1: function(attribute1) {
		 uspJS.attribute1 = attribute1;
	 },
	 setAttribute2: function(attribute2) {
		 uspJS.attribute2 = attribute2;
	 },
	 setAttribute3: function(attribute3) {
		 uspJS.attribute3 = attribute3;
	 },
	 setAttribute4: function(attribute4) {
		 uspJS.attribute4 = attribute4;
	 },
	 setAttribute5: function(attribute5) {
		 uspJS.attribute5 = attribute5;
	 },
	 setAttribute6: function(attribute6) {
		 uspJS.attribute6 = attribute6;
	 },
	 setAttribute7: function(attribute7) {
		 uspJS.attribute7 = attribute7;
	 },
	 setAttribute8: function(attribute8) {
		 uspJS.attribute8 = attribute8;
	 },
	 setAttribute9: function(attribute9) {
		 uspJS.attribute9 = attribute9;
	 },
	 setAttribute10: function(attribute10) {
		 uspJS.attribute10 = attribute10;
	 },
	 getUrlParameterValue: function(asName, lsURL) {
		 loU = lsURL.split("?");
		 if (loU.length > 1) {
			 var loallPm = loU[1].split("&");
			 for (var i = 0; i < loallPm.length; i++) {
				 var loPm = loallPm[i].split("=");
				 if (loPm[0] == asName) {
					 if (loPm.length > 1) {
						 return loPm[1];
					 } else {
						 return "";
					 }
				 }
			 }
		 }
		 return null;
	 },
	 //加载系统的URL参数
	 initSystemURL: function() {
		 //给各个url赋值
		 if (uspConfig.netmodel == "1") { // 外网访问
			 uspJS.onlineSupportURLHost = uspConfig.onlineSupportURLHostOutNet;
			 uspJS.uspServiceHost = uspConfig.uspServiceHostOutNet;
			 uspJS.imgUrl.host = uspConfig.uspJSImgHostOutNet;
			 //提取入口服务地址路径
			 uspJS.uspPortalServiceHost = uspConfig.uspPortalServiceHostOutNet;
		 } else { // 内网访问
			 uspJS.onlineSupportURLHost = uspConfig.onlineSupportURLHost;
			 uspJS.uspServiceHost = uspConfig.uspServiceHost;
			 uspJS.imgUrl.host = uspConfig.uspJSImgHost;
			 //提取入口服务地址路径
			 uspJS.uspPortalServiceHost = uspConfig.uspPortalServiceHost;
		 }
	 },
	 //刷新参数,获取当前引入ihelp系统传过来的参数
	 refreshParameters: function(elementId) {
		 try {
			 if (uspJS.isNull(elementId)) {
				 return;
			 }
			 //创建样式
			 //		var v = document.getElementById("uspJavascript");
			 var v = document.getElementById(elementId);
			 //下面的name是url中的参数名
			 uspJS.appId = uspJS.getJSParamValue("appid", v);
 
			 //从pagecode域中获取pagecode
			 uspJS.pageFieldId = uspJS.getJSParamValue("pagefieldid", v);
			 if (uspJS.pageFieldId != null) {
				 uspJS.pageCode = document.getElementsById(uspJS.pageFieldId).value;
				 //alert(uspJS.pageCode);
			 }
			 //入口图标背景色
			 var bg_color = uspJS.getJSParamValue("bgcolor", v);
			 if (bg_color != null && uspJS.bgcolorRange.indexOf(bg_color + ",") > -1) {
				 //uspJS.bgcolor = bg_color;
				 uspJS.bgcolor = 1;
			 }
			 //直接从参数中获取pagecode
			 uspJS.initcomponent = uspJS.getJSParamValue("initcomponent", v) || uspJS.initcomponent;
			 uspJS.locale = uspJS.getJSParamValue("locale", v) || uspJS.locale;
			 var localval = uspJS.getJSParamValue("locale", v);
			 if (localval) {
				 uspJS.locale = localval.toLowerCase() == 'zh_cn' || localval.toLowerCase() == 'zh' ? 'zh_CN' : 'en_US';
			 } else {
				 uspJS.locale = 'en_US';
			 }
 
			 uspJS.keyword = uspJS.getJSParamValue("keyword", v);
 
			 uspJS.kapian.resourceId = uspJS.getJSParamValue("resourceId", v);
 
			 uspJS.kapian.version = uspJS.getJSParamValue("version", v);
 
			 uspJS.pageCode = uspJS.getJSParamValue("pagecode", v);
 
			 uspJS.showusp = uspJS.getJSParamValue("showusp", v);
 
			 uspJS.showgood = uspJS.getJSParamValue("showgood", v);
 
			 uspJS.showbad = uspJS.getJSParamValue("showbad", v);
 
			 uspJS.showhelp = uspJS.getJSParamValue("showhelp", v);
 
			 uspJS.showrank = uspJS.getJSParamValue("showrank", v);
 
			 uspJS.showserv = uspJS.getJSParamValue("showserv", v);
 
			 uspJS.showcomm = uspJS.getJSParamValue("showcomm", v);
			 // 后添加
			 uspJS.currentEnv = uspJS.getJSParamValue("currentEnv", v);
			 // 后添加
			 uspJS.userAccount = uspJS.getJSParamValue("userAccount", v);
			 // 后添加
			 uspJS.sourceURL = uspJS.getJSParamValue("sourceURL", v);
 
			 uspJS.attribute1 = decodeURI(uspJS.getJSParamValue("attribute1", v));
 
			 uspJS.attribute2 = decodeURI(uspJS.getJSParamValue("attribute2", v));
 
			 uspJS.attribute3 = decodeURI(uspJS.getJSParamValue("attribute3", v));
 
			 uspJS.attribute4 = decodeURI(uspJS.getJSParamValue("attribute4", v));
 
			 uspJS.attribute5 = decodeURI(uspJS.getJSParamValue("attribute5", v));
 
			 uspJS.attribute6 = decodeURI(uspJS.getJSParamValue("attribute6", v));
 
			 uspJS.attribute7 = decodeURI(uspJS.getJSParamValue("attribute7", v));
 
			 uspJS.attribute8 = decodeURI(uspJS.getJSParamValue("attribute8", v));
 
			 uspJS.attribute9 = decodeURI(uspJS.getJSParamValue("attribute9", v));
 
			 uspJS.attribute10 = decodeURI(uspJS.getJSParamValue("attribute10", v));
 
			 //modify by yanxiaoyong 开放位置参数为URL链接可传递 start
			 uspJS.componentRight = uspJS.getJSParamValue("componentRight", v);
 
			 uspJS.componentBottom = uspJS.getJSParamValue("componentBottom", v);
			 //modify by yanxiaoyong 开放位置参数为URL链接可传递 end
 
			 //获取到社区入口的URL路径
			 uspJS.myCommunityURL = uspJS.getJSParamValue("myCommunityURL", v);
			 uspJS.componentzindex = uspJS.getJSParamValue("componentzindex", v) || uspJS.componentzindex;
		 } catch (e) { }
 
	 },
	 initUI: function() {
		 try {
				uspJS.addIhelpHTMLStyle();//添加样式
				//创建之前先清除存在的
				var uspyanobj = document.getElementById("usp_yan");
				if (uspyanobj) {//判断是否已经有了组件
					var uspyanparent = uspyanobj.parentElement.removeChild(uspyanobj);//uspyanobj.parentNode;
				}
				uspJS.versionHtml();
				if (uspJS.ihelp_Switch.keepUrlBol) {
					uspJS.getOpenHtmlUrl();//开始收集URL
				}
		 } catch (e) { }
	 },
	 ihelpHideShow: function() {//判断组件初始化的时候，展示隐藏
		 try {
			 document.getElementById("usp_arrowIconHideTitle_i").setAttribute("class", "icon5_false");
			 // 获取通过cookie及localStorage
			 var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 !uspJS.isNull(uspJS.getCookie('usphidden')) && localStorage.setItem('usphidden', uspJS.getCookie('usphidden'));
			 if (uspJS.isNull(getusphiddencookie)) {
				 // if (uspJS.isNull(uspJS.getCookie('usphidden'))) {
				 var proxyval = localStorage.getItem("ihelp_portal_index_showhide");
				 if (!uspJS.isNull(proxyval)) {
					 proxyval = JSON.parse(proxyval);
					 proxyval = proxyval["usphidden" + uspJS.appId];
					 "true" == proxyval ? document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "show") : document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "hide");
				 }
			 }
			 uspJS.getIhelpHiddenshow();
		 } catch (e) { }
	 },
	 addIhelpHTMLStyle: function() {//添加组件样式
		 try {
			 var r0 = uspJS.componentRight || 0, b0 = uspJS.componentBottom || 218;
			 //根据bottom获取top;
			 var totalPortalHeight = uspYanHeightOfHide;
 
			 if (uspJS.showusp == 1 || uspJS.showusp == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showrank == 1 || uspJS.showrank == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showserv == 1 || uspJS.showserv == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showgood == 1 || uspJS.showgood == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showbad == 1 || uspJS.showbad == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showhelp == 1 || uspJS.showhelp == null) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 if (uspJS.showcomm == 1) {
				 totalPortalHeight += singlePortalHeight;
			 }
			 //计算TOP
			 var ct0 = uspJS.findDimensionsHeight() - totalPortalHeight - b0;
			 var indexStyle = '_position: absolute;_top:expression(document.documentElement.scrollTop + ' + ct0 + ' + \'px\');';
 
			 // var indexInfo = !uspJS.isNull(uspJS.getCookie("ihelp_portal_index_" + uspJS.appId)) ? uspJS.getCookie("ihelp_portal_index_" + uspJS.appId) : localStorage.getItem("ihelp_portal_index_" + uspJS.appId);
			 // !uspJS.isNull(uspJS.getCookie("ihelp_portal_index_" + uspJS.appId)) && localStorage.setItem("ihelp_portal_index_" + uspJS.appId, uspJS.getCookie("ihelp_portal_index_" + uspJS.appId));
			 
 
			 var appidPortalValCookie = uspJS.getCookie("ihelp_portal_index_" + uspJS.appId);
			 var appidPortalValLoc = localStorage.getItem("ihelp_portal_index_" + uspJS.appId);
			 // 获取通过cookie及localStorage
			 var indexInfo = !uspJS.isNull(appidPortalValCookie) ? appidPortalValCookie : appidPortalValLoc;
			 indexInfo = appidPortalValCookie === appidPortalValLoc ? indexInfo : appidPortalValLoc;
			 if (indexInfo != null && indexInfo != "") {
				 //位置信息
				 var left = indexInfo.split("_")[0];
				 var top = indexInfo.split("_")[1];
				 var topNoPx = top.replace("px", "");
				 //如果位置信息不为初始化，则设置此cookie位置
				 if (left != "init") {
					 //设置位置信息
					 indexStyle = 'left:' + left + '; _top:expression(document.documentElement.scrollTop + ' + topNoPx + ' + \'px\');';
				 }
			 } else {
				 //第一次加载入口组件，将初始位置信息缓存
				 uspJS.cachePortalMoveAction("ihelp_portal_index_" + uspJS.appId, "init_init_block");
			 }
			 var sttt = document.createElement('style');
			 sttt.type = 'text/css';
			 var imgurlB1 = uspConfig.uspPortalServiceHost + uspConfig.imgUrlArr.urlB1 + '?v=' + uspConfig.version;
			 var imgurlB = uspConfig.uspPortalServiceHost + uspConfig.imgUrlArr.urlB + '?v=' + uspConfig.version;
			 var imgurlA = uspConfig.uspPortalServiceHost + uspConfig.imgUrlArr.urlA + '?v=' + uspConfig.version;
			 //修改图片路径为服务器指定绝对路径，不取相对路径
			 var stex = '#usp_z{display:block;} _background-image{url(about:blank);} _background-attachment{fixed;} '
				 + '#usp_bedeck_bottom_img{margin:auto;position:relative;bottom: 5px;} '
				 + '#usp_bedeck_top_img{margin:auto;position:relative;top: 5px;} '
				 + '#usp_entrance_ul li span{/*border:0px solid #F1F1F1;*/}'
				 + '#usp_yan{display:none;height:auto;width: 42px;text-align: center;position:fixed;_position:absolute; ' + indexStyle + ' _margin-bottom:0px;font-size: 12px; z-index: ' + uspJS.componentzindex + '}'
				 + '#usp_yan .usp-entrance ul{width:42px !important;box-shadow: 0px 0px 10px #D9D9D9;-moz-box-shadow: 0px 0px 10px #D9D9D9;-webkit-box-shadow: 0px 0px 10px #D9D9D9;}'
				 + '#usp_yan .usp-entrance ul li a .usp_evaluate_bad_2 i,#usp_yan .usp-entrance ul li .uspJs_Billoflading i,'
				 + '#usp_yan .usp-entrance ul li .uspJs_Community i{background: url(' + imgurlB + ') no-repeat;}'
				 + '#usp_yan .usp-entrance ul li a .usp_evaluate_bad_3 i,#usp_yan #ihelp_usp_anliopenHTML ul#ihelp_usp_anliopenHTML_ul li .usp_evaluate_bad_3 i{background: url(' + imgurlB1 + ') no-repeat;background-size: 229px 855.5px;}'
				 + '#arrowIconSpanV2 i, .entrance_icon i ,#usp_yan .bgcolor_1 ul li a span i{background-image: url(' + imgurlA + ');background-repeat: no-repeat;}'
				 + '#usp_yan #arrowIconSpanV2 i{background-position: -159px -17px;}'
				 + '#usp_yan #usp_arrowIconHideTitle i#usp_arrowIconHideTitle_i {background-image: url(' + imgurlB + ');background-repeat: no-repeat;}'//background-position: -266.5px -265px;
				 + '#usp_yan #usp_arrowIconHideTitle i.icon5_true {background-position: -266.5px -265px;}'
				 + '#usp_yan #usp_arrowIconHideTitle i.icon5_false {background-position: -310.5px -220px;}'
				 + '#usp_yan #evaluateUl li.evaluateTip{background: url(' + imgurlB + ') no-repeat;background-position: -148px -286.5px;}'
				 + '#usp_yan #usp_arrowIconHideTitle i.usp_title_icon_new{background: url(' + imgurlB + ') no-repeat;background-position: -262px -331px;}'
				 + '#usp_yan #usp_ihelp_Pingjia i.usp_evaluation_icon_hot{background: url(' + imgurlB + ') no-repeat;background-position: -262px -311px;}'
				 + '.usp_yan_class{right:3px;}';
			 if (/ie/i.test(navigator.appVersion)) {
				 try {
					 sttt.styleSheet.cssText = stex;
				 } catch (e) {
					 sttt.innerHTML = stex;
				 }
			 } else {
				 sttt.innerHTML = stex;
			 }
			 document.getElementsByTagName('head')[0].appendChild(sttt);
		 } catch (e) {
			 console.log(e);
		 }
	 },
	 versionHtml: function() {//判断走的版本
		 try {
			 uspJS.getPlugInArr();//获取租户版本（A/B），及按钮个数
			 var vsBBol = false;
			 vsBBol = uspJS.appIdVersion == "B" ? true : false;
			 try {
				 if ("virtual_app_uniknow0000818" == uspJS.appId) {
					 vsBBol = true;
				 }
				 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
				 if (uspJS.appId === "M001789" && valnum != -1) {// sso租户内外网分离，外网写死一个按钮，并且免登
					 vsBBol = true;
				 }
				 uspJS.getAnonymousVal()
			 } catch (e) { }
			 vsBBol ? uspJS.versionBHtml() : uspJS.versionAHtml();
			 // 获取通过cookie及localStorage
			 //			var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 var getusphiddencookie = uspJS.getUspHiddenVal();
			 vsBBol ? uspJS.ihelpHideShow() : "true" == getusphiddencookie ? uspJS.getIhelpBlockContent() : uspJS.getIhelpHiddenAContent();//判断组件初始化的时候，展示隐藏
			 uspJS.UIinitailed = 1;//标识组件已生成
			 uspJS.getObjdragHandle();
 
 
			 setTimeout(function() {
				 uspJS.getInitLocation();
			 }, 1000);
			 uspJS.initNewHot();
			 for (var i = 10; i > 0; i--) {//清除不规范的自定义组件
				 setTimeout(function() {
					 uspJS.delPersonalizedli();
				 }, 100);
			 }
		 } catch (e) { }
	 },
	 /**
		* 动态邀请评价的各种状态
		*/
	 getihelpNewHotLocStr: function(newHotStr) {
		 try {
			 var newobjbol = document.getElementById("usp_arrowIconHideTitle_i");
			 newobjbol = newobjbol.getAttribute("class") == "icon5_true" ? false : true;
			 var ihelp_locStr = localStorage.getItem("ihelp_newhot_obj_" + uspJS.appId);
			 if (!uspJS.isNull(ihelp_locStr)) {//有缓存的情况
				 ihelp_locStr = JSON.parse(ihelp_locStr)
			 } else {//没有缓存的情况
				 ihelp_locStr = uspJS.ihelp_locStr;
				 ihelp_locStr.newBol = uspJS.ihelp_Switch.proEvaBol && newobjbol;//NEW的状态
				 ihelp_locStr.hotBol = uspJS.ihelp_Switch.proEvaBol;//HOT的状态
				 ihelp_locStr.oldEvaBol = uspJS.ihelp_Switch.proEvaBol;//记录上一次 的开关值
			 }
			 //判断上一次的开关值是否跟当前的开关值一样，如果一样说明开关值没变，如果不一样则开关值发生变化，以新的开关值为准
			 if (!uspJS.ihelp_Switch.proEvaBol == ihelp_locStr.oldEvaBol) {
				 ihelp_locStr.newBol = uspJS.ihelp_Switch.proEvaBol && newobjbol;//NEW的状态
				 ihelp_locStr.hotBol = uspJS.ihelp_Switch.proEvaBol;//HOT的状态
				 ihelp_locStr.oldEvaBol = uspJS.ihelp_Switch.proEvaBol;//记录上一次 的开关值
			 }
			 if (!uspJS.isNull(newHotStr) && newHotStr == "newBol") {
				 ihelp_locStr.newBol = false;
			 }
			 if (!uspJS.isNull(newHotStr) && newHotStr == "hotBol") {
				 ihelp_locStr.hotBol = false;
			 }
			 uspJS.ihelp_locStr = ihelp_locStr;
			 localStorage.setItem("ihelp_newhot_obj_" + uspJS.appId, JSON.stringify(ihelp_locStr));
		 } catch (e) { }
	 },
	 versionAHtml: function() {
		 try {
			 //创建结构
			 var yan = document.createElement('div');
			 yan.id = "usp_yan";
			 yan.setAttribute("class", "usp_yan_class");
			 var z = document.createElement('div');
			 z.id = "usp_z";
			 yan.appendChild(z);
 
			 var z1 = document.createElement('div');
			 z1.id = "usp_z1";
			 z1.innerHTML = '';
			 var entranceHtml = "";
			 // addby 2015.9.14 start
			 entranceHtml += '<div class="usp-entrance bgcolor_' + uspJS.bgcolor + '">';
			 // addby 2015.9.14 end
			 entranceHtml += '<div id="goodBtnTips" style="font-size:14px;position:absolute;height:30px;margin-top:7px;border:1px #292727;background:#e1e1e1;line-height:32px;display:inline-block;left: -200px;padding: 0px 15px;visibility:hidden;">点赞成功，感谢您的评价</div>' +
				 '<div id="badBtnTips" style="position:absolute;width:160px;margin-left: -157px;height:30px;margin-top:47px;border:1px #292727;background:#e1e1e1;line-height:32px;display:inline-block;visibility:hidden;"></div>' +
				 '<ul id="usp_entrance_ul">';
			 entranceHtml += '<li id="usp_ihelp_CustomerSpan" class="entrance_icon" tipss="delli" name="entrance_icon"><a onclick="uspJS.openOnlineSupportWindow();" title=""><span class="usp-it-icon" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i></i><p class="CustomerSpan" >' + uspJS.CustomerSpan[uspJS.locale || 'en_US'] + '</p></span></a></li>';
 
			 var ifrUrl = uspJS.uspServiceHost + uspJS.evaluateFeedbackService + "?appid=" + uspJS.appId + "&userAccount=" + uspJS.userAccount || "";
			 //递增导航箭头展开之后并去除箭头的高度 
			 uspYanDivRemoveArrowTop += singlePortalHeight;
 
			 //修改图片路径为服务器指定绝对路径，不取相对路径
			 entranceHtml += '<li id="usp_ihelp_Yijian" class="entrance_icon" tipss="delli" name="entrance_icon">' +
 
				 '<a id="evaluateBadImga" onclick="uspJS.openOpinionHTML();"  title="">' +
				 '<span id="evaluateBadImg" class="usp_evaluate_bad_' + uspJS.bgcolor + '" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i class="tip" style="top:3px !important;" ></i><p class="OpinionSpan" >' + uspJS.OpinionSpan[uspJS.locale || 'en_US'] + '</p></span></a></li>';
 
			 //递增导航箭头展开之后并去除箭头的高度 
			 uspYanDivRemoveArrowTop += singlePortalHeight;
 
			 entranceHtml += '<li id="usp_ihelp_jinzhan" class="entrance_icon" tipss="delli" name="entrance_icon">' +
				 '<a id="evaluateBadImga_03" onclick="uspJS.openMyServiceListWindow();"  title="">' +
				 '<span class="usp-it-icon-03" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i id="serviceOrders" ></i><p class="ProgressSpan" >' + uspJS.ProgressSpan[uspJS.locale || 'en_US'] + '</p></span></a></li>';
			 entranceHtml += '<li id="entrance_icon_block" tipss="delli" class="entrance_icon d_n" name="entrance_icon" onclick="uspJS.getIhelpBlock()" ><span id="arrowIconSpanV2" class="ullispanhidden2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i></i><p class="CustomerSpan" >' + uspJS.CustomerSpan[uspJS.locale || 'en_US'] + '</p></span></li>';
			 entranceHtml += '<li id="usp_arrowIconHideTitle" class="entrance_icon" tipss="delli" name="entrance_icon" onclick="uspJS.getIhelpHiddenA()" ><span class="ullispanhidden" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><p class="arrowIconHideTitle" >' + uspJS.arrowIconHideTitle[uspJS.locale || 'en_US'] + '</p></span></li>';
			 entranceHtml += '</ul>';
			 entranceHtml += '</div>';
			 z1.innerHTML = entranceHtml;
			 z.appendChild(z1);
			 if (document.getElementsByTagName('body')[0] == undefined) {//兼容PPM产品使用了frameset 没有使用body标签的情况     
				 document.lastChild.appendChild(yan);
			 } else {
				 document.getElementsByTagName('body')[0].appendChild(yan);
			 }
		 } catch (e) { }
	 },
	 versionBHtml: function() {
		 try {
			 //创建结构
			 var yan = document.createElement('div');
			 yan.id = "usp_yan";
			 yan.setAttribute("class", "usp_yan_class");
			 var z = document.createElement('div');
			 z.id = "usp_z";
			 yan.appendChild(z);
			 //B 1客服，2评价，3进展，4建议，5提单，6社区
			 //A 1客服，2意见，3进展   
			 var z1 = document.createElement('div');
			 z1.id = "usp_z1";
			 z1.innerHTML = '';
			 var entranceHtml = "";
			 entranceHtml += '<div class="usp-entrance bgcolor_' + uspJS.bgcolor + '">';
			 entranceHtml += '<div id="goodBtnTips" style="font-size:14px;position:absolute;height:30px;margin-top:7px;border:1px #292727;background:#e1e1e1;line-height:32px;display:inline-block;left: -200px;padding: 0px 15px;visibility:hidden;">点赞成功，感谢您的评价</div>' +
				 '<div id="badBtnTips" style="position:absolute;width:160px;margin-left: -157px;height:30px;margin-top:47px;border:1px #292727;background:#e1e1e1;line-height:32px;display:inline-block;visibility:hidden;"></div>' +
				 '<ul id="usp_entrance_ul">';
			 try {
				 if ("virtual_app_uniknow0000818" == uspJS.appId) {
					 uspJS.version.butPlugInArr = ["1"];
				 }
				 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
				 if (uspJS.appId === "M001789" && valnum != -1) {// sso租户内外网分离，外网写死一个按钮，并且免登
					 uspJS.version.butPlugInArr = ["1"];
				 }
			 } catch (e) { }
			 uspJS.setCustomizationBtnArr();
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "1"://1客服
						 entranceHtml += uspJS.kefu();
						 break;
					 case "2"://2评价
						 entranceHtml += uspJS.pingjia();
						 break;
					 case "3"://3进展
						 entranceHtml += uspJS.jinzhan();
						 break;
					 case "4"://4建议
						 entranceHtml += uspJS.jianyi();
						 break;
					 case "5"://5提单
						 entranceHtml += uspJS.tidanHtml(uspJS.version.plugIn.url5);
						 break;
					 case "6"://6社区
						 entranceHtml += uspJS.shequHtml(uspJS.version.plugIn.url6);
						 break;
					 case "7"://7案例
						 entranceHtml += uspJS.anli.anliHtml();
						 break;
					 default:
						 entranceHtml += uspJS.definedConfigsHtml(uspJS.version.butPlugInArr[i]);
				 }
			 }
 
			 //因为A版有一部分产品直接用id="evaluateBadImga"这个ID，去删除我们组件的元素，所以B版需要加一个这样的元素，以免租户升级之后自定义的代码报错无法执行
			 //			entranceHtml += '<li tipss="delli" class="entrance_icon d_n" name="entrance_icon" ><span id="evaluateBadImga" ></span></li>';
			 entranceHtml += '<li id="entrance_icon_block" tipss="delli" class="entrance_icon d_n" name="entrance_icon" ></li>';
			 entranceHtml += '<li id="usp_arrowIconHideTitle" class="entrance_icon" tipss="delli" name="entrance_icon" onclick="uspJS.getIhelpHidden()" >'
				 + '<span class="ullispanhidden usp-it-icon-03" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >'
				 + '<i id="usp_arrowIconHideTitle_i" class="icon5_true" ></i>'
				 + '<i id="usp_title_icon_new" class="usp_title_icon_new d_n" ></i></span></li>';
			 entranceHtml += '</ul>';
			 entranceHtml += '</div>';
			 z1.innerHTML = entranceHtml;
			 z.appendChild(z1);
			 if (document.getElementsByTagName('body')[0] == undefined) {//兼容PPM产品使用了frameset 没有使用body标签的情况 
				 document.lastChild.appendChild(yan);
			 } else {
				 document.getElementsByTagName('body')[0].appendChild(yan);
			 }
			 //			if(uspJS.version.butPlugInArr.length<=0){//communityUrl 社区路径 	billofladingUrl 提单路径
			 //				return;
			 //			}
			 //			for(var i=0,l=uspJS.version.butPlugInArr.length;i<l;i++){
			 //				switch(uspJS.version.butPlugInArr[i]){					
			 //					case "5"://5提单
			 //						uspJS.tidan(uspJS.version.plugIn.url5);
			 //						break;
			 //					case "6"://6社区
			 //						uspJS.shequ(uspJS.version.plugIn.url6);
			 //						break;
			 //				}
			 //			}
 
		 } catch (e) { }
	 },
	 getPlugInArr: function() {
		 try {
			 if (!uspJS.isNull(uspJS.version.ButtonConfig)) {
				 //				for(var i=0,l=uspJS.version.ButtonConfig.length;i<l;i++){
				 //					if(uspJS.appId== uspJS.Base64.decode(uspJS.version.ButtonConfig[i].moduleID)){
				 //						uspJS.version.plugIn = uspJS.version.ButtonConfig[i];
				 //					}
				 //				}
				 var plobjArr = JSON.parse(JSON.stringify(uspJS.version.ButtonConfig));
				 for (var i = 0, l = plobjArr.length; i < l; i++) {
					 if (uspJS.appId == uspJS.Base64.decode(plobjArr[i].moduleID)) {
						 uspJS.version.plugIn = plobjArr[i];
					 }
				 }
			 }
			 if (!uspJS.isNull(uspJS.version.plugIn)) {
				 uspJS.appIdVersion = uspJS.version.plugIn.ver;
				 try {
					 uspJS.ihelp_Switch.keepUrlBol = uspJS.version.plugIn.keepUrl == 1 ? true : false;
				 } catch (e) { }
				 try {
					 uspJS.version.plugIn.moduleID = uspJS.Base64.decode(uspJS.version.plugIn.moduleID);//解码
				 } catch (e) { }
				 try {
					 uspJS.version.butPlugInArr = uspJS.version.plugIn.plugIn.split('-');
				 } catch (e) { }
				 uspJS.ihelp_Switch.proEvaBol = uspJS.version.plugIn.isHot == 1 ? true : false || false;
				 if (!uspJS.isNull(uspJS.version.plugIn.url5)) {
					 uspJS.version.plugIn.url5 = uspJS.Base64.decode(uspJS.version.plugIn.url5);//解码
				 }
				 if (!uspJS.isNull(uspJS.version.plugIn.url6)) {
					 uspJS.version.plugIn.url6 = uspJS.Base64.decode(uspJS.version.plugIn.url6);//解码
				 }
				 if(!uspJS.isNull(uspJS.version.plugIn.opsInfo)){
					 for(var i=0;i<uspJS.version.plugIn.opsInfo.length;i++){
						 var yfObj = uspJS.version.plugIn.opsInfo[i];
						 if(yfObj.evaluateTag === '流程规则是否合理' || yfObj.evaluateTag === '流程规则/数据是否合理'){
							 uspJS.yfOpsInfo.yfSvgScore1 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
						 if(yfObj.evaluateTag === 'IT工具好不好用'){
							 uspJS.yfOpsInfo.yfSvgScore2 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
						 if(yfObj.evaluateTag === '服务满意度'){
							 uspJS.yfOpsInfo.yfSvgScore3 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
					 }
				 }
			 }
			 if (uspJS.ihelp_Switch.keepUrlBol) {
				 uspJS.getOpenHtmlUrl();//开始收集URL
			 }
		 } catch (e) { }
	 },
	 getUspjsBtnConfigShowHide: function() {//组件按钮配置是否展示隐藏
		 try {
			 if (!uspJS.isNull(uspJS.version.butPlugInArr) && uspJS.version.butPlugInArr.length > 0) {
				 var btnArr = ['1', '2', '3', '4'];
				 for (var btn = 0, btnl = btnArr.length; btn < btnl; btn++) {
 
					 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
						 if (btnArr[btn] == uspJS.version.butPlugInArr[i]) {
							 continue;
						 }
						 switch (btnArr[btn]) {
							 //							case "1"://1客服
							 //								document.getElementById("usp_ihelp_CustomerSpan").setAttribute("style","display:none;");
							 //								break;
							 case "2"://2评价
								 document.getElementById("usp_ihelp_Pingjia").setAttribute("style", "display:none;");
								 break;
							 case "3"://3进展
								 document.getElementById("usp_ihelp_jinzhan").setAttribute("style", "display:none;");
								 break;
							 case "4"://4建议
								 document.getElementById("usp_ihelp_jianyi").setAttribute("style", "display:none;");
								 break;
						 }
					 }
				 }
			 }
		 } catch (e) { }
	 },
	 kefu: function() {//1客服
		 try {
			 var CustomerSpanHtml = '<li id="usp_ihelp_CustomerSpan" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:block;" >';
			 if (!uspJS.isNull(uspJS.version.plugIn) && !uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
				 CustomerSpanHtml += '<a onclick="uspJS.openOnlineSupportWindow();" onmouseover="uspJS.ihelpItemTitleMouseover(\'usp_ihelp_CustomerSpan\',\'' + uspJS.ihelpItemTitle.CustomerSpan[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'usp_ihelp_CustomerSpan\')" >';
			 } else {
				 CustomerSpanHtml += '<a onclick="uspJS.openOnlineSupportWindow();" >';
			 }
			 //			CustomerSpanHtml += '<a onclick="uspJS.openOnlineSupportWindow();" >';
			 CustomerSpanHtml += '<span class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i class="ihelp_icon1" ></i><p class="CustomerSpan" >' + uspJS.CustomerSpan[uspJS.locale || 'en_US'] + '</p></span></a></li>';
			 return CustomerSpanHtml;
		 } catch (e) {
			 var CustomerSpanHtml = '<li id="usp_ihelp_CustomerSpan" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:block;" >';
			 CustomerSpanHtml += '<a onclick="uspJS.openOnlineSupportWindow();" >';
			 CustomerSpanHtml += '<span class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" ><i class="ihelp_icon1" ></i><p class="CustomerSpan" >' + uspJS.CustomerSpan[uspJS.locale || 'en_US'] + '</p></span></a></li>';
			 return CustomerSpanHtml;
		 }
	 },
	 pingjia: function() {//2评价
		 try {
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var pingjiahtml = '<li id="usp_ihelp_Pingjia" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 //				pingjiahtml = '<li id="usp_ihelp_Pingjia" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 //			}else 
			 if (!uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.buttonFlag) && definedConfigObj.buttonFlag == 'N') {
				 pingjiahtml = '<li id="usp_ihelp_Pingjia" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 }
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "2"://2评价
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
							 pingjiahtml += '<a id="evaluateBadImga" onclick="uspJS.openEvaluationB();" onmouseover="uspJS.ihelpItemTitleMouseover(\'usp_ihelp_Pingjia\',\'' + uspJS.ihelpItemTitle.Appraises[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'usp_ihelp_Pingjia\')" >';
						 } else {
							 pingjiahtml += '<a id="evaluateBadImga" onclick="uspJS.openEvaluationB();"  title="' + uspJS.Appraises[uspJS.locale || 'en_US'] + '">';
						 }
						 //						pingjiahtml += '<a id="evaluateBadImga" onclick="uspJS.openEvaluationB();"  title="">';	
						 pingjiahtml += '<span id="evaluateBadImg" class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
							 '<i id="evaluateBadImgIcon2" class="icon2" ></i>' +
							 '<i id="usp_evaluation_icon_hot" class="usp_evaluation_icon_hot " ></i>' +
							 '<p class="OpinionSpan" >' + uspJS.Appraises[uspJS.locale || 'en_US'] + '</p></span></a>';
						 break;
				 }
			 }
			 pingjiahtml += '</li>';
			 return pingjiahtml;
		 } catch (e) { }
	 },
	 jinzhan: function() {//3进展
		 try {
			 var butflagBuf = uspJS.getbutflagBuf(3);
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var jinzhanhtml = '<li id="usp_ihelp_jinzhan" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 //				jinzhanhtml = '<li id="usp_ihelp_jinzhan" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 //			}else 
			 if (butflagBuf == 'N') {
				 jinzhanhtml = '<li id="usp_ihelp_jinzhan" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 }
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "3"://3进展						
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
							 jinzhanhtml += '<a id="evaluateBadImga_03" onclick="uspJS.openMyServiceListWindow();" onmouseover="uspJS.ihelpItemTitleMouseover(\'usp_ihelp_jinzhan\',\'' + uspJS.ihelpItemTitle.ProgressSpan[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'usp_ihelp_jinzhan\')" >';
						 } else {
							 jinzhanhtml += '<a id="evaluateBadImga_03" onclick="uspJS.openMyServiceListWindow();"  title="' + uspJS.ProgressSpan[uspJS.locale || 'en_US'] + '">';
						 }
						 //						jinzhanhtml +='<a id="evaluateBadImga_03" onclick="uspJS.openMyServiceListWindow();"  title="">';
						 jinzhanhtml += '<span class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
							 '<i class="icon4" ></i><p class="ProgressSpan" >' + uspJS.ProgressSpan[uspJS.locale || 'en_US'] + '</p></span></a>';
						 break;
				 }
			 }
			 jinzhanhtml += '</li>';
			 return jinzhanhtml;
		 } catch (e) { }
	 },//4建议，5提单，6社区
	 jianyi: function() {//4建议
		 try {
			 var butflagBuf = uspJS.getbutflagBuf(4);
			 var jianyihtml = '<li id="usp_ihelp_jianyi" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 //				jianyihtml = '<li id="usp_ihelp_jianyi" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 //			}else 
			 if (butflagBuf == 'N') {
				 jianyihtml = '<li id="usp_ihelp_jianyi" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 }
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "4"://4建议
						 //						jianyihtml +='<a id="evaluateBadImga" onclick="uspJS.openRecommendationURL();"  title="">'+
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
							 jianyihtml += '<a onclick="uspJS.openRecommendationURL();" onmouseover="uspJS.ihelpItemTitleMouseover(\'usp_ihelp_jianyi\',\'' + uspJS.ihelpItemTitle.OpinionSpanAdvice[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'usp_ihelp_jianyi\')" >';
						 } else {
							 jianyihtml += '<a onclick="uspJS.openRecommendationURL();"  title="">';
						 }
						 //						jianyihtml +='<a onclick="uspJS.openRecommendationURL();"  title="">';
						 jianyihtml += '<span id="evaluateBadImg" class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
							 '<i class="icon6" ></i><p class="OpinionSpanAdvice" >' + uspJS.OpinionSpanAdvice[uspJS.locale || 'en_US'] + '</p></span></a>';
						 break;
				 }
			 }
			 jianyihtml += '</li>';
			 return jianyihtml;
		 } catch (e) {
 
		 }
	 },
	 tidanHtml: function(url) {
		 try {
			 if (uspJS.isNull(url)) {
				 return "";
			 }
			 var butflagBuf = uspJS.getbutflagBuf(5);
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var tidanhtml = '<li id="uspJs_Billoflading" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 //				tidanhtml = '<li id="uspJs_Billoflading" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 //			}else 
			 if (butflagBuf == 'N') {
				 tidanhtml = '<li id="uspJs_Billoflading" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
			 }
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "5"://5提单
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
							 tidanhtml += '<a onclick="uspJS.opentidanClick();" onmouseover="uspJS.ihelpItemTitleMouseover(\'uspJs_Billoflading\',\'' + uspJS.ihelpItemTitle.ihelpItemPFBVAL[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'uspJs_Billoflading\')" >';
						 } else {
							 tidanhtml += '<a onclick="uspJS.opentidanClick();"  title="">';
						 }
						 //						tidanhtml +='<a onclick="uspJS.opentidanClick();"  title="">';	
						 tidanhtml += '<span id="Billoflading_span" class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
							 '<i class="icon7" ></i>';
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {//是否研发标识
							 tidanhtml += '<p class="uspJs_Billoflading" >' + uspJS.ihelpItemPFBVAL[uspJS.locale || 'en_US'] + '</p>';
						 } else {
							 tidanhtml += '<p class="uspJs_Billoflading" >' + uspJS.ihelpItemTidan[uspJS.locale || 'en_US'] + '</p>';
						 }
						 tidanhtml += '</span></a>';
						 break;
				 }
			 }
			 tidanhtml += '</li>';
			 return tidanhtml;
		 } catch (e) { }
	 },
	 tidan: function(url) {//5提单
		 try {
			 if (uspJS.isNull(url)) {
				 return;
			 }
			 var butflagBuf = uspJS.getbutflagBuf(5);
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var controlobj = [{ 'id': 'uspJs_Billoflading', 'spanClassName': 'uspJs_Billoflading', 'zh_CN': '提单', 'en_US': 'Billofl', libgurl1: '', libgurl2: '', WhetherHidden: '' }];
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 //				controlobj =[{'id':'uspJs_Billoflading','spanClassName':'uspJs_Billoflading','zh_CN':'反馈','en_US':'FB',libgurl1:'',libgurl2:'',WhetherHidden:''}];
			 //			}else 
			 if (butflagBuf == 'N') {
				 controlobj = [{ 'id': 'uspJs_Billoflading', 'spanClassName': 'uspJs_Billoflading', 'zh_CN': '反馈', 'en_US': 'FB', libgurl1: '', libgurl2: '', WhetherHidden: true }];
			 }
			 uspJS.addCustomControl(controlobj);
			 document.getElementById('uspJs_Billoflading').addEventListener('click', function() {
				 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
					 return;
				 }
				 var openurl = uspJS.uspServiceHost + "servlet/getPlugInPageServlet?urlCode=" + url;
				 if (!uspJS.isNull(uspJS.userDefinedparameter)) {
					 openurl += "&" + uspJS.userDefinedparameter;
				 }
				 var newWin = window.open(openurl);
				 newWin.focus();
			 });
		 } catch (e) { }
	 },
	 opentidanClick: function() {
		 try {
			 uspJS.loadAppidVersionplugIn();//重新获取版本信息
			 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
				 return;
			 }
			 var openurl = uspJS.uspServiceHost + "servlet/getPlugInPageServlet?urlCode=" + uspJS.version.plugIn.url5;
			 if (!uspJS.isNull(uspJS.userDefinedparameter)) {
				 openurl += "&" + uspJS.userDefinedparameter;
			 }
			 var newWin = window.open(openurl);
			 newWin.focus();
			 uspJS.addBuriedPoint('feedback');
		 } catch (e) { }
	 },
	 shequHtml: function(url) {
		 try {
			 if (uspJS.isNull(url)) {
				 return "";
			 }
			 var butflagBuf = uspJS.getbutflagBuf(6);
			 var tidanhtml = '<li id="uspJs_Community" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
			 if (butflagBuf == 'N') {
				 tidanhtml = '<li id="uspJs_Community" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';;
			 }
			 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
				 switch (uspJS.version.butPlugInArr[i]) {
					 case "6"://6社区
						 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
							 tidanhtml += '<a onclick="uspJS.openshequClick();" onmouseover="uspJS.ihelpItemTitleMouseover(\'uspJs_Community\',\'' + uspJS.ihelpItemTitle.ihelpItemCommunity[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'uspJs_Community\')" >';
						 } else {
							 tidanhtml += '<a onclick="uspJS.openshequClick();"  title="">';
						 }
						 //						tidanhtml +='<a onclick="uspJS.openshequClick();"  title="">';
						 tidanhtml += '<span id="Billoflading_span" class="usp_evaluate_bad_2" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
							 '<i class="icon8" ></i><p class="uspJs_Community" >' + uspJS.ihelpItemCommunity[uspJS.locale || 'en_US'] + '</p></span></a>';
						 break;
				 }
			 }
			 tidanhtml += '</li>';
			 return tidanhtml;
		 } catch (e) { }
	 },
	 anli: {//7案例
		 anliobj: { "appid": null, "anlititle": null, "anlist": null, showhide: false },
		 anliHtml: function() {
			 try {
				 uspJS.anli.getCaseButton();
				 uspJS.anli.onhashchange();
				 var butflagBuf = uspJS.getbutflagBuf(7);
				 var anlihtml = '<li id="usp_ihelp_anli" class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" >';
				 if (butflagBuf == 'N') {
					 anlihtml = '<li id="usp_ihelp_anli" class="entrance_icon" tipss="delli" name="entrance_icon" whetherHidden="true" style="display:none;" >';
				 }
				 var ihelpuspanliitipBol = localStorage.getItem("ihelpuspanliitip" + uspJS.appId);
				 var anliitipval = !uspJS.isNull(ihelpuspanliitipBol) && ihelpuspanliitipBol == "false" ? "ihelp_anli_i_tip_false" : "ihelp_anli_i_tip_true";
				 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
					 anlihtml += '<a id="evaluateBadImga_03" class="ihelp_anli_' + uspJS.anli.anliobj.showhide + '" onclick="uspJS.anli.anliHtmlClick();" onmouseover="uspJS.ihelpItemTitleMouseover(\'usp_ihelp_anli\',\'' + uspJS.ihelpItemTitle.ihelpItemCases[uspJS.locale || 'en_US'] + '\')" onmouseout="uspJS.ihelpItemTitleMouseout(\'usp_ihelp_anli\')" >';
				 } else {
					 anlihtml += '<a id="evaluateBadImga_03" class="ihelp_anli_' + uspJS.anli.anliobj.showhide + '" onclick="uspJS.anli.anliHtmlClick();"  title="">';
				 }
				 //				anlihtml +='<a id="evaluateBadImga_03" class="ihelp_anli_'+uspJS.anli.anliobj.showhide+'" onclick="uspJS.anli.anliHtmlClick();"  title="">';
				 anlihtml += '<span class="usp_evaluate_bad_3" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
					 '<i class="ihelp_ucs_image37" ></i><i class="' + anliitipval + '" ></i><p class="" >' + uspJS.ihelpItemCases[uspJS.locale || 'en_US'] + '</p></span></a>';
				 anlihtml += '</li>';
				 return anlihtml;
			 } catch (e) { }
		 },
		 anliHtmlClick: function() {
			 try {
				 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
					 return;
				 }
				 localStorage.setItem("ihelpuspanliitip" + uspJS.appId, "false");
				 uspJS.anli.delAnliHtmlredTip();
				 uspJS.cleareBadDivB('evaluateSuccessDiv');//关闭掉提交成功提示
				 uspJS.cleareBadDivB('evaluateSuccessDiv2');
				 uspJS.cleareBadDivB('evaluateBadDivB');
				 if (uspJS.anli.getLogFlag()) {
					 return;
				 }
				 if (document.getElementById("ihelp_usp_anliopenHTML") != null && document.getElementById("ihelp_usp_anliopenHTML").innerHTML != null) {
					 var anliopenHTML = document.getElementById("ihelp_usp_anliopenHTML");
					 if (anliopenHTML.style.display == "block") {
						 anliopenHTML.style.display = "none";
					 } else {
						 anliopenHTML.style.display = "block";
					 }
				 } else {
					 var bandobj = document.createElement("div");
					 bandobj.setAttribute("id", "ihelp_usp_anliopenHTML");
					 bandobj.setAttribute("class", "evaluateBadDiv b-rad2 boxs");
					 bandobj.setAttribute("style", "display:block;");
					 document.getElementById("usp_yan").appendChild(bandobj);
				 }
				 var bandobj = document.getElementById("ihelp_usp_anliopenHTML");
				 var top = 0;
				 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
					 if (uspJS.version.butPlugInArr[i] == "7") {//判断是否属于案例
						 top = i * 50;
					 }
				 }
				 var definedConfigObj = uspJS.getdefinedConfigObj();
				 var titleText = !uspJS.isNull(definedConfigObj) ? uspJS.locale == 'en_US' ? definedConfigObj.titleEn : definedConfigObj.titleCh : uspJS.Bdigmsg.msg10[uspJS.locale || 'en_US'];
				 var anlimaseval = uspJS.locale == 'en_US' ? "More questions" : "更多问题";
				 var anliHtml = "<span class='anliTitle'>" + uspJS.anli.anliobj.anlititle + "</span>" +
					 '<ul class="ihelpanli" style="margin:0px;margin-top: 8px;padding:0px;margin-bottom: 10px;" >';
				 var ihelp_usp_anliLine = 0;
				 for (var i = 0, l = uspJS.anli.anliobj.anlist.length; i < l; i++) {
					 var anliLival = uspJS.anli.anliobj.anlist[i][uspJS.locale || 'en_US'];
					 if (uspJS.isNull(anliLival)) {
						 continue;
					 }
					 anliHtml += i < 5 ?
						 '<li class="d_b" onclick="uspJS.anli.anliHtmlLiClick(this);" caseId="' + uspJS.anli.anliobj.anlist[i].caseId + '" ><i></i>' + uspJS.anli.anliobj.anlist[i][uspJS.locale || 'en_US'] + '</li>'
						 :
						 '<li class="d_n" onclick="uspJS.anli.anliHtmlLiClick(this);" caseId="' + uspJS.anli.anliobj.anlist[i].caseId + '" ><i></i>' + uspJS.anli.anliobj.anlist[i][uspJS.locale || 'en_US'] + '</li>';
					 ihelp_usp_anliLine += 1;
				 }
				 anliHtml += '</ul>';
				 if (ihelp_usp_anliLine > 5) {
					 anliHtml += '<span class="ihelp_anli_mase" style="line-height: 30px;font-size: 12px;text-align: right;display: block;padding-right: 10px;color: #999;cursor: pointer;" onclick="uspJS.anli.anliMoreClick()" >' + anlimaseval + '</span>';
				 }
				 anliHtml += '<div id="ihelp_usp_anliHtml_tip" style="top:' + (top + 10) + 'px;" ></div>';
				 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
				 bandobj.innerHTML = anliHtml; 
				 uspJS.anli.anliopenHTMLPosition();//动态评价框位置
				 uspJS.addBuriedPoint('anli');
			 } catch (e) { }
		 },
		 anliMoreClick: function() {
			 try {
				 var obj = document.getElementById("ihelp_usp_anliopenHTML").getElementsByTagName('li');
				 for (var i = 0, l = obj.length; i < l; i++) {
					 obj[i].setAttribute("class", "d_b");
				 }
				 document.getElementById("ihelp_usp_anliopenHTML").getElementsByTagName('span')[1].style.display = "none";
			 } catch (e) { }
		 },
		 anliHtmlLiClick: function(obj) {
			 try {
				 var caseId = obj.getAttribute("caseId");
				 window.open(uspConfig.ihelpAnliOpenUrl + "?caseId=" + caseId + "&locale=" + uspJS.locale)
			 } catch (e) { }
		 },
		 anliopenHTMLPosition: function() {//评价位置
			 try {
				 var drag = document.getElementById('usp_yan');
				 var locWidthVal = document.body.clientWidth / 2;
				 var appDiv = document.getElementById("ihelp_usp_anliopenHTML");
				 var alultip = document.getElementById("ihelp_usp_anliHtml_tip");
				 if (!uspJS.isNull(appDiv)) {
					 appDiv.style.left = locWidthVal > drag.offsetLeft ? '50px' : '-216px';
					 alultip.style.left = locWidthVal > drag.offsetLeft ? '-17px' : '205px';
					 var alultipclass = locWidthVal > drag.offsetLeft ? 'tip_right' : 'tip_left';
					 alultip.setAttribute("class", alultipclass);
				 }
			 } catch (e) { }
		 },
		 getlocationHref: function() {
			 try {
				 return window.top.window.location.href;//获取路径上的sourceURL，如果没有就取当前页面路径；				
			 } catch (e) { }
		 },
		 getCaseButton: function() {
			 try {
				 uspJS.uspProOpenObj.addNewHrefHttpBol = false;
				 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
				 var commonData = {};
				 commonData.appId = uspJS.appId;
				 commonData.callbackName = "uspJS.anli.getCaseButtonSuccess";
				 commonData.applicableUrl = uspJS.anli.getlocationHref();
				 uspJS.jsonp({
					 url: uspConfig.uspServiceHost + "services/soa/universalInterface/getCaseButton",
					 data: commonData,
					 success: uspJS.USPRealTimeDataHandling
				 }, uspJS.scriptClassName);
			 } catch (e) {
				 uspJS.defaultInsurance(0);//默认熔断30分钟方法
			 }
		 },
		 getCaseButtonSuccess: function(data) {
			 try {
				 if (uspJS.isNull(data)) {
					 return;
				 }
				 var anliList = data.dataVo;
				 var anliArr = new Array(), anlititle;
				 for (var i = 0, l = anliList.length; i < l; i++) {
					 if (anliArr.length >= 10) {
						 continue;
					 }
					 var voList = anliList[i].vo;
					 anlititle = anliList[i].titleCh;
					 for (var a = 0, b = voList.length; a < b; a++) {
						 if (anliArr.length >= 10) {
							 continue;
						 }
						 anliArr.push({ 'en_US': voList[a].casesTitleEn, 'zh_CN': voList[a].casesTitleCh, caseId: voList[a].casesId });
					 }
				 }
				 //				document.getElementById("usp_ihelp_anli").style.display = anliArr.length>0?"block;":"none !important;";	
				 uspJS.anli.anliobj.showhide = anliArr.length > 0 ? true : false;
				 uspJS.anli.anliobj.appid = data.appid;
				 uspJS.anli.anliobj.anlititle = anlititle;
				 uspJS.anli.anliobj.anlist = anliArr;
				 uspJS.anli.updateAnliAclassVal();
			 } catch (e) { }
		 },
		 getLogFlag: function() {
			 try {
				 var uspJS_logFlag = uspJS.getCookie("login_logFlag");
				 var logFlag = uspJS.getCookie("logFlag");
				 var logFlagBol = (!uspJS.isNull(logFlag)) && logFlag == "in";
				 var uspJS_logFlagBol = (!uspJS.isNull(uspJS_logFlag)) && uspJS_logFlag == "in";
				 var logBol = uspJS.isNull(logFlag) && uspJS.isNull(uspJS_logFlag);
				 var valBol = logFlagBol == true || uspJS_logFlagBol == true ? false : logFlagBol == false && uspJS_logFlagBol == false ? true : logBol == true ? true : false;
				 if (valBol) {
					 if (document.getElementById("ihelp_usp_anliopenHTML") != null) {
						 var evaluateBadDivB = document.getElementById("ihelp_usp_anliopenHTML");
						 evaluateBadDivB.remove();
					 }
					 var titleVal = uspJS.locale == 'en_US' ? "The login session has expired and you are not able to appraise. Please log in again." : "用户登录已超时，无法进行评价。请重新登录。";
					 var bandobj = document.createElement("div");
					 bandobj.setAttribute("id", "ihelp_usp_anliopenHTML");
					 bandobj.setAttribute("class", "evaluateBadDiv b-rad2 boxs");
					 bandobj.setAttribute("style", "display:block;min-height:auto;");
					 var bandHtml = "<div class=\"uspclearfix1\" >" +
						 "<span id=\"ihelp_uspclearfix_span\" style=\"line-height:25px;font-size: 13px;color: #808080;margin: 10px 15px 10px 20px;display: inline-block;\" >" + titleVal + "</span></div>";
 
					 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
					 bandobj.innerHTML = bandHtml;
					 document.getElementById("usp_yan").appendChild(bandobj);
					 uspJS.anli.anliopenHTMLPosition();//动态评价框位置
					 setTimeout(function() {
						 var evaluateBadDivB = document.getElementById("ihelp_usp_anliopenHTML");
						 evaluateBadDivB.remove();
					 }, 3000);
					 return true;
				 } else {
					 return false;
				 }
			 } catch (e) { }
		 },
		 onhashchange: function() {
			 try {
				 if (window.attachEvent) {//做兼容，兼容IE低版本
					 window.attachEvent('onhashchange', function() {
						 uspJS.anli.anliobj.showhide = false;
						 uspJS.anli.getCaseButton();
						 uspJS.anli.updateAnliAclassVal();
					 });
				 } else {
					 window.addEventListener('hashchange', function() {//addEventListener这个对象在IE8中不兼容
						 uspJS.anli.anliobj.showhide = false;
						 uspJS.anli.getCaseButton();
						 uspJS.anli.updateAnliAclassVal();
					 });
				 }
			 } catch (e) { }
		 },
		 updateAnliAclassVal: function() {
			 try {
				 document.getElementById("usp_ihelp_anli").getElementsByTagName('a')[0].setAttribute("class", "ihelp_anli_" + uspJS.anli.anliobj.showhide)
				 if (uspJS.anli.anliobj.showhide == false) {
					 uspJS.clearEvaluateBadDiv()
				 }
			 } catch (e) { }
		 },
		 delAnliHtmlredTip: function() {
			 try {
				 var obj = document.getElementById("usp_ihelp_anli").getElementsByTagName('i');
				 for (var i = 0, l = obj.length; i < l; i++) {
					 var claval = obj[i].getAttribute("class");
					 if ("ihelp_anli_i_tip_true" == claval) {
						 obj[i].setAttribute("class", "ihelp_anli_i_tip_false");
					 }
				 }
			 } catch (e) { }
		 }
	 },
	 ihelpItemTitleMouseover: function(id, value) {
		 try {
			 switch (id) {
				 case "usp_ihelp_CustomerSpan":
					 value = uspJS.ihelpItemTitle.CustomerSpan[uspJS.locale || 'en_US'];
					 break;
				 case "usp_ihelp_Pingjia":
					 value = uspJS.ihelpItemTitle.Appraises[uspJS.locale || 'en_US'];
					 break;
				 case "usp_ihelp_jinzhan":
					 value = uspJS.ihelpItemTitle.ProgressSpan[uspJS.locale || 'en_US'];
					 break;
				 case "usp_ihelp_jianyi":
					 value = uspJS.ihelpItemTitle.OpinionSpanAdvice[uspJS.locale || 'en_US'];
					 break;
				 case "uspJs_Billoflading":
					 value = uspJS.ihelpItemTitle.ihelpItemPFBVAL[uspJS.locale || 'en_US'];
					 break;
				 case "uspJs_Community":
					 value = uspJS.ihelpItemTitle.ihelpItemCommunity[uspJS.locale || 'en_US'];
					 break;
				 case "usp_ihelp_anli":
					 value = uspJS.ihelpItemTitle.ihelpItemCases[uspJS.locale || 'en_US'];
					 break;
			 }
			 var obj = document.getElementById(id);
			 var cdiv = document.createElement('div');
			 //			cdiv.setAttribute("class","ihelpItemTitle");
			 cdiv.innerHTML = '<p class="ihelpItemTitle" >' + value + '</p>';
			 obj.appendChild(cdiv);
		 } catch (e) { }
	 },
	 ihelpItemTitleMouseout: function(id) {
		 try {
			 var obj = document.getElementById(id);
			 var objArr = obj.getElementsByTagName("div");
			 //			obj.getElementsByTagName("div")[0].remove();
			 for (var i = 0, l = objArr.length; i < l; i++) {
				 //				obj.getElementsByTagName("div")[i].remove();
				 obj.removeChild(objArr[i]);
			 }
		 } catch (e) { }
	 },
	 setCustomizationBtnArr: function() {
		 try {
			 if (!uspJS.isNull(uspJS.version.plugIn) && !uspJS.isNull(uspJS.version.plugIn.definedConfigs)) {
				 var butArrar = uspJS.version.plugIn.definedConfigs;
				 for (var i = 0, l = butArrar.length; i < l; i++) {
					 if (butArrar[i].componentType == "2") {
						 continue;
					 }
					 var whetherHidden = butArrar[i].buttonFlag == 'Y' ? false : true;
					 var btnObj = {
						 id: 'li' + uspJS.NewGuid(), pos: butArrar[i].pos, whetherHidden: whetherHidden,
						 name: { 'zh_CN': butArrar[i].buttonNameCh, 'en_US': butArrar[i].buttonNameEn },
						 urlval: { 'zh_CN': butArrar[i].buttonUrlCh, 'en_US': uspJS.isNull(butArrar[i].buttonUrlEn) ? butArrar[i].buttonUrlCh : butArrar[i].buttonUrlEn },//自定义按钮路劲，中文路径永远不会为空，英文有可能为空
						 'btnIcImg': butArrar[i].buttonIcon
					 }
					 uspJS.version.customizationBtnArr.push(btnObj);
				 }
			 }
		 } catch (e) { }
	 },
	 definedConfigsHtml: function(butNum) {
		 try {
			 if (uspJS.isNull(butNum)) {
				 return;
			 }
			 var butArrar = uspJS.version.customizationBtnArr;
			 var dCHtml = "";
			 for (var i = 0, l = butArrar.length; i < l; i++) {
				 if (butNum == butArrar[i].pos) {
					 //					dCHtml = uspJS.butArralHtml(butArrar[i]);
					 dCHtml = '<li class="entrance_icon" tipss="delli" name="entrance_icon" style="display:none;" whetherHidden="' + butArrar[i].whetherHidden + '" >';
					 dCHtml += '<a onclick="uspJS.butArralHtmlclick(\'' + butArrar[i].urlval[uspJS.locale || 'en_US'] + '\');"  title="">' +
						 '<span id="Billoflading_span" class="usp_evaluate_bad_3" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" >' +
						 '<i class="' + butArrar[i].btnIcImg + '" ></i><p class="uspJs_Community" >' + butArrar[i].name[uspJS.locale || 'en_US'] + '</p></span></a>';
					 dCHtml += '</li>';
					 return dCHtml;
				 }
			 }
			 return dCHtml;
		 } catch (e) { }
	 },
	 butArralHtmlclick: function(url) {
		 try {
			 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
				 return;
			 }
			 var newWin = window.open(url);
			 newWin.focus();
		 } catch (e) { }
	 },
	 shequ: function(url) {//6社区
		 try {
			 if (uspJS.isNull(url)) {
				 return;
			 }
			 var controlobj = [{ 'id': 'uspJs_Community', 'spanClassName': 'uspJs_Community', 'zh_CN': '社区', 'en_US': 'Community', libgurl1: '', libgurl2: '', WhetherHidden: '' }];
			 uspJS.addCustomControl(controlobj);
 
			 document.getElementById('uspJs_Community').addEventListener('click', function() {
				 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
					 return;
				 }
				 var openurl = uspJS.uspServiceHost + "servlet/getPlugInPageServlet?urlCode=" + url;
				 var newWin = window.open(openurl);
				 newWin.focus();
				 //				uspJS.subRedirection(url);
			 });
		 } catch (e) { }
	 },
	 getbutflagBuf: function(num) {
		 var butBOl = "Y";
		 try {
			 var butflagBuf = uspJS.version.plugIn.buttonFlagBuf;
			 var butAllArr = butflagBuf.split("_");
			 for (var i = 0, l = butAllArr.length; i < l; i++) {
				 var butArr = butAllArr[i].split("-");
				 if (num == butArr[0]) {
					 butBOl = butArr[1];
				 }
			 }
			 return butBOl;
		 } catch (e) {
			 return butBOl;
		 }
	 },
	 openshequClick: function() {
		 try {
			 uspJS.loadAppidVersionplugIn();//重新获取版本信息
			 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
				 return;
			 }
			 var openurl = uspJS.uspServiceHost + "servlet/getPlugInPageServlet?urlCode=" + uspJS.version.plugIn.url6;
			 var newWin = window.open(openurl);
			 newWin.focus();
		 } catch (e) { }
	 },
	 subRedirection: function(urlCodeValue) {//自定义地址重定向，
		 try {
			 var commonData = {};
			 commonData.urlCode = urlCodeValue;
			 uspJS.jsonp({
				 url: uspJS.uspServiceHost + "servlet/getPlugInPageServlet",
				 data: commonData
			 }, uspJS.scriptClassName);
		 } catch (e) { }
	 },
	 delPersonalizedli: function() {//删除掉个性化的LI
		 try {
			 var drag = document.getElementById("usp_entrance_ul");//usp_entrance_ul
			 var dragli = drag.getElementsByTagName("li");
			 for (var i = 0, l = dragli.length; i < l; i++) {
				 var tipsval = drag.getElementsByTagName("li")[i].getAttribute("tipss");
				 var libol = "delli" == tipsval ? false : true;
				 if (libol) {
					 drag.getElementsByTagName("li")[i].setAttribute("style", "display:none !important;");
				 }
			 }
		 } catch (e) { }
	 },
	 //加载是否需要显示服务单的红点
	 serviceOrdersBeingProcessed: function() {
 
		 var commonData = {};
		 commonData.callbackName = "serviceOrdersSuccess";
		 //记录用户w3账号
		 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
			 uspJS.getw3Account();
		 } else {
			 commonData.userAccount = uspJS.userAccount;
		 }
		 if (null != uspJS.w3Account && uspJS.w3Account != "" && uspJS.w3Account != undefined)
			 commonData.userAccount = uspJS.w3Account;
		 uspJS.jsonp({
			 url: uspJS.uspServiceHost + uspJS.evaluateFeedbackService + "/getUspQuestionaireCount",
			 data: commonData,
			 success: serviceOrdersSuccess
		 }, uspJS.scriptClassName);
	 },
 
	 uspentranceullispanmouseout: function(obj) {
		 try {
			 if (obj.getAttribute("class") == "usp_evaluate_bad_2") {
				 if ("ihelp_icon1" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -190px -29px;");
				 }
				 if ("icon2" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -190px -67px;");
				 }
				 if ("icon3" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -62px -65.5px;");
				 }
				 if ("icon4" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -189px -143px;");
				 }
				 if ("icon5" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -199px -28px;");
				 }
				 if ("icon6" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -190px -105px;");
				 }
				 //				obj.getElementsByTagName("i")[0].setAttribute("style","background-position: -185px -17px;");
			 }
			 if (obj.getAttribute("class") == "uspJs_Billoflading") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position:-190px -180px;");
			 }
			 if (obj.getAttribute("class") == "uspJs_Community") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position:-190px -216px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -159px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp_evaluate_bad_1") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -282px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon-03") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -108px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon-demo") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -440px -17px;");
			 }
			 if (obj.getAttribute("class") == "ullispanhidden2") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -159px -17px;");//-594px -18px;");
			 }
			 if (obj.getElementsByTagName("p")[0]) {
				 obj.getElementsByTagName("p")[0].setAttribute("style", "color:#999;");
			 }
			 obj.setAttribute("style", "color:#999;");
			 if (uspJS.customBottomSpan.length > 0) {//判断是否有自定义的组件按钮
				 for (var i = 0, l = uspJS.customBottomSpan.length; i < l; i++) {
					 var spanClassName = uspJS.customBottomSpan[i].spanClassName;
					 if (obj.getAttribute("class") == spanClassName && !uspJS.isNull(uspJS.customBottomSpan[i].libgurl2) && !uspJS.isNull(uspJS.customBottomSpan[i].libgurl1)) {
						 obj.getElementsByTagName("i")[0].setAttribute("style", "background-image: url(" + uspJS.customBottomSpan[i].libgurl1 + ");background-size: 100% 100%;background-position: 0px 0px;");
					 }
				 }
			 }
		 } catch (e) { }
	 },
	 uspentranceullispanmousemove: function(obj) {
		 try {
			 if (obj.getAttribute("class") == "usp_evaluate_bad_2") {
				 if ("ihelp_icon1" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -167px -29px;");
				 }
				 if ("icon2" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -167px -67px;");
				 }
				 if ("icon3" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -174px -210px;");
				 }
				 if ("icon4" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -166px -143px;");
				 }
				 if ("icon5" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -175px -28px;");
				 }
				 if ("icon6" == obj.getElementsByTagName("i")[0].getAttribute("class")) {
					 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -167px -105px;");
				 }
				 //				obj.getElementsByTagName("i")[0].setAttribute("style","background-position: -185px -17px;");
			 }
 
			 if (obj.getAttribute("class") == "uspJs_Billoflading") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position:-167px -180px;");
			 }
			 if (obj.getAttribute("class") == "uspJs_Community") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position:-167px -216px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -185px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp_evaluate_bad_1") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -308px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon-03") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -134px -17px;");
			 }
			 if (obj.getAttribute("class") == "usp-it-icon-demo") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -463px -17px;");
			 }
			 if (obj.getAttribute("class") == "ullispanhidden2") {
				 obj.getElementsByTagName("i")[0].setAttribute("style", "background-position: -185px -17px;");//-620px -17px;");
			 }
			 if (obj.getElementsByTagName("p")[0]) {
				 obj.getElementsByTagName("p")[0].setAttribute("style", "color:#1890FF;");
			 }
			 obj.setAttribute("style", "color:#1890FF;");
			 if (uspJS.customBottomSpan.length > 0) {//判断是否有自定义的组件按钮
				 for (var i = 0, l = uspJS.customBottomSpan.length; i < l; i++) {
					 var spanClassName = uspJS.customBottomSpan[i].spanClassName;
					 if (obj.getAttribute("class") == spanClassName && !uspJS.isNull(uspJS.customBottomSpan[i].libgurl2) && !uspJS.isNull(uspJS.customBottomSpan[i].libgurl1)) {
						 if (obj.getElementsByTagName("i") && obj.getElementsByTagName("i")[0]) {
							 obj.getElementsByTagName("i")[0].setAttribute("style", "background-image: url(" + uspJS.customBottomSpan[i].libgurl2 + ");background-size: 100% 100%;background-position: 0px 0px;");
						 }
					 }
				 }
			 }
		 } catch (e) { }
	 },
	 getdragUspJs: function() {
		 var drag = document.getElementById("usp_yan");
		 drag.style.position = "absolute";
 
 
		 drag.onmousedown = function(event) {
			 var event = event || window.event;//兼容IE浏览器
			 oldUspYanOffsetLeft = drag.offsetLeft;
			 oldUspYanOffsetTop = drag.offsetTop;
			 var diffx = event.clientX - drag.offsetLeft;
			 var diffy = event.clientY - drag.offsetTop;
			 if (typeof drag.setCapture != 'undefined') {
				 drag.setCapture();
			 }
			 document.onmousemove = function(event) {
				 var event = event || window.event;//兼容IE浏览器
				 var left = event.clientX - diffx;
				 var top = event.clientY - diffy;
				 var maxleft = window.innerWidth - drag.offsetWidth;
				 var maxTop = window.innerHeight - drag.offsetHeight;
				 //控制拖拽物体的范围只能在浏览器视窗内，不允许出现滚动条
				 if (left < 0) {
					 left = 0;
				 } else if (left > maxleft) {
					 left = maxleft;
				 }
				 if (top < 0) {
					 top = 0;
				 } else if (top > maxTop) {
					 top = maxTop;
				 }
				 drag.style.left = left + "px";
				 drag.style.top = top + "px";
			 }
			 document.onmouseup = function(event) {
				 if (typeof drag.setCapture != 'undefined') {
					 drag.releaseCapture();
				 }
			 }
		 }
	 },
	 getInitLocation: function() {//初始化位置
		 try {
			 var obj = document.getElementById("usp_yan");
			 //			var cookxval = uspJS.getCookie('comPosX');
			 //			var cookyval = uspJS.getCookie('comPosY');
			 var loaduspyanLeft = '';
			 var loaduspyanTop = '';
			 var cwidth = document.documentElement.clientWidth || document.body.scrollWidth;
			 var cheight = document.documentElement.clientHeight || document.body.scrollHeight;
			 var styletop = window.innerHeight - 280 - 141;
			 if (250 < styletop) {
				 loaduspyanTop = "280px";
			 } else {
				 loaduspyanTop = "250px";
			 }
 
			 // var indexInfo = !uspJS.isNull(uspJS.getCookie("ihelp_portal_index_" + uspJS.appId)) ? uspJS.getCookie("ihelp_portal_index_" + uspJS.appId) : localStorage.getItem("ihelp_portal_index_" + uspJS.appId);
			 // !uspJS.isNull(uspJS.getCookie("ihelp_portal_index_" + uspJS.appId)) && localStorage.setItem("ihelp_portal_index_" + uspJS.appId, uspJS.getCookie("ihelp_portal_index_" + uspJS.appId));
			 
			 var appidPortalValCookie = uspJS.getCookie("ihelp_portal_index_" + uspJS.appId);
			 var appidPortalValLoc = localStorage.getItem("ihelp_portal_index_" + uspJS.appId);
			 // 获取通过cookie及localStorage
			 var indexInfo = !uspJS.isNull(appidPortalValCookie) ? appidPortalValCookie : appidPortalValLoc;
			 indexInfo = appidPortalValCookie === appidPortalValLoc ? indexInfo : appidPortalValLoc;
			 if (indexInfo != null && indexInfo != "") {
				 //位置信息
				 var left = indexInfo.split("_")[0];
				 var top = indexInfo.split("_")[1];
				 if (left != "init" && !uspJS.isNull(left)) {
					 loaduspyanLeft = left;
					 loaduspyanTop = top;
				 }
			 }
			 // 获取缓存数据
			 var proxyval = localStorage.getItem("ihelp_portal_index" + uspJS.appId);
			 if (uspJS.isNull(proxyval) && !uspJS.isNull(loaduspyanTop)) {
				 obj.style.top = loaduspyanTop;
				 obj.style.right = "3px";
			 } else if (!uspJS.isNull(proxyval)) {
				 try {
					 proxyval = JSON.parse(proxyval);
					 proxyval = proxyval[uspJS.appId];
					 obj.style.top = proxyval.split("::")[1] + "px";
					 obj.style.left = proxyval.split("::")[0] + "px";
				 } catch (e) { }
			 }
			 try {
				 var uspJSLocationval = uspJS.uspJSLocation[uspJS.appId];
				 if (uspJS.isNull(uspJSLocationval) && !uspJS.isNull(loaduspyanTop)) {
					 obj.style.top = loaduspyanTop;
					 obj.style.right = "3px";
				 } else if (!uspJS.isNull(uspJSLocationval)) {
					 try {
						 obj.style.top = uspJSLocationval.split("::")[1] + "px";
						 obj.style.left = uspJSLocationval.split("::")[0] + "px";
					 } catch (e) { }
					 try {
						 var leftval = uspJSLocationval.split("::")[0];
						 if (parseInt(leftval) > 0) {
							 var right = window.innerWidth > parseInt(leftval) ? window.innerWidth - parseInt(leftval) - 50 : 3;
							 //							console.log('right===================='+right)
							 obj.style.right = right + "px";
							 if (right === 3) {
								 obj.style.left = window.innerWidth - 53 + "px";
							 }
						 } else {
							 obj.style.right = "3px";
							 obj.style.left = window.innerWidth - 53 + "px";
						 }
					 } catch (e) {
 
					 }
				 }
			 } catch (e) { }
			 obj.style.display = "block";
			 var drag = document.getElementById("usp_entrance_ul");
			 oldUspYanOffsetLeft = drag.offsetLeft;
			 oldUspYanOffsetTop = drag.offsetTop;
		 } catch (e) { }
	 },
	 getIhelpHiddenA: function() {//隐藏组件
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 uspJS.cachePortalMoveAction("usphidden", false);
			 uspJS.getIhelpHiddenAContent();
		 } catch (e) { }
	 },
	 getIhelpHiddenAContent: function() {
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 var drag = document.getElementById('usp_yan');
			 var curX = drag.offsetLeft;
			 var curY = drag.offsetTop;
 
			 var cwidth = document.documentElement.clientWidth || document.body.clientWidth;
			 var cheight = document.documentElement.clientHeight || document.body.clientHeight;
 
			 var ulobj = document.getElementById("usp_entrance_ul");
			 var ulheight = ulobj.offsetHeight;
			 var sondom = document.getElementById("usp_entrance_ul").childNodes;
			 for (var i = 0, l = sondom.length; i < l; i++) {
				 sondom[i].style.display = "none";
				 if (sondom[i].getAttribute("whetherHidden")) {
					 sondom[i].style.display = "block";
				 }
			 }
			 document.getElementById("entrance_icon_block").style.display = "block";
			 uspJS.clearEvaluateBadDiv();
		 } catch (e) { }
	 },
	 getIhelpHidden: function() {
		 try {
			 uspJS.ihelp_num.newClickNum += 1;
			 uspJS.getUspHiddenAssigningValues();
			 uspJS.getIhelpHiddenshow();
		 } catch (e) { }
	 },
	 getUspHiddenVal: function() {//获取当前展示隐藏的值
		 try {
			 var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 if (!uspJS.isNull(uspJS.getCookie('usphidden')) && !uspJS.isNull(localStorage.getItem('usphidden'))) {
				 getusphiddencookie = uspJS.getCookie('usphidden') == localStorage.getItem('usphidden') ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 }
			 return getusphiddencookie;
		 } catch (e) { }
	 },
	 getUspHiddenAssigningValues: function() {//B版展示隐藏值获取就修改
		 try {
			 //			var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 var getusphiddencookie = !uspJS.isNull(localStorage.getItem('usphidden')) ? localStorage.getItem('usphidden') : uspJS.getCookie('usphidden');
			 if (!uspJS.isNull(uspJS.getCookie('usphidden')) && !uspJS.isNull(localStorage.getItem('usphidden'))) {
				 getusphiddencookie = uspJS.getCookie('usphidden') == localStorage.getItem('usphidden') ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 }
			 //			localStorage.setItem('usphidden', getusphiddencookie);
			 "true" == getusphiddencookie ? uspJS.cachePortalMoveAction("usphidden", false) : uspJS.isNull(getusphiddencookie) ? uspJS.cachePortalMoveAction("usphidden", false) : uspJS.cachePortalMoveAction("usphidden", true);
		 } catch (e) { }
	 },
	 getIhelpHiddenshow: function() {//隐藏组件
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 if (uspJS.ihelp_num.newClickNum >= 1) {//点击过NEW
				 var newobj = document.getElementById("usp_title_icon_new");
				 if (newobj) {
					 newobj.setAttribute("class", "usp_title_icon_new d_n");
					 uspJS.getihelpNewHotLocStr("newBol");
				 }
			 }
			 var drag = document.getElementById('usp_yan');
			 var curX = drag.offsetLeft;
			 var curY = drag.offsetTop;
 
			 var cwidth = document.documentElement.clientWidth || document.body.clientWidth;
			 var cheight = document.documentElement.clientHeight || document.body.clientHeight;
 
			 var ulobj = document.getElementById("usp_entrance_ul");
			 var ulheight = ulobj.offsetHeight;
			 var sondom = document.getElementById("usp_entrance_ul").childNodes;
 
			 // 获取通过cookie及localStorage
			 //			var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
			 //			!uspJS.isNull(uspJS.getCookie('usphidden')) && localStorage.setItem('usphidden', uspJS.getCookie('usphidden'));
			 var getusphiddencookie = uspJS.getUspHiddenVal();
			 var title_i_dom = document.getElementById("usp_arrowIconHideTitle_i");
			 if ("true" == getusphiddencookie) {
				 uspJS.isNull(title_i_dom) ? null : title_i_dom.setAttribute("class", "icon5_false");
				 for (var i = 0, l = sondom.length; i < l; i++) {
					 sondom[i].style.display = "none";
					 if ("true" == sondom[i].getAttribute("whetherHidden")) {
						 sondom[i].style.display = "block";
					 }
				 }
			 } else if ("false" == getusphiddencookie) {
				 uspJS.isNull(title_i_dom) ? null : title_i_dom.setAttribute("class", "icon5_true");
				 for (var i = 0, l = sondom.length; i < l; i++) {
					 var tipsval = sondom[i].getAttribute("tipss");
					 var libol = "delli" == tipsval ? false : true;
					 if (libol) {
						 sondom[i].setAttribute("style", "display:none !important;");
					 } else {
						 sondom[i].style.display = "block";
					 }
				 }
			 } else {
				 var claval = document.getElementById("usp_arrowIconHideTitle_i").getAttribute("class");
				 for (var i = 0, l = sondom.length; i < l; i++) {
					 //					sondom[i].style.display = "none";
					 sondom[i].style.display = calval == "icon5_true" ? "block" : "false";
					 if (sondom[i].getAttribute("whetherHidden")) {
						 sondom[i].style.display = "block";
					 }
				 }
			 }
			 document.getElementById("usp_ihelp_CustomerSpan").style.display = "block";
			 document.getElementById("usp_arrowIconHideTitle").style.display = "block";
			 uspJS.clearEvaluateBadDiv();
		 } catch (e) { }
	 },
	 getIhelpHiddenB: function() {//隐藏组件
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 uspJS.cachePortalMoveAction("usphidden", true);
 
			 var drag = document.getElementById('usp_yan');
			 var curX = drag.offsetLeft;
			 var curY = drag.offsetTop;
 
			 var cwidth = document.documentElement.clientWidth || document.body.clientWidth;
			 var cheight = document.documentElement.clientHeight || document.body.clientHeight;
 
			 var ulobj = document.getElementById("usp_entrance_ul");
			 var ulheight = ulobj.offsetHeight;
			 var sondom = document.getElementById("usp_entrance_ul").childNodes;
			 var showhideval = document.getElementById("usp_arrowIconHideTitle").getAttribute("litype");
			 if ('show' == showhideval) {
				 document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "hide");
				 for (var i = 0, l = sondom.length; i < l; i++) {
					 sondom[i].style.display = "none";
					 if (sondom[i].getAttribute("whetherHidden")) {
						 sondom[i].style.display = "block";
					 }
				 }
			 } else {
				 document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "show");
				 for (var i = 0, l = sondom.length; i < l; i++) {
					 var tipsval = sondom[i].getAttribute("tipss");
					 var libol = "delli" == tipsval ? false : true;
					 if (libol) {
						 sondom[i].setAttribute("style", "display:none !important;");
					 } else {
						 sondom[i].style.display = "block";
					 }
				 }
			 }
			 document.getElementById("usp_ihelp_CustomerSpan").style.display = "block";
			 document.getElementById("usp_arrowIconHideTitle").style.display = "block";
			 uspJS.clearEvaluateBadDiv();
		 } catch (e) { }
	 },
	 dragclickConflict: function() {//拖拽与单击事件冲突解决方法
		 try {
			 var drag = document.getElementById('usp_yan');
			 var curX = drag.offsetLeft;
			 var curY = drag.offsetTop;
 
			 var cwidth = document.documentElement.clientWidth || document.body.clientWidth;
			 var cheight = document.documentElement.clientHeight || document.body.clientHeight;
			 if (oldUspYanOffsetLeft == null && oldUspYanOffsetTop == null) {
				 oldUspYanOffsetLeft = curX;
				 oldUspYanOffsetTop = curY;
			 }
			 //如果位置发生了变化，说明当前是移动时触发的调用，这里不做图标的收缩处理,只做移动后事件处理；
			 if (Math.abs(curX - oldUspYanOffsetLeft) > 0 || Math.abs(curY - oldUspYanOffsetTop) > 0) {
				 uspJS.cachePortalMoveAction("ihelp_portal_index_" + uspJS.appId, drag.style.left + "_" + drag.style.top);
				 return true;
			 }
			 return false;
		 } catch (e) { }
	 },
	 getIhelpBlock: function() {//显示组件
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 uspJS.cachePortalMoveAction("usphidden", true);
			 uspJS.getIhelpBlockContent();
		 } catch (e) { }
	 },
	 getIhelpBlockContent: function() {
		 try {
			 //			if('M007121' == uspJS.appId ){
			 //				uspJS.getIhelpHiddenB();
			 //				return;
			 //			}
			 var drag = document.getElementById('usp_yan');
			 var curX = drag.offsetLeft;
			 var curY = drag.offsetTop;
			 var cwidth = document.documentElement.clientWidth || document.body.clientWidth;
			 var cheight = document.documentElement.clientHeight || document.body.clientHeight;
 
			 if (oldUspYanOffsetLeft == null && oldUspYanOffsetTop == null) {
				 oldUspYanOffsetLeft = curX;
				 oldUspYanOffsetTop = curY;
			 }
			 //如果位置发生了变化，说明当前是移动时触发的调用，这里不做图标的收缩处理,只做移动后事件处理；
			 if (Math.abs(curX - oldUspYanOffsetLeft) > 0 || Math.abs(curY - oldUspYanOffsetTop) > 0) {
				 uspJS.cachePortalMoveAction("ihelp_portal_index_" + uspJS.appId, drag.style.left + "_" + drag.style.top);
 
				 return true;
			 }
 
			 var sondom = document.getElementById("usp_entrance_ul").childNodes;
			 for (var i = 0, l = sondom.length; i < l; i++) {
				 var tipsval = sondom[i].getAttribute("tipss");
				 var libol = "delli" == tipsval ? false : true;
				 if (libol) {
					 sondom[i].setAttribute("style", "display:none !important;");
				 } else {
					 sondom[i].style.display = "block";
				 }
			 }
			 var iconblheight = document.getElementById("arrowIconSpanV2").offsetHeight;
			 document.getElementById("entrance_icon_block").style.display = "none";
		 } catch (e) { }
	 },
	 getObjdragHandle: function() {// 加入可拖拽功能 （addby 2015.8.6） start
		 try {
			 var drag = document.getElementById("usp_entrance_ul");
			 if (document.attachEvent) {
				 drag.attachEvent('onmousedown', dragHandle);
			 } else {
				 drag.addEventListener('mousedown', dragHandle, false);
			 }
		 } catch (e) { }
	 },
	 getUrl: function() {
		 var url = uspJS.sourceURL || window.location.href;
		 url = url.replace(/(^\s*)|(\s*$)/g, "");
		 var protocolLen = url.indexOf("https:") == 0 ? 6 : (url.indexOf("http:") == 0 ? 5 : 0);
		 var sourceURL_length = url.lastIndexOf('?');
		 //获取除协议，参数后的url长度
		 sourceURL_length = (sourceURL_length == -1) ? url.length : sourceURL_length;
		 //截取协议和参数
		 var sourceURLNoParameters = url.substr(protocolLen, sourceURL_length);
		 uspJS.sourceURLNoParameters = sourceURLNoParameters;
		 //如果前面还有 斜杠或者反斜杠，则将这个字符截取
		 while (sourceURLNoParameters.indexOf('/') == 0 || sourceURLNoParameters.indexOf('\\') == 0) {
			 sourceURLNoParameters = sourceURLNoParameters.substr(1);
			 uspJS.sourceURLNoParameters = sourceURLNoParameters;
		 }
	 },
	 init: function() {
		 try {
			 //			uspJS.uspJS_param();
			 uspJS.uspAccessMode();//加载接入方式，及路径后面带的参数值
			 var iframebol = false;
			 for (var i = 0, l = grayappIdArr.length; i < l; i++) {//iframe灰度数组
				 if (uspJS.appId == grayappIdArr[i]) {
					 iframebol = true;
				 }
			 }
			 if (iframebol) {
				 if (top.location != location) {//解决iframe中加载组件造成页面生产多个组件的BUG
					 return;
				 }
			 }
 
			 //加载系统配置的URL
			 uspJS.initSystemURL();
			 //加载，解析sourceURL路径
			 uspJS.initSourceURL();
			 uspJS.uspPortalServiceHost = uspJS.uspServiceHost;
			 var url = uspJS.sourceURL || window.location.href;
			 if (uspJS.UIinitailed == 0 && (uspJS.initcomponent == 1 || uspJS.initcomponent == null) && (url.indexOf("initcomponent=0") == -1)) {
				 //加载样式文件
				 uspJS.dynamicLoading.css(uspConfig.uspPortalServiceHost + uspConfig.cssPath + "?v=" + uspConfig.version);
				 //判断当前是什么接入，根据接入不同，判断加载那个JS文件
				 uspJS.loadUspUI();
			 }
		 } catch (e) { }
	 },
	 loadUspUI: function() {
		 try {
			 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
			 if (valnum != -1) {
				 uspJS.getVersionplugIn();
				 uspJS.version.ButtonConfig = "";
				 uspJS.initUI();
				 document.getElementById("goodBtnTips").style.visibility = "hidden";
				 document.getElementById("badBtnTips").style.visibility = "hidden";
				 uspJS.reviewsDetailsURL_host="http://app.huawei.com"
			 } else {
				 uspJS.loadScriptCallback(uspConfig.uspPortalServiceHost + uspConfig.uspJSConfigParam + "?v=" + (new Date()).Format("yyyyMMddhh"), function() {
					 try {
						 uspJS.version.ButtonConfig = uspJS.isNull(ihelp_uspJS_config_param) ? "" : ihelp_uspJS_config_param.ButtonConfig;
					 } catch (e) {
						 console.log(e.message);
					 }
					 uspJS.initUI();
					 document.getElementById("goodBtnTips").style.visibility = "hidden";
					 document.getElementById("badBtnTips").style.visibility = "hidden";
					 var w3numVal = uspConfig.uspPortalServiceHost.indexOf("w3.huawei.com");
					 uspJS.reviewsDetailsURL_host = w3numVal !== -1 ?"http://w3.huawei.com":"http://nkweb-sit.huawei.com";
				 });
			 }
		 } catch (e) {
			 uspJS.version.ButtonConfig = "";
			 uspJS.initUI();
			 document.getElementById("goodBtnTips").style.visibility = "hidden";
			 document.getElementById("badBtnTips").style.visibility = "hidden";
		 }
	 },
	 loadAppidVersionplugIn: function() {//加载对应APPID的版本信息
		 try {
			 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
			 if (valnum != -1) {
				 uspJS.getVersionplugIn();
				 uspJS.version.ButtonConfig = "";
 
			 }
			 uspJS.getPlugInArr();
		 } catch (e) { }
	 },
	 initEvaluateUIBtns: function() {
		 uspJS.getUrl();
		 var commonData = {};
		 commonData.optTypesStr = "1,2";
		 commonData.appId = uspJS.appId || "";
		 commonData.catalogId = uspJS.appId || "";
		 commonData.userAccount = uspJS.userAccount || "";
		 commonData.sourceUrl = uspJS.sourceURLNoParameters || "";
 
	 },
	 initCookieEvaluateUIBtns: function() {
		 uspJS.getUrl();
		 var appHrefKey = (uspJS.appId || "").concat(uspJS.userAccount || "").concat(uspJS.sourceURLNoParameters.replace(/(^\s*)|(\s*$)/g, ""));
		 // var optType = uspJS.getCookie(appHrefKey);
		 // 获取通过cookie及localStorage
		 var optType = !uspJS.isNull(uspJS.getCookie(appHrefKey)) ? uspJS.getCookie(appHrefKey) : localStorage.getItem(appHrefKey);
		 !uspJS.isNull(uspJS.getCookie(appHrefKey)) && localStorage.setItem(appHrefKey, uspJS.getCookie(appHrefKey));
		 document.getElementById("evaluateBadImg").setAttribute("class", "usp_evaluate_bad_" + uspJS.bgcolor);
		 document.getElementById("evaluateGoodImg").setAttribute("class", "usp_evaluate_good_" + uspJS.bgcolor);
		 if (optType == 1) {
			 uspJS.goodUIbtn = true;
			 document.getElementById("evaluateGoodImg").setAttribute("class", "usp_evaluate_good_click_" + uspJS.bgcolor);
		 }
		 if (optType == 2) {
			 uspJS.badUIbtn = true;
			 document.getElementById("evaluateBadImg").setAttribute("class", "usp_evaluate_bad_click_" + uspJS.bgcolor);
		 }
	 },
	 setCookie: function(cname, cvalue) {
		 var nowTime = new Date().toLocaleDateString();
		 var d = new Date(new Date(nowTime));
		 d.setTime(d.getTime() + (24 * 60 * 60 * 1000 - 1000));
		 var expires = "expires=" + d.toGMTString();
		 document.cookie = cname + "=" + cvalue + "; " + expires + ";path=/ihelp;";
	 },
 
	 getJSParamValue: function(paramName, srcObj) {
		 var value = null;
		 if (srcObj != null && uspJS.getUrlParameterValue(paramName, srcObj.getAttribute('src')) != null) {
			 value = uspJS.getUrlParameterValue(paramName, srcObj.getAttribute('src'));
		 }
		 return value;
	 },
	 // 在线帮助
	 openOnlineSupportWindow: function() {
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 uspJS.openCusServiceUrl();
			 uspJS.addBuriedPoint('customer_service');
		 } catch (e) { }
	 },
	 openCusServiceUrl: function() {
		 try {
			 //刷新 url路径信息
			 uspJS.initSourceURL();
			 var params = uspJS.getURLAllParams();
			 var keys = "", values = "";
			 for (var key in params) {
				 keys += key + ",";
				 values += params[key] + ",";
			 }
			 try {
				 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
				 if (uspJS.appId === "M001789" && valnum != -1) {// sso租户内外网分离，外网写死一个按钮，并且免登
					 var itUrl = uspConfig.icsExemptionLoginUrl + "?appId=" + uspJS.appId
					 window.open(itUrl);
					 return;
				 }
			 } catch (e) { }
			 var openUrl = uspConfig.onlineSupportURLHost + uspJS.onlineSupportURL;
			 try {
 
				 var appIdval = uspJS.appId;
				 //如果uspJS.customServiceAppId有值，修改客服的链接为该值（只针对客服那个组件按钮，其他的评价建议等不变）
				 if (uspJS.customServiceAppId && uspJS.customServiceAppId != 'null') {
					 appIdval = uspJS.customServiceAppId;
				 }
				 if (appIdval == 'M007224' || appIdval == 'M001702' || appIdval == 'M003656') {
					 //					var itUrl = "http://w3.huawei.com/12345/index.do?appId=ITHotline&rdType=ITHotline"+"&sourceURL="+encodeURIComponent(uspJS.sourceURL)+"&locale="+uspJS.locale;
					 var itUrl = "http://w3.huawei.com/12345/?sourceURL=" + encodeURIComponent(uspJS.sourceURL) + "&locale=" + uspJS.locale;
					 window.open(itUrl);
					 return;
				 }
				 if (appIdval == 'M002419') {
					 appIdval = 'virtual_app_000000001521';
				 }
				 if (appIdval == 'app_000000035412') {
					 openUrl = uspConfig.onlineSupportURLHost32 + uspJS.onlineSupportURL;
				 }
				 if (appIdval == 'M003157' ||
					 appIdval == 'M001258' ||
					 appIdval == 'com.huawei.mbs.iadmin.staffservice' ||
					 appIdval == 'com.huawei.mbs.iadmin.card' ||
					 appIdval == 'com.huawei.so.maternity_allowance_management_system' ||
					 appIdval == 'M000540' ||
					 appIdval == 'M000786' ||
					 appIdval == 'M001497' ||
					 appIdval == 'M002277' ||
					 appIdval == 'M002733' ||
					 appIdval == 'M003132'
				 ) {
					 appIdval = 'HRHotline';
				 }
				 if (!uspJS.isNull(uspJS.appId) && "virtual_app_uniknow0000818" == uspJS.appId) {
					 openUrl = uspConfig.ihelpNotLoginIcsUrl;
					 openUrl += "?appId=" + appIdval + "&locale=" + uspJS.locale;
					 openUrl = openUrl.split("?").length > 1 ? openUrl + "&" + uspJS.CustomerUrlParameter : openUrl + "?" + uspJS.CustomerUrlParameter;
				 } else {
					 openUrl += "?appId=" + appIdval + "&locale=" + uspJS.locale + "&netmodel=" + uspConfig.netmodel;
				 }
				 try {
					 if (!uspJS.isNull(uspJS.version.plugIn) && !uspJS.isNull(uspJS.version.plugIn.CSpanUrl)) {
						 openUrl = uspJS.version.plugIn.CSpanUrl;
					 }
				 } catch (e) { }
				 if (!uspJS.isNull(uspJS.keyword)) {
					 uspJS.keyword = decodeURIComponent(uspJS.keyword);
					 openUrl += "&keyword=" + encodeURIComponent(uspJS.keyword);
				 }
				 if (!uspJS.isNull(uspJS.kapian.version)) {
					 uspJS.kapian.version = decodeURIComponent(uspJS.kapian.version);
					 openUrl += "&messageType=1&version=" + uspJS.kapian.version;
				 }
				 if (!uspJS.isNull(uspJS.kapian.resourceId)) {
					 uspJS.kapian.resourceId = decodeURIComponent(uspJS.kapian.resourceId);
					 openUrl += "&resourceId=" + uspJS.kapian.resourceId;
				 }
 
			 } catch (e) { }
			 openUrl += "&sourceURL=" + encodeURIComponent(uspJS.sourceURL);
			 window.open(openUrl);
		 } catch (e) { }
	 },
	 checkAndSumbitGoodFeedback: function(type) {
		 try {
			 //点开意见体检加载用户信息
			 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
				 uspJS.getw3Account();
			 }
			 uspJS.getUrl();
			 var commonData = {};
			 commonData.optTypesStr = "1,2";
			 commonData.optType = type;
			 commonData.appId = uspJS.appId || "";
			 commonData.catalogId = uspJS.appId || "";
			 commonData.userAccount = uspJS.userAccount || "";// 需要确定userAccount是否需要在新定义一个userAccount传参
			 commonData.sourceUrl = uspJS.sourceURL || "";
			 if (uspJS.isDbClick) {
				 //			return false;
			 }
			 uspJS.isDbClick = true;
			 if (type == 1) {
				 uspJS.sumbitGoodFeedback(commonData);
			 }
			 if (type == 2) {
				 uspJS.sumbitBadFeedback();
			 }
		 } catch (e) {
 
		 }
	 },
	 // 好评按钮【提交】
	 sumbitGoodFeedback: function(commonData) {
 
		 if (uspJS.sumbitGoodFeedbackCkick) {
			 return false;
		 }
		 var frmData = commonData;
		 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
			 uspJS.getw3Account();
 
		 } else {
			 frmData.userAccount = uspJS.userAccount;
		 }
		 frmData.requestLanguage = uspJS.locale || 'zh_CN';
		 frmData.pageCode = "";
 
		 frmData.callbackName = "GoodFeedback";
		 frmData.sourceUrl = encodeURIComponent(uspJS.getWindowLocation()) || "";
 
		 var sumbitGoodFeedbackNum = setTimeout(function() {
			 if (null != uspJS.w3Account && uspJS.w3Account != "" && uspJS.w3Account != undefined)
				 frmData.userAccount = uspJS.w3Account;
			 uspJS.jsonp({
				 url: uspJS.uspServiceHost + uspJS.evaluateFeedbackService + "/saveCommentGet",
				 data: frmData,
				 success: GoodFeedback
			 }, uspJS.scriptClassName);
			 clearTimeout(sumbitGoodFeedbackNum);
		 }, 3000);
		 newGoodFeedback();
	 },
 
	 // 差评按钮
	 sumbitBadFeedback: function() {
		 var badBtnTipsHide = function() {
			 document.getElementById("badBtnTips").innerHTML = "";
			 document.getElementById("badBtnTips").style.visibility = "hidden";
			 uspJS.sumbitGoodFeedbackCkick = false;
		 }
 
		 var badBtnTipsShow = function(msg) {
			 document.getElementById("badBtnTips").innerHTML = msg;
			 document.getElementById("badBtnTips").style.visibility = "visible";
			 uspJS.sumbitGoodFeedbackCkick = true;
		 }
 
		 if (uspJS.sumbitGoodFeedbackCkick) {
			 return false;
		 }
		 uspJS.openEvaluateBadDiv(2);
		 return true;
	 },
	 //差评和建议重新打开一个页面
	 openPageBadFeedback: function(optType) {
		 uspJS.badUIbtn = true;
		 //加载 解析 sourceURL路径
		 uspJS.initSourceURL();
		 uspJS.checkAndSumbitGoodFeedback(2);
	 },
	 //差评和建议在旁边新建一个DIV
	 openEvaluateBadDiv: function() {
		 uspJS.getw3Tel();
		 var obj = document.getElementById("usp_yan").getElementsByTagName("div");
		 var count = 0;
		 if (obj && obj.length > 0) {
			 for (var y = 0; y < obj.length; y++) {
				 if (obj[y].className == "evaluateBadDiv") {
					 document.getElementById("textareaTip").innerText = "";
				 }
			 }
		 }
		 var msg1 = "如果您对本产品有吐槽、IT需求、建议，请详细描述您遇到的问题及建议方案，以便我们快速解决；";
		 var msg2 = "取消";
		 var msg3 = "提交";
		 var msg4 = "您对当前应用的评价是", msg5 = "真棒", msg6 = "一般", msg7 = "不满", msg8 = "描述建议或选择标签：";
		 var msg9 = "请重新登录或是刷新当前页面";
		 var msg21 = "提交成功", msg17 = "业务规则", msg18 = "功能优化",
			 msg19 = "体验改进", msg20 = "故障错误"
			 , msg22 = "感谢您的反馈，已经跟进，您可以在", msg23 = "进展", msg24 = "中查看", msg25 = "输入错误！";
		 if (uspJS.locale == "en_US") {
			 msg1 = "Please leave a comment to let us know what you think about our service.Thanks.";
			 msg2 = "Cancel";
			 msg3 = "Submit";
			 msg4 = "How satisfied were you with current module";
			 msg5 = "Satisfied";
			 msg6 = "Neutral";
			 msg7 = "Unsatisfied";
			 msg8 = "Comment or Review：";
			 msg9 = "Your session has expired please login again";
			 msg17 = "Rules";
			 msg18 = "Function optimization";
			 msg19 = "Experience improvement";
			 msg20 = "Error";
			 msg21 = "Submitted successfully";
			 msg22 = "Thank you for your feedback. Your suggestion have been followed up, and you can view it in the";
			 msg23 = "service list";
			 msg24 = "";
			 msg25 = "Input Error!";
		 }
		 var bandobj = document.createElement("div");
		 bandobj.setAttribute("id", "evaluateBadDiv");
		 bandobj.setAttribute("class", "evaluateBadDiv b-rad2 boxs");
		 bandobj.setAttribute("style", "display:block;");
		 var bandHtml = "";
		 //		var bandHtml = "<div id=\"evaluateBadDiv\" class=\"evaluateBadDiv b-rad2 boxs\" style=\"display:block;\" >";
		 var bandHtmlarea = "<textarea id=\"evaluatepageCommentContent\" placeholder=\"" + msg1 + "\" cols=\"\" rows=\"\" class=\"edit b-rad2\" "
			 + " "
			 + " name=\"evaluateContent\" "
			 + "onkeyup=\"uspJS.textareaOnChangeVal(this.value)\" "
			 + "onchange=\"uspJS.textareaOnChangeVal(this.value)\" "
			 + "onkeydown=\"uspJS.textareaOnChangeVal(this.value)\"></textarea>";
		 var bandHtmltel = '<div id="telinputdiv" class="pr" style="display:none;" ><input id="telinput" type="text" class="b-rad2 boxs" placeholder="TEL" /><span id="telinputerror" style="display: none;position: absolute;color: red;right: 10px;top: 5px;line-height: 25px;font-size: 12px;">' + msg25 + '</span></div>';
		 var textareaTip = "<div id=\"textareaTip\" style=\"position: relative;text-align: right;\" >"
			 //			+"<div class=\"onlineMsgUpload\" id=\"liveservice_onlineMsg_uploadBtn\" onclick=\"uspJS.clickuploadImg();\" >上传附件</div> "
			 // 			+"<input name=\"liveservice_toUploadFile\" class=\"onlineMsgUpInp\" id=\"liveservice_uploadFile_input\" onchange=\"uspJS.fileChangEvent();\" type=\"file\" accept=\".gif,.jpg,.pdf,.png\"> "
			 + "<span style=\"line-height:20px;color:rgb(153, 153, 153);position: absolute;right:8px;top: -25px;\" >500</span></div>";
		 textareaTip = textareaTip + bandHtmltel;
		 //			+"<div class=\"uploadImgShow\" ></div>"
		 var BadDivBotHtml = "<div class=\"evaluateBadDivBot\" style=\"margin-top:10px;margin-bottom: 3px;\">"
			 + "<span id=\"submitPageBadFeedback\" style=\"border:1px solid #D9D9D9; background-color: #D9D9D9;\" >" + msg3 + "</span>"
			 + "<span id=\"CancelsubmitPageBadFeedback\" onclick=\"uspJS.clearEvaluateBadDiv()\" style=\"border:1px solid #D9D9D9;\" >" + msg2 + "</span><div id=\"PageBadFeedbackError\" style=\"color:red;display:none;\">" + msg9 + "</div><div>";
		 var bandHtmlsub = textareaTip + BadDivBotHtml;
		 var bandhtmlcontent = "<div style=\"text-align: left;\" ><span style=\"color:red;\">*</span><span style=\"color:#333;font-size:12px;\" >" + msg4 + "：</span></div>"
			 + "<div id=\"OpiniontypeIdV3\" class=\"Opiniontype mt10\" ><div style=\"width: auto;display: inline-block;height: 62px;margin: 0px auto;\" >"
			 + "<span tips1=\"s1\" grade=\"5\" onclick=\"uspJS.clickOpiniontypeSpan(this);\" ><i class=\"s1\" ></i><p>" + msg5 + "</p></span>"
			 + "<span tips1=\"s2\" class=\"clas2 typeIdV3\" grade=\"6\" onclick=\"uspJS.clickOpiniontypeSpan(this);\" ><i class=\"s2\" ></i><p style=\"color:#000\">" + msg6 + "</p></span>"
			 + "<span tips1=\"s3\" grade=\"7\" onclick=\"uspJS.clickOpiniontypeSpan(this);\" ><i class=\"s3\" ></i><p>" + msg7 + "</p></span></div></div>"
			 + "<div class=\"mt15\" style=\"text-align: left;color:#333;font-size:12px;\" ><span>" + msg8 + "</span></div>"
			 + "<div id=\"ProblemSuggestions\" >"
			 + "<span class=\"b-rad2\" onclick=\"uspJS.clickProblemSuggestions(this);\" >" + msg17 + "</span>"
			 + "<span class=\"b-rad2\" onclick=\"uspJS.clickProblemSuggestions(this);\" >" + msg18 + "</span>"
			 + "<span class=\"b-rad2\" onclick=\"uspJS.clickProblemSuggestions(this);\" >" + msg19 + "</span>"
			 + "<span class=\"b-rad2 mr0\" onclick=\"uspJS.clickProblemSuggestions(this);\" >" + msg20 + "</span></div>";
 
		 var bandHtmlTip1 = "<div id=\"bandHtmlTipDivid1\" class=\"bandHtmlTip\" ></div><div id=\"bandHtmlTips2Divid1\" class=\"bandHtmlTips2\" ></div>";
		 var bandHtmlTip2 = "<div id=\"bandHtmlTipDivid2\" class=\"bandHtmlTip\" ></div><div id=\"bandHtmlTips2Divid2\" class=\"bandHtmlTips2\" ></div>";
 
		 var dishtmlcontent = "<div id=\"evaluateBadDivm2\" class=\"m2 pr\" style=\"display: none;\">" + bandHtmlTip2 + "<div id=\"OpiniontypeIdV4\" class=\"Opiniontype mt10\"><span><i class=\"s4\"></i></span></div>"
			 + "<div style=\"text-align: center;\" ><span style=\"font-size: 14px;\">" + msg21 + "</span></div><div class=\"OpiniontypeIdV4openservlet\" style=\"text-align: center;\" class=\"mt10\"><span>" + msg22 + "</span><span class=\"servletList\" onclick=\"uspJS.openMyServiceListWindow();\" style=\"color: #2196F3;\">" + msg23 + "</span><span>" + msg24 + "</span></div>";
 
		 bandHtml = bandHtml + "<div id=\"evaluateBadDivm1\" class=\"m1 pr\" style=\"display:block;\" >" + bandHtmlTip1 + bandhtmlcontent + bandHtmlarea + bandHtmlsub + "</div></div></div>" + dishtmlcontent;
		 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
		 if (document.getElementById("evaluateBadDiv") != null && document.getElementById("evaluateBadDiv").innerHTML != null) {
			 uspJS.evaluationPosition();
			 var div = document.getElementById("evaluateBadDiv");
			 if (div.style.display == "block") {
				 div.style.display = "none";
			 } else {
				 try {
					 if (uspJS.w3Tel) {
						 document.getElementById("telinputdiv").style.display = "block";
						 document.getElementById("telinput").value = uspJS.w3TelVal;
					 }
					 else {
						 document.getElementById("telinputdiv").style.display = "none";
					 }
				 } catch (e) { }
				 div.style.display = "block";
			 }
		 } else {
			 bandobj.innerHTML = bandHtml;
			 document.getElementById("usp_yan").appendChild(bandobj);
			 uspJS.evaluationPosition();
			 //			document.getElementById("usp_yan").innerHTML = document.getElementById("usp_yan").innerHTML + bandHtml;
			 // 加入可拖拽功能 （addby 2015.8.6） start
			 //			var drag = document.getElementById("arrowIconSpanV2");	
			 var drag = document.getElementById("usp_entrance_ul");
			 if (document.attachEvent) {
				 drag.attachEvent('onmousedown', dragHandle);
			 } else {
				 drag.addEventListener('mousedown', dragHandle, false);
			 }
			 if (uspJS.w3Tel) {
				 document.getElementById("telinputdiv").style.display = "block";
				 document.getElementById("telinput").value = uspJS.w3TelVal;
			 }
		 }
		 var ispanval = document.getElementById("evaluateBadDiv").getBoundingClientRect();
		 var docheightval = document.documentElement.clientHeight - 30;
		 if (ispanval.bottom > docheightval) {
			 document.getElementById("evaluateBadDiv").style.top = "-" + (ispanval.bottom - docheightval - 48) + "px";
			 document.getElementById("bandHtmlTipDivid1").style.top = ispanval.bottom - docheightval + "px";
			 document.getElementById("bandHtmlTips2Divid1").style.top = (ispanval.bottom - docheightval - 1) + "px";
		 }
	 },
	 clickOpiniontypeSpan: function(obj) {
		 var msg9 = "操作高效", msg10 = "加载快", msg11 = "功能完整", msg12 = "清晰好用", msg13 = "功能缺失",
			 msg14 = "性能差", msg15 = "体验差", msg16 = "数据缺失", msg17 = "业务规则", msg18 = "功能优化",
			 msg19 = "体验改进", msg20 = "故障错误";
		 if (uspJS.locale == "en_US") {
			 msg9 = "Effective";
			 msg10 = "Fast loading";
			 msg11 = "Fully functional";
			 msg12 = "User-friendly";
			 msg13 = "Loss of function";
			 msg14 = "Poor performance";
			 msg15 = "Poor experience";
			 msg16 = "Missing data";
			 msg17 = "Rules";
			 msg18 = "Function optimization";
			 msg19 = "Experience improvement";
			 msg20 = "Error";
		 }
		 var ts = document.getElementById("OpiniontypeIdV3").getElementsByTagName("span");
		 for (var i = 0, l = ts.length; i < l; i++) {
			 ts[i].className = "";
			 ts[i].getElementsByTagName("p")[0].setAttribute("style", "color:#999");
		 }
		 var claName = "cla" + obj.getAttribute("tips1");
		 if (!uspJS.hasClass(obj, claName)) {
			 obj.className += " " + claName;
			 obj.className += " typeIdV3";
			 /*obj.classList.add(claName);
			 obj.classList.add("typeIdV3");*/
			 obj.getElementsByTagName("p")[0].setAttribute("style", "color:#333");
		 }
		 var suggerts = document.getElementById("ProblemSuggestions").getElementsByTagName("span");
		 var replaceClass = "spanselected";
		 if (claName == "clas1") {
			 suggerts[0].innerText = msg9;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[1].innerText = msg10;
			 if (uspJS.hasClass(suggerts[1], "spanselected")) {
				 suggerts[1].className = suggerts[1].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[2].innerText = msg11;
			 if (uspJS.hasClass(suggerts[2], "spanselected")) {
				 suggerts[2].className = suggerts[2].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[3].innerText = msg12;
			 if (uspJS.hasClass(suggerts[3], "spanselected")) {
				 suggerts[3].className = suggerts[3].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
		 } else if (claName == "clas3") {
			 suggerts[0].innerText = msg13;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[1].innerText = msg14;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[2].innerText = msg15;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[3].innerText = msg16;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
		 } else {
			 suggerts[0].innerText = msg17;
			 if (uspJS.hasClass(suggerts[0], "spanselected")) {
				 suggerts[0].className = suggerts[0].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[1].innerText = msg18;
			 if (uspJS.hasClass(suggerts[1], "spanselected")) {
				 suggerts[1].className = suggerts[1].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[2].innerText = msg19;
			 if (uspJS.hasClass(suggerts[2], "spanselected")) {
				 suggerts[2].className = suggerts[2].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
			 suggerts[3].innerText = msg20;
			 if (uspJS.hasClass(suggerts[3], "spanselected")) {
				 suggerts[3].className = suggerts[3].className.replace(new RegExp('(\\s|^)' + replaceClass + '(\\s|$)'), " ");
			 }
		 }
		 var subPage = document.getElementById("submitPageBadFeedback");
		 subPage.removeAttribute("style");
		 subPage.onclick = function() {
			 uspJS.savePageBadFeedback();
		 }
	 },
	 clickuploadImg: function() {
		 document.getElementById("liveservice_uploadFile_input").click();
	 },
	 fileChangEvent: function() {//文件上传
		 var fileDom = document.getElementById("liveservice_uploadFile_input");
		 if (fileDom) {
			 var commonData = {};
			 commonData.docType = "uspJS.fileUploadImg";
			 if (fileDom.files && fileDom.files[0]) {
				 commonData.edmIs = fileDom;
				 //				commonData.docPath = window.URL.createObjectURL(fileDom.files[0]);
			 }
			 //记录用户w3账号
			 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
				 uspJS.getw3Account();
			 } else {
				 commonData.userId = uspJS.userAccount;
			 }
			 commonData.docName = fileDom.files[0].name;
			 uspJS.jsonp({
				 url: uspJS.uspServiceHost + uspJS.evaluateFeedbackService + "/uploadImageEDM",
				 data: commonData
			 }, uspJS.scriptClassName);
		 }
	 },
	 fileUploadImg: function(data) {
	 },
	 clickProblemSuggestions: function(obj) {
		 if (!uspJS.hasClass(obj, "spanselected")) {
			 obj.className += " spanselected";
		 } else {
			 if (uspJS.hasClass(obj, "spanselected")) {
				 obj.className = obj.className.replace(new RegExp('(\\s|^)' + 'spanselected' + '(\\s|$)'), " ");
			 }
		 }
		 var subPage = document.getElementById("submitPageBadFeedback");
		 subPage.removeAttribute("style");
		 subPage.onclick = function() {
			 uspJS.savePageBadFeedback();
		 }
	 },
	 openEvaluationB: function() {//评价B
		 try {
			 if (uspJS.userAccount === "" || uspJS.userAccount === null || uspJS.userAccount === undefined) {
					uspJS.getw3Account();
			 }
			 if (uspJS.dragclickConflict()) {//解决单击跟拖拽冲突
				 return;
			 }
			 uspJS.cleareBadDivB('ihelp_usp_anliopenHTML');
			 //判断跟上一次评价对比，是否已过5秒,如果不够5秒,则弹框提示
			 if (new Date().getTime() - uspJS.ihelp_num.repeatEvaTime < 5000 && uspJS.ihelp_num.repeatEvaTime != 0) {
				 uspJS.repeatSubmitDialog();
				 uspJS.cleareBadDivB('evaluateSuccessDiv');//关闭掉提交成功提示
				 return;
			 }
			 uspJS.cleareBadDivB('evaluateSuccessDiv2');
			 uspJS.ihelp_num.repeatEvaTime = 0;
			 uspJS.ihelp_num.hotClickNum += 1;
 
			 if (uspJS.ihelp_num.hotClickNum >= 1) {
				 document.getElementById("usp_evaluation_icon_hot").setAttribute("class", "usp_evaluation_icon_hot d_n");
				 uspJS.getihelpNewHotLocStr("hotBol");
			 }
			 try {
				 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {//判断当前是否为登录状态
					 var uspJS_logFlag = uspJS.getCookie("login_logFlag");
					 var logFlag = uspJS.getCookie("logFlag");
					 var logFlagBol = (!uspJS.isNull(logFlag)) && logFlag == "in";
					 var uspJS_logFlagBol = (!uspJS.isNull(uspJS_logFlag)) && uspJS_logFlag == "in";
					 var logBol = uspJS.isNull(logFlag) && uspJS.isNull(uspJS_logFlag);
					 var valBol = logFlagBol == true || uspJS_logFlagBol == true ? false : logFlagBol == false && uspJS_logFlagBol == false ? true : logBol == true ? true : false;
					 if (valBol) {
						 if (document.getElementById("evaluateBadDivB") != null) {
							 var evaluateBadDivB = document.getElementById("evaluateBadDivB");
							 evaluateBadDivB.remove();
						 }
						 var titleVal = uspJS.locale == 'en_US' ? "The login session has expired and you are not able to appraise. Please log in again." : "用户登录已超时，无法进行评价。请重新登录。";
						 var bandobj = document.createElement("div");
						 bandobj.setAttribute("id", "evaluateBadDivB");
						 bandobj.setAttribute("class", "evaluateBadDiv b-rad2 boxs");
						 bandobj.setAttribute("style", "display:block;");
						 var bandHtml = "<div class=\"uspclearfix1\" >" +
							 "<span id=\"ihelp_uspclearfix_span\" style=\"line-height:25px;font-size: 13px;color: #808080;margin: 10px 15px 10px 20px;display: inline-block;\" >" + titleVal + "</span></div>";
 
						 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
						 bandobj.innerHTML = bandHtml;
						 document.getElementById("usp_yan").appendChild(bandobj);
						 uspJS.evaluationPosition();//动态评价框位置
						 setTimeout(function() {
							 var evaluateBadDivB = document.getElementById("evaluateBadDivB")
							 evaluateBadDivB.remove();
						 }, 3000);
						 return;
					 }
				 }
			 } catch (e) { }

			 if (document.getElementById("evaluateBadDivB") != null && document.getElementById("evaluateBadDivB").innerHTML != null) {
				 var div = document.getElementById("evaluateBadDivB");
				 if (div.style.display == "block") {
					 div.style.display = "none";
				 } else {
					 uspJS.updateYfSvgScore();
					 div.style.display = "block";
				 }
			 	} else {
				 	try{
						var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
						if (valnum != -1) {
							uspJS.getVersionplugIn();
						}else{
							uspJS.getPlugInArr();
						}
				 	}catch(e){}
				 var top = 0;
				 for (var i = 0, l = uspJS.version.butPlugInArr.length; i < l; i++) {
					 if (uspJS.version.butPlugInArr[i] == "2") {
						 top = i * 50;
					 }
				 }
				 var definedConfigObj = uspJS.getdefinedConfigObj();
				 var bandobj = document.createElement("div");
				 bandobj.setAttribute("id", "evaluateBadDivB");
				 bandobj.setAttribute("class", "evaluateBadDiv b-rad2 boxs");
				 bandobj.setAttribute("style", "display:block;");
				 // if((!uspJS.isNull(uspJS.version.plugIn.YN)) && uspJS.version.plugIn.YN == "Y"){
				 // 	bandobj.setAttribute("id", "evaluateBadDivB_yf");
				 // }
				 var placeholderText = (!uspJS.isNull(uspJS.version.plugIn.YN)) && uspJS.version.plugIn.YN == "Y" ?
					 uspJS.Bdigmsg.msg19[uspJS.locale || 'en_US']
					 :
					 uspJS.Bdigmsg.msg1[uspJS.locale || 'en_US']//msg19
				 var titleText = (!uspJS.isNull(uspJS.version.plugIn.YN)) && uspJS.version.plugIn.YN == "Y" ?
					 uspJS.Bdigmsg.msg15[uspJS.locale || 'en_US']
					 :
					 !uspJS.isNull(definedConfigObj) ?
						 uspJS.locale == 'en_US' ? definedConfigObj.titleEn : definedConfigObj.titleCh
						 :
						 uspJS.Bdigmsg.msg10[uspJS.locale || 'en_US'];
				 
				 var bandHtml = "";
				 var leftHtml = '<div id="ihelp_lefttips" class="lefttips box" style="top:' + top + 'px;" ></div>';
				 var rightHtml = '<div id="ihelp_righttips" class="righttips box" style="top:' + top + 'px;" ></div>';
				 var bandHtmlTitle = "<div id=\"ihelp_evaluateTitle\" class=\"evaluateTitle\" >" + titleText + "</div>";
				 var bandHtmleva = "<div class=\"uspclearfix1\" style=\"line-height: 54px;height: 54px;\" >" +
					 "<span id=\"ihelp_uspclearfix_span\" style=\"float:left;line-height:54px;font-size: 13px;color: #808080;margin: 0px 15px 0px 20px;\" >" + uspJS.Bdigmsg.msg11[uspJS.locale || 'en_US'] + " :</span><ul id=\"evaluateUl\" >" +
					 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"10\" textval=\"" + uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US'] + "\" ></li>" +
					 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"20\" textval=\"" + uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US'] + "\" ></li>" +
					 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"30\" textval=\"" + uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US'] + "\" ></li>" +
					 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"40\" textval=\"" + uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US'] + "\" ></li>" +
					 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"50\" textval=\"" + uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US'] + "\" ></li>" +
					 "</ul><span id=\"evaluateUltextval\"></span></div>";
				 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
					 var yfSvgScore1 = uspJS.yfOpsInfo.yfSvgScore1 === '0' || uspJS.yfOpsInfo.yfSvgScore1 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore1;
					 var yfSvgScore2 = uspJS.yfOpsInfo.yfSvgScore2 === '0' || uspJS.yfOpsInfo.yfSvgScore2 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore2;
					 var yfSvgScore3 = uspJS.yfOpsInfo.yfSvgScore3 === '0' || uspJS.yfOpsInfo.yfSvgScore3 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore3;
 
					 yfSvgScore1 = yfSvgScore1 === '--' ? yfSvgScore1 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore1+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
					 yfSvgScore2 = yfSvgScore2 === '--' ? yfSvgScore2 : uspJS.locale === 'en_US'? yfSvgScore2 : yfSvgScore2+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
					 yfSvgScore3 = yfSvgScore3 === '--' ? yfSvgScore3 : uspJS.locale === 'en_US'? yfSvgScore3 : yfSvgScore3+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
					 
					 bandHtmleva = "<div class=\"uspclearfix\" style=\"height: 90px;margin: 18px 0px;\" >" +
						 "<span id=\"ihelp_uspclearfix_span1\" style=\"height:30px;display:block;font-size: 13px;color: #808080;\" >" +
						 "<p id=\"ihelp_uspclearfix_span1_p\" >" + uspJS.Bdigmsg.msg12[uspJS.locale || 'en_US'] + "</p>" +
						 "<p style=\"float: left;line-height: 30px;margin:0px 5px 0px 0px;padding:0px;font-size: 13px;\" > : </p><ul class=\"ihelp_usp_evaluateUls\" >" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"10\" textval=\"" + uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"20\" textval=\"" + uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"30\" textval=\"" + uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"40\" textval=\"" + uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"50\" textval=\"" + uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "</ul><p id=\"ihelp_uspclearfix_span1_checkVal\" class=\"evaluateUltextval\"  ></p>" +
						 "<p id=\"ihelp_uspclearfix_span1_score\" style=\"line-height: 30px;float: left;margin:0px;padding:0px;margin-left: 5px;\">" + yfSvgScore1 + "</p>"+
						 "<i class=\"score1iconclass\" onmouseover=\"uspJS.mouseoverScore1Tip()\" onmouseout=\"uspJS.mouseoutScore1Tip()\" ><i id=\"ihelp_usp_yf_score1TipId_i\" ></i><span id=\"ihelp_usp_yf_score1TipId\" style=\"display:none;\" >"+ uspJS.Bdigmsg.msg22[uspJS.locale || 'en_US'] +"<span></i></span>" +
						 "<span id=\"ihelp_uspclearfix_span2\" style=\"height:30px;display:block;font-size: 13px;color: #808080;\" >" +
						 "<p id=\"ihelp_uspclearfix_span2_p\" >" + uspJS.Bdigmsg.msg13[uspJS.locale || 'en_US'] + "</P>" +
						 "<p style=\"float: left;line-height: 30px;margin:0px 5px 0px 0px;padding:0px;font-size: 13px;\" > : </p><ul class=\"ihelp_usp_evaluateUls\" >" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"10\" textval=\"" + uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"20\" textval=\"" + uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"30\" textval=\"" + uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"40\" textval=\"" + uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"50\" textval=\"" + uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "</ul><p id=\"ihelp_uspclearfix_span2_checkVal\" class=\"evaluateUltextval\"  ></p>" +
						 "<p id=\"ihelp_uspclearfix_span2_score\" style=\"line-height: 30px;float: left;margin:0px;padding:0px;margin-left: 5px;\">" + yfSvgScore2 + "</p></span>" +
						 "<span id=\"ihelp_uspclearfix_span3\" style=\"height:30px;display:block;font-size: 13px;color: #808080;\" >" +
						 "<p id=\"ihelp_uspclearfix_span3_p\" >" + uspJS.Bdigmsg.msg14[uspJS.locale || 'en_US'] + "</p>" +
						 "<p style=\"float: left;line-height: 30px;margin:0px 5px 0px 0px;padding:0px;font-size: 13px;\" > : </p><ul class=\"ihelp_usp_evaluateUls\" >" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"10\" textval=\"" + uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"20\" textval=\"" + uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"30\" textval=\"" + uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"40\" textval=\"" + uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"50\" textval=\"" + uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US'] + "\" ></li>" +
						 "</ul><p id=\"ihelp_uspclearfix_span3_checkVal\" class=\"evaluateUltextval\"  ></p>" +
						 "<p id=\"ihelp_uspclearfix_span3_score\" style=\"line-height: 30px;float: left;margin:0px;padding:0px;margin-left: 5px;\">" + yfSvgScore3 + "</p></span></div>";
				 } else if (!uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.dimensionCh)) {
					 var dimensionArray = uspJS.locale == 'en_US' ? definedConfigObj.dimensionEn : definedConfigObj.dimensionCh;
					 dimensionArray = dimensionArray.split(",");
					 bandHtmleva = "<div id=\"ihelp_definedConfigList\" class=\"uspclearfix\" style=\"min-height:54px;height: auto;margin: 18px 0px;\" >";
					 for (var i = 0, l = dimensionArray.length; i < l; i++) {
						 bandHtmleva += "<span style=\"height:30px;display:block;font-size: 13px;color: #808080;\" >" +
							 "<p class=\"ihelp_definedConfigObj\" style=\"float: left;line-height: 30px;width: 125px;text-align: center;margin:0px;padding:0px 5px;font-size: 13px;overflow: hidden;text-overflow: ellipsis;\" >" + dimensionArray[i] + "</p>" +
							 "<p style=\"float: left;line-height: 30px;margin:0px 10px 0px 0px;padding:0px;font-size: 13px;\" > : </p><ul class=\"ihelp_usp_evaluateUls\" >" +
							 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"10\" textval=\"" + uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US'] + "\" style=\"\margin:5px 2px;\" ></li>" +
							 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"20\" textval=\"" + uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US'] + "\" style=\"\margin:5px 2px;\" ></li>" +
							 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"30\" textval=\"" + uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US'] + "\" style=\"\margin:5px 2px;\" ></li>" +
							 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"40\" textval=\"" + uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US'] + "\" style=\"\margin:5px 2px;\" ></li>" +
							 "<li onclick=\"uspJS.evaluateLiClick(this)\" class=\"evaluateTip\" vals=\"50\" textval=\"" + uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US'] + "\" style=\"\margin:5px 2px;\" ></li>" +
							 "</ul><p class=\"evaluateUltextval\" style=\"float: left;line-height: 30px;margin: 0px 5px 0px 10px;color: #808080;font-size: 13px;\"></p></span>"
					 }
					 bandHtmleva += "</div>";
				 }
 
				 var areaNumHtml = "<p class=\"areaNumHtml\" ><span id=\"areaNumHtmlSpan\" >0</span>/<span>200</span></p>";
				 var bandHtmlarea = "<div style=\"width:100%;height:92px;position: relative;\" >" + areaNumHtml + "<textarea id=\"textareaContentB\" name=\"evaluateContent\" placeholder=\"" + placeholderText + "\" onkeydown=\"uspJS.textareaOnChangeValB(this.value)\" onkeyup=\"uspJS.textareaOnChangeValB(this.value)\" onchange=\"uspJS.textareaOnChangeValB(this.value)\" ></textarea></div>";
				 var btnhtml = "<div class=\"uspclearfix\"><span id=\"evaluateBtn\" class=\"evaluateBtn\" >" + uspJS.Bdigmsg.msg2[uspJS.locale || 'en_US'] + "</span>"
					 + "<span id=\"evaluateBtnCancel\" class=\"evaluateBtnCancel\" onclick=\"uspJS.evaluateBtnCancelclick()\" >" + uspJS.Bdigmsg.msg9[uspJS.locale || 'en_US'] + "</span></div>";
				 var anonymousHtml = "";
				 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
					 var anVal = uspJS.getCookie('ihelp_anonymous');
					 var opsTotal = uspJS.isNull(uspJS.version.plugIn.opsTotal)?0:uspJS.version.plugIn.opsTotal;
					 var checkaText = uspJS.Bdigmsg.msg18[uspJS.locale || 'en_US']+'('+opsTotal+')';
					 anonymousHtml = '<div style="text-align: left;box-sizing: border-box;padding: 3px 20px;"><div style="padding: 5px	0px;" >';
					 if(!uspJS.isNull(anVal) && anVal === '1'){
						 anonymousHtml += '<input type="checkbox" name="uspihelpCheckBox" onchange="uspJS.anCheckBoxValChange(this)" checked="checked" value="Y" style="vertical-align: middle;margin-left: 0px;" />';
					 }else{
						 anonymousHtml += '<input type="checkbox" name="uspihelpCheckBox" onchange="uspJS.anCheckBoxValChange(this)" value="Y" style="vertical-align: middle;margin-left: 0px;" />';
					 }					 
					 anonymousHtml += '<span id="uspihelpCheckBoxSpan" style="vertical-align: middle;font-size: 12px;color: #999999;">' + uspJS.Bdigmsg.msg16[uspJS.locale || 'en_US'] + '</span>' +
					 '<a id="ihelp_usp_yf_checkBoxa" onclick="uspJS.checkBoxaClick()" class="checkBoxaClass" style="cursor: pointer;float: right;color:rgb(0, 122, 255);">'+checkaText + '</a></div><div><span id="uspihelpCheckBoxSpanRemarks" style="font-size: 12px;color: #282828;">' + uspJS.Bdigmsg.msg17[uspJS.locale || 'en_US'] + '</span></div></div>'
				 }
				 bandHtmlarea += anonymousHtml;
				 bandHtml = bandHtmlTitle + bandHtmleva + bandHtmlarea + btnhtml + leftHtml + rightHtml;
				 //				bandHtml = bandHtmlTitle+bandHtmleva+bandHtmlarea+btnhtml;
				 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
				 bandobj.innerHTML = bandHtml;
				 document.getElementById("usp_yan").appendChild(bandobj);
			 }
			 uspJS.evaluationPosition();//动态评价框位置
			 //			uspJS.addevaluateUlClick();//添加星星的单击事件
			//  try{
			// 		window.hwa('trackPageView','PC0ACD15CDF298B');
			// 	}catch(e){}
		 } catch (e) { }
	 },
	 updateYfSvgScore: function(){
		 try{
			 var valnum = uspConfig.uspPortalServiceHost.indexOf("app.huawei.com");
			 if (valnum != -1) {
				 uspJS.getVersionplugIn();
			 }else{
				 uspJS.getPlugInArr();
			 }
			 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
				 var yfSvgScore1 = uspJS.yfOpsInfo.yfSvgScore1 === '0' || uspJS.yfOpsInfo.yfSvgScore1 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore1;
				 var yfSvgScore2 = uspJS.yfOpsInfo.yfSvgScore2 === '0' || uspJS.yfOpsInfo.yfSvgScore2 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore2;
				 var yfSvgScore3 = uspJS.yfOpsInfo.yfSvgScore3 === '0' || uspJS.yfOpsInfo.yfSvgScore3 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore3;
				 yfSvgScore1 = yfSvgScore1 === '--' ? yfSvgScore1 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore1+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
				 yfSvgScore2 = yfSvgScore2 === '--' ? yfSvgScore2 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore2+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
				 yfSvgScore3 = yfSvgScore3 === '--' ? yfSvgScore3 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore3+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
				 document.getElementById("ihelp_uspclearfix_span1_score").innerText = yfSvgScore1;
				 document.getElementById("ihelp_uspclearfix_span2_score").innerText = yfSvgScore2;
				 document.getElementById("ihelp_uspclearfix_span3_score").innerText = yfSvgScore3;
				 var opsTotal = uspJS.isNull(uspJS.version.plugIn.opsTotal)?0:uspJS.version.plugIn.opsTotal;
				 var checkaText = uspJS.Bdigmsg.msg18[uspJS.locale || 'en_US']+'('+opsTotal+')';
				 document.getElementById("ihelp_usp_yf_checkBoxa").innerText = checkaText;
			 }	
		 }catch(e){}
	 },
	 checkBoxaClick:function(){
		 var openUrl = uspJS.reviewsDetailsURL_host + uspJS.reviewsDetailsURL + "?appId="+uspJS.appId+"&isWinLoading=Y&language="+uspJS.locale;
		 var newWin = window.open(openUrl);
		 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
		 newWin.focus();
	 },
	 getdefinedConfigObj: function() {
		 var definedConfigObj = null;
		 try {
			 if (!uspJS.isNull(uspJS.version.plugIn) && !uspJS.isNull(uspJS.version.plugIn.definedConfigs)) {//自定义评价的数据
				 var butArrar = uspJS.version.plugIn.definedConfigs;
				 for (var i = 0, l = butArrar.length; i < l; i++) {
					 if (butArrar[i].componentType == "2") {
						 definedConfigObj = butArrar[i];
					 }
				 }
			 }
			 return definedConfigObj;
		 } catch (e) {
			 return definedConfigObj;
		 }
	 },
	 evaluateBtnCancelclick: function() {
		 try {
			 document.getElementById("evaluateBadDivB").style.display = "none";
		 } catch (e) { }
	 },
	 textareaOnChangeValB: function(val) {
		 try {
			var textareaObj = document.getElementById("textareaContentB");
			var val = textareaObj.value;
			if(val.length>0){
				textareaObj.setAttribute('class','placeholder')
			}else{
				textareaObj.setAttribute('class','')
			}
			// val = val.replace(/(^\s*)|(\s*$)/g, "");
			// var classVal = textareaObj.getAttribute('calss')
			uspJS.getEvaluateBtnType();			 
		 } catch (e) { }
	 },
 
	 evaluateLiClick: function(obj) {
		 try {
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var ulelemnt;
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y" || !uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.dimensionCh)) {
				 ulelemnt = obj.parentNode.getElementsByTagName("li");
			 } else {
				 ulelemnt = document.getElementById("evaluateUl").getElementsByTagName("li");
			 }
			 var vals = obj.getAttribute("vals");
			 
			 var textval = "";
			 for (var i = 0, l = ulelemnt.length; i < l; i++) {
				 var elmvals = ulelemnt[i].getAttribute("vals");
				 if (vals >= elmvals) {
					 var evaluateTipval = vals === elmvals && ulelemnt[i].getAttribute("class") === 'evaluateTip_false' ? 'evaluateTip':'evaluateTip_false'
					 if (document.attachEvent) {//做兼容，兼容IE低版本
						 ulelemnt[i].attributes["class"].nodeValue = evaluateTipval;//给元素属性赋值
						 textval = evaluateTipval === 'evaluateTip_false' ? ulelemnt[i].attributes["textval"].nodeValue : '';//获取元素的值
					 } else {
						 ulelemnt[i].setAttribute("class", evaluateTipval);
						 textval = evaluateTipval === 'evaluateTip_false' ? ulelemnt[i].getAttribute("textval") : "";
					 }
				 } else {
					 if (document.attachEvent) {//做兼容，兼容IE低版本
						 ulelemnt[i].attributes["class"].nodeValue = "evaluateTip";//给元素属性赋值
					 } else {
						 ulelemnt[i].setAttribute("class", "evaluateTip");
					 }
				 }
			 }
			 //			if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
			 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y" || !uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.dimensionCh)) {
				 obj.parentNode.nextElementSibling.innerText = textval;
			 } else {
				 document.getElementById("evaluateUltextval").innerText = textval;
			 }
			 uspJS.getEvaluateBtnType();
		 } catch (e) { }
	 },
	 getEvaluateBtnType: function() {
		 var elmBol = false;
		 if(!elmBol){
			 var textareaObj = document.getElementById("textareaContentB");
			 var val = textareaObj.value;
			 val = val.replace(/(^\s*)|(\s*$)/g, "");
			 elmBol = uspJS.isNull(val)? false:true;
			 var num = val.length;
			 document.getElementById("areaNumHtmlSpan").innerHTML = num;
			 if (num >= 200) {
				 document.getElementById("textareaContentB").value = val.substring(0, 200);
			 }
		 }
		 if(!elmBol) {
			 if(!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y"){
				 var elm1 = document.getElementById("ihelp_uspclearfix_span1").getElementsByTagName("li");
				 var elm2 = document.getElementById("ihelp_uspclearfix_span2").getElementsByTagName("li");
				 var elm3 = document.getElementById("ihelp_uspclearfix_span3").getElementsByTagName("li");
				 for (var i = 0, l = elm1.length; i < l; i++) {
					 var elmvals = elm1[i].getAttribute("class");
					 if(elmvals === 'evaluateTip_false') {
						 elmBol = true;
						 break;
					 }
				 }
				 if(!elmBol){				
					 for (var i = 0, l = elm2.length; i < l; i++) {
						 var elmvals = elm2[i].getAttribute("class");
						 if(elmvals === 'evaluateTip_false') {
							 elmBol = true;
							 break;
						 }
					 }
				 }
				 if(!elmBol) {
					 for (var i = 0, l = elm3.length; i < l; i++) {
						 var elmvals = elm3[i].getAttribute("class");
						 if(elmvals === 'evaluateTip_false') {
							 elmBol = true;
							 break;
						 }
					 }
				 }
			 }else{
				 var ulList = document.getElementById('ihelp_definedConfigList').getElementsByTagName("ul");
				 for(var i=0,l=ulList.length;i<l;i++){
					 if(elmBol){
						 break;
					 }
					 var liList = ulList[i].getElementsByTagName("li");
					 for(var a=0,b=liList.length;a<b;a++){
						 var elmvals = liList[a].getAttribute("class");
						 if(elmvals === 'evaluateTip_false') {
							 elmBol = true;
							 break;
						 }
					 }
				 }
			 }
		 }
		 if(elmBol){
			 document.getElementById("evaluateBtn").style.background = "#007AFF";
			 document.getElementById("evaluateBtn").removeAttribute("onclick");
			 document.getElementById("evaluateBtn").setAttribute("onclick", "uspJS.saveEvaluateB()");
		 }else{
			 document.getElementById("evaluateBtn").removeAttribute("onclick");
			 document.getElementById("evaluateBtn").style.background = "#DDD";
		 }
	 },
	 saveEvaluateB: function() {//提交保存
		 try {
			 //			uspJS.saveEvaluateBReset();//重置
			 document.getElementById("evaluateBtn").removeAttribute("onclick");
			 document.getElementById("evaluateBtn").style.background = "#DDD";
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 var commonData = {};
			 var elmvals = "0", evaluateTag = '';//星星的值
			 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
				 var elm1 = document.getElementById("ihelp_uspclearfix_span1").getElementsByTagName("li");
				 var elm2 = document.getElementById("ihelp_uspclearfix_span2").getElementsByTagName("li");
				 var elm3 = document.getElementById("ihelp_uspclearfix_span3").getElementsByTagName("li");
				 var elm1val = 0, elm2val = 0, elm3val = 0, valnum = 0;
				 for (var i = 0, l = elm1.length; i < l; i++) {
					 var elmclass = elm1[i].getAttribute("class");
					 if ("evaluateTip_false" == elmclass) {
						 var elval = elm1[i].getAttribute("vals");
						 elm1val = uspJS.isNull(elval) ? elval : elm1val < elval ? elval : elm1val;
					 }
				 }
				 if (parseInt(elm1val) > 0) {
					 elmvals = parseInt(elm1val);
					 evaluateTag += uspJS.Bdigmsg.msg12[uspJS.locale] + "-" + elm1val / 10 + ',';
				 } else {
					 elmvals = 0;
					 evaluateTag += uspJS.Bdigmsg.msg12[uspJS.locale] + "-null,";
				 }
				 valnum = parseInt(elm1val) > 0 ? 1 : 0;
				 for (var i = 0, l = elm2.length; i < l; i++) {
					 var elmclass = elm2[i].getAttribute("class");
					 if ("evaluateTip_false" == elmclass) {
						 var elval = elm2[i].getAttribute("vals");
						 elm2val = uspJS.isNull(elval) ? elval : elm2val < elval ? elval : elm2val;
					 }
				 }
				 if (parseInt(elm2val) > 0) {
					 elmvals = parseInt(elm2val) + elmvals;
					 evaluateTag += uspJS.Bdigmsg.msg13[uspJS.locale] + "-" + elm2val / 10 + ',';
				 } else {
					 evaluateTag += uspJS.Bdigmsg.msg13[uspJS.locale] + "-null,";
				 }
				 valnum = parseInt(elm2val) > 0 ? 1 + valnum : 0 + valnum;
				 for (var i = 0, l = elm3.length; i < l; i++) {
					 var elmclass = elm3[i].getAttribute("class");
					 if ("evaluateTip_false" == elmclass) {
						 var elval = elm3[i].getAttribute("vals");
						 elm3val = uspJS.isNull(elval) ? elval : elm3val < elval ? elval : elmvals;
					 }
				 }
				 valnum = parseInt(elm3val) > 0 ? 1 + valnum : 0 + valnum;
				 elmvals = parseInt(elm3val) > 0 ? Math.round((parseInt(elm3val) + elmvals) / (valnum * 10)) * 10 : Math.round(elmvals / (valnum * 10)) * 10;
				 if (parseInt(elm3val) > 0) {
					 evaluateTag += uspJS.Bdigmsg.msg14[uspJS.locale] + "-" + elm3val / 10;
				 } else {
					 evaluateTag += uspJS.Bdigmsg.msg14[uspJS.locale] + "-null";
				 }
				 if (!uspJS.isNull(evaluateTag)) {
					 evaluateTag = evaluateTag.substring(evaluateTag.length - 1) == "," ? evaluateTag.substring(0, evaluateTag.length - 1) : evaluateTag;
				 }
			 } else if (!uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.dimensionCh)) {
				 var ulList = document.getElementById("ihelp_definedConfigList").getElementsByTagName("ul");
				 var ulvalNum = 0, ulNum = 0;
				 for (var i = 0, l = ulList.length; i < l; i++) {
					 var liList = ulList[i].children;
					 var elvalNum = 0;
					 for (var j = 0, k = liList.length; j < k; j++) {
						 var elmclass = liList[j].getAttribute("class");
						 if ("evaluateTip_false" == elmclass) {
							 elvalNum = liList[j].getAttribute("vals");
						 }
					 }
					 ulNum = parseInt(elvalNum) > 0 ? ulNum + 1 : ulNum;
					 ulvalNum = parseInt(elvalNum) > 0 ? ulvalNum + parseInt(elvalNum) : ulvalNum;
					 if (parseInt(elvalNum) > 0) {
						 evaluateTag += uspJS.isNull(evaluateTag) ? ulList[i].parentNode.firstChild.innerText + "-" + parseInt(elvalNum) / 10 : ',' + ulList[i].parentNode.firstChild.innerText + "-" + parseInt(elvalNum) / 10;
					 } else {
						 evaluateTag += uspJS.isNull(evaluateTag) ? ulList[i].parentNode.firstChild.innerText + "-null" : ',' + ulList[i].parentNode.firstChild.innerText + "-null";
					 }
				 }
				 elmvals = Math.round(ulvalNum / (ulNum * 10)) * 10;
			 } else {
				 var ulelemnt = document.getElementById("evaluateUl").getElementsByTagName("li");
				 for (var i = 0, l = ulelemnt.length; i < l; i++) {
					 var elmclass = ulelemnt[i].getAttribute("class");
					 if ("evaluateTip_false" == elmclass) {
						 elmvals = uspJS.isNull(ulelemnt[i].getAttribute("vals")) ? ulelemnt[i].getAttribute("vals") : elmvals < ulelemnt[i].getAttribute("vals") ? ulelemnt[i].getAttribute("vals") : elmvals;
					 }
				 }
			 }
 
			 try {
				 commonData.requestSource = 4;
				 commonData.anonymous = 0;
				 var cbList = document.getElementsByName("uspihelpCheckBox");
				 commonData.anonymous = cbList[0].checked ? 1 : 0;
			 } catch (e) { }
 
			 commonData.cratePersonId = uspJS.w3Account;
			 commonData.appId = uspJS.appId;
			 commonData.grade = elmvals;
			 commonData.evaluateTag = evaluateTag;
			 commonData.isHot = uspJS.ihelp_Switch.proEvaBol && uspJS.ihelp_num.hotClickNum == 1 ? '1' : '0';
			 commonData.callbackName = "uspJS.saveEvaluateBsuccess_";
 
			 //记录用户意见备注
			 commonData.remarks = encodeURI(document.getElementById("textareaContentB").value.replace(/(^\s*)|(\s*$)/g, ""));
			 commonData.suggestionType = "1";
			 commonData.paramUrl = uspJS.getlocationHref();
			 uspJS.jsonp({
				 url: uspConfig.uspPortalServiceHost + uspJS.evaluateFeedbackService + "/saveEvaluateCommentData",
				 data: commonData
			 }, uspJS.scriptClassName);
			 document.getElementById("evaluateBadDivB").style.display = "none";
			 uspJS.saveEvaluateBReset();//重置
			 uspJS.saveEvaluateBsuccess();
		 } catch (e) { }
	 },
	 /**
		* 保存成功返回处理，跟saveEvaluateBsuccess，一样
		* saveEvaluateBsuccess这个方法是保存成功之后，
		* 能快速给用户提示保存成功的方法，所以，后台返回成功之后就给一个假方法，
		* saveEvaluateBsuccess_就是这个假方法，不做任何处理
		*/
	 saveEvaluateBsuccess_: function(data) {
 
	 },
	 saveEvaluateBReset: function() {//重置
		 try {
			 var definedConfigObj = uspJS.getdefinedConfigObj();
			 document.getElementById("evaluateBtn").removeAttribute("onclick");
			 document.getElementById("evaluateBtn").style.background = "#DDD";
			 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
				 var elm1 = document.getElementById("ihelp_uspclearfix_span1").getElementsByTagName("li");
				 var elm2 = document.getElementById("ihelp_uspclearfix_span2").getElementsByTagName("li");
				 var elm3 = document.getElementById("ihelp_uspclearfix_span3").getElementsByTagName("li");
				 for (var i = 0, l = elm1.length; i < l; i++) {
					 elm1[i].setAttribute("class", "evaluateTip");
				 }
				 for (var i = 0, l = elm2.length; i < l; i++) {
					 elm2[i].setAttribute("class", "evaluateTip");
				 }
				 for (var i = 0, l = elm3.length; i < l; i++) {
					 elm3[i].setAttribute("class", "evaluateTip");
				 }
				 document.getElementById("ihelp_uspclearfix_span1_checkVal").innerText = "";
				 document.getElementById("ihelp_uspclearfix_span2_checkVal").innerText = "";
				 document.getElementById("ihelp_uspclearfix_span3_checkVal").innerText = "";
			 } else if (!uspJS.isNull(definedConfigObj) && !uspJS.isNull(definedConfigObj.dimensionCh)) {
				 var ulList = document.getElementById("ihelp_definedConfigList").getElementsByTagName("ul");
				 for (var i = 0, l = ulList.length; i < l; i++) {
					 var liList = ulList[i].children;
					 var elvalNum = 0;
					 for (var j = 0, k = liList.length; j < k; j++) {
						 liList[j].setAttribute("class", "evaluateTip");
					 }
					 ulList[i].parentNode.lastChild.innerText = "";
				 }
			 }
			 else {
				 var ulelemnt = document.getElementById("evaluateUl").getElementsByTagName("li");
				 for (var i = 0, l = ulelemnt.length; i < l; i++) {
					 ulelemnt[i].removeAttribute("class");
					 ulelemnt[i].setAttribute("class", "evaluateTip");
				 }
				 document.getElementById("evaluateUltextval").innerText = "";
			 }
			 document.getElementById("textareaContentB").value = "";
			 document.getElementById("areaNumHtmlSpan").innerHTML = "0";
		 } catch (e) { }
	 },
	 saveEvaluateBerror: function() {
		 try {
			 document.getElementById("evaluateBadDivB").style.display = "none";
			 var badleftval = document.getElementById("evaluateBadDivB").style.left;
			 if (document.getElementById("evaluateErrorDiv") != null && document.getElementById("evaluateErrorDiv").innerHTML != null) {
				 document.getElementById("evaluateErrorDiv").style.left = badleftval == '50px' ? "50px" : "-314px";
				 var div = document.getElementById("evaluateErrorDiv");
				 if (div.style.display == "block") {
					 div.style.display = "none";
				 } else {
					 div.style.display = "block";
				 }
			 } else {
				 var bandobj = document.createElement("div");
				 bandobj.setAttribute("id", "evaluateErrorDiv");
				 bandobj.setAttribute("class", "evaluateErrorDiv b-rad2 boxs");
				 badleftval == '50px' ? bandobj.setAttribute("style", "left:" + badleftval) : bandobj.setAttribute("style", "left:-314px");
				 var msg = {
					 msg1: { "zh_CN": "提交失败", "en_US": "Submitted failed." },
					 msg2: { "zh_CN": "关闭", "en_US": "Close" }
				 };
				 var bandHtml = "<div><i class=\"errordivi\" ></i><span>" + msg.msg1[uspJS.locale || 'en_US'] + "</span></div>"
					 + "<div><span class=\"subsuc2\" onclick=\"uspJS.cleareBadDivB(\'evaluateErrorDiv\')\" >" + msg.msg2[uspJS.locale || 'en_US'] + "</span></div>";
				 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
				 bandobj.innerHTML = bandHtml;
				 document.getElementById("usp_yan").appendChild(bandobj);
			 }
			 setTimeout(function() {
				 uspJS.cleareBadDivB("evaluateErrorDiv");
			 }, 3000);
		 } catch (e) { }
	 },
	 saveEvaluateBsuccess: function(data) {
		 try {
			 uspJS.saveEvaluateBReset();//重置
			 //			if('1' != data.returnCode){
			 //				uspJS.saveEvaluateBerror();
			 //				return;
			 //			}
 
			 uspJS.ihelp_num.repeatEvaTime = new Date().getTime();
 
			 document.getElementById("evaluateBadDivB").style.display = "none";
			 var badleftval = document.getElementById("evaluateBadDivB").style.left;
			 if (document.getElementById("evaluateSuccessDiv") != null && document.getElementById("evaluateSuccessDiv").innerHTML != null) {
				 document.getElementById("evaluateSuccessDiv").style.left = badleftval == '50px' ? "50px" : "-356px";
				 var div = document.getElementById("evaluateSuccessDiv");
				 if (div.style.display == "block") {
					 div.style.display = "none";
				 } else {
					 div.style.display = "block";
				 }
			 } else {
				 var bandobj = document.createElement("div");
				 bandobj.setAttribute("id", "evaluateSuccessDiv");
				 bandobj.setAttribute("class", "evaluateSuccessDiv b-rad2 boxs");
				 badleftval == '50px' ? bandobj.setAttribute("style", "left:" + badleftval) : bandobj.setAttribute("style", "left:-356px");
				 var msg = {
					 msg1: { "zh_CN": "提交成功", "en_US": "Submitted successfully" },
					 msg2: { "zh_CN": "查看评价", "en_US": "View my comments" },
					 msg3: { "zh_CN": "关闭", "en_US": "Close" }
				 };
				 var bandHtml = "<div><i class=\"successdivi\" ></i><span>" + msg.msg1[uspJS.locale || 'en_US'] + "</span></div>"
					 + "<div><span class=\"subsuc1\" onclick=\"uspJS.openMyServiceListWindow();\" >" + msg.msg2[uspJS.locale || 'en_US'] + "</span><span class=\"subsuc2\" onclick=\"uspJS.cleareBadDivB(\'evaluateSuccessDiv\')\" >" + msg.msg3[uspJS.locale || 'en_US'] + "</span></div>";
				 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
				 bandobj.innerHTML = bandHtml;
				 document.getElementById("usp_yan").appendChild(bandobj);
			 }
			 //			uspJS.evaluationPosition();//动态评价框位置
			 setTimeout(function() {
				 uspJS.cleareBadDivB("evaluateSuccessDiv");
			 }, 3000);
		 } catch (e) { }
	 },
	 repeatSubmitDialog: function() {//重复提交弹出框
		 try {
			 document.getElementById("evaluateBadDivB").style.display = "none";
			 var badleftval = document.getElementById("evaluateBadDivB").style.left;
			 if (document.getElementById("evaluateSuccessDiv2") != null && document.getElementById("evaluateSuccessDiv2").innerHTML != null) {
				 document.getElementById("evaluateSuccessDiv2").style.left = badleftval == '50px' ? "50px" : "-356px";
				 var div = document.getElementById("evaluateSuccessDiv2");
				 if (div.style.display == "block") {
					 div.style.display = "none";
				 } else {
					 div.style.display = "block";
				 }
			 } else {
				 var bandobj = document.createElement("div");
				 bandobj.setAttribute("id", "evaluateSuccessDiv2");
				 bandobj.setAttribute("class", "evaluateSuccessDiv b-rad2 boxs");
				 badleftval == '50px' ? bandobj.setAttribute("style", "left:" + badleftval) : bandobj.setAttribute("style", "left:-356px");
				 var msg = {
					 msg1: { "zh_CN": "您的评价我们已经收到，感谢您的支持", "en_US": "We have received your comments, thank you for your support." },
					 msg2: { "zh_CN": "继续评价", "en_US": "continue" },
					 msg3: { "zh_CN": "关闭", "en_US": "Close" }
				 };
				 var bandHtml = "<div><i class=\"successdivi\" ></i><span>" + msg.msg1[uspJS.locale || 'en_US'] + "</span></div>"
					 + "<div><span class=\"subsuc1\" onclick=\"uspJS.againEvaluation();\" >" + msg.msg2[uspJS.locale || 'en_US'] + "</span><span class=\"subsuc2\" onclick=\"uspJS.cleareBadDivB(\'evaluateSuccessDiv2\')\" >" + msg.msg3[uspJS.locale || 'en_US'] + "</span></div>";
				 //判断是否已经存在这个ID元素，如果存在，就直接进行隐藏，显示
				 bandobj.innerHTML = bandHtml;
				 document.getElementById("usp_yan").appendChild(bandobj);
			 }
			 setTimeout(function() {
				 uspJS.cleareBadDivB("evaluateSuccessDiv2");
			 }, 5000);
		 } catch (e) { }
	 },
	 //再次评价
	 againEvaluation: function() {
		 try {
			 uspJS.cleareBadDivB("evaluateSuccessDiv2");
			 uspJS.ihelp_num.repeatEvaTime = 0;
			 uspJS.openEvaluationB();
		 } catch (e) { }
	 },
	 cleareBadDivB: function(id) {//关闭评价成功提示框
		 try {
			 var obj = document.getElementById(id);
			 if (!uspJS.isNull(obj)) {
				 obj.style.display = "none";
			 }
		 } catch (e) { }
	 },
	 hasClass: function(obj, cls) {
		 if (obj.className) {
			 return obj.className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
		 }
		 return false;
	 },
	 textareaOnChangeVal: function(val) {
		 try {
			 val = val.replace(/(^\s*)|(\s*$)/g, "");
			 var num = 500 - val.length;
			 num = num >= 0 ? num : 0;
			 document.getElementById("textareaTip").getElementsByTagName("span")[0].innerHTML = num;
			 if (num <= 0) {
				 document.getElementById("evaluatepageCommentContent").value = val.substring(0, 500);
			 }
			 var subPage = document.getElementById("submitPageBadFeedback");
			 subPage.removeAttribute("style");
			 subPage.onclick = function() {
				 uspJS.savePageBadFeedback();
			 }
		 } catch (e) { }
	 },
	 //关闭评价框
	 clearEvaluateBadDiv: function() {
		 var obj = document.getElementById("usp_yan").getElementsByTagName("div");
		 if (obj && obj.length > 0) {
			 for (var y = 0; y < obj.length; y++) {
				 if ("evaluateBadDivB" == obj[y].getAttribute("id") || "ihelp_usp_anliopenHTML" == obj[y].getAttribute("id")) {
					 obj[y].style.display = "none";
				 }
			 }
		 }
	 },
	 //保存评价
	 savePageBadFeedback: function() {
		 //去除按钮点击时间
		 var submitPage = document.getElementById("submitPageBadFeedback");
		 submitPage.removeAttribute("onclick");
		 submitPage.style.border = "#8a8b8b";
		 submitPage.style.backgroundColor = "#8a8b8b";
 
		 var errorDoc = document.getElementById("PageBadFeedbackError");
		 //判断是否存在登录用户  hwsso_login w3用户  hwsso_uniportal uniportal用户 userAccount 不是用sso的系统用户
		 if (uspJS.getCookie("hwsso_login") == "\"\"" && uspJS.getCookie("hwsso_uniportal") == "\"\"" && (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined)) {
			 errorDoc.style.display = "block";
			 return;
		 } else {
			 errorDoc.style.display = "none";
		 }
 
		 uspJS.getUrl();
		 var commonData = {};
		 var url = document.getElementById("uspJavascript").getAttribute("src");
		 var appid = uspJS.getUrlParams(url, "appid");
		 //记录用户意见备注
		 commonData.remarks = encodeURI(document.getElementById("evaluatepageCommentContent").value.replace(/(^\s*)|(\s*$)/g, ""));
		 //记录用户评价
		 var opiniontypeList = document.getElementById("OpiniontypeIdV3").getElementsByTagName("span");
		 for (var i = 0, l = opiniontypeList.length; i < l; i++) {
			 if (uspJS.hasClass(opiniontypeList[i], "typeIdV3")) {
				 commonData.grade = opiniontypeList[i].getAttribute("grade");
			 }
		 }
		 //		commonData.grade = document.getElementById("OpiniontypeIdV3").getElementsByClassName("typeIdV3")[0].getAttribute("grade");
		 //获取问题标签 如果多选，用逗号隔开
		 var selects = document.getElementById("ProblemSuggestions").getElementsByTagName("span");//.getElementsByClassName("spanselected");
		 var describe = "";
		 for (var i = 0; i < selects.length; i++) {
			 if (uspJS.hasClass(selects[i], "spanselected")) {
				 describe += selects[i].innerText + ',';
			 }
		 }
		 //记录用户意见标签
		 commonData.describe = encodeURI(describe);
 
		 //记录用户w3账号
		 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
			 uspJS.getw3Account();
		 } else {
			 commonData.cratePersonId = uspJS.userAccount;
		 }
 
		 commonData.appId = uspJS.getUrlParams(url, "appid") || "";
		 commonData.paramUrl = encodeURIComponent(uspJS.getWindowLocation()) || "";
		 if (commonData.appId == "") {
			 commonData.appId = uspJS.appId;
		 }
		 var savePageBadFeedbackNum = setTimeout(function() {
			 //记录电话号码
			 commonData.phone = document.getElementById("telinput").value;
 
			 if (null != uspJS.w3Account && uspJS.w3Account != "" && uspJS.w3Account != undefined) {
				 commonData.cratePersonId = uspJS.w3Account;
			 }
			 uspJS.getw3Account();
			 if (null != uspJS.w3Account && uspJS.w3Account != "" && uspJS.w3Account != undefined) {
				 commonData.cratePersonId = uspJS.w3Account;
			 }
			 uspJS.jsonp({
				 url: uspConfig.uspPortalServiceHost + uspJS.evaluateFeedbackService + "/saveEvaluateComment",
				 data: commonData,
				 success: badFeedback
			 }, uspJS.scriptClassName);
			 clearTimeout(savePageBadFeedbackNum);
		 }, 3000);
		 newBadFeedback();
	 },
	 jsonp: function(obj, scriptClassName) {
		 try {
			 uspJS.getinvokedOrNotBol(obj);
			 if (uspJS.invokedOrNot) {//判断是否调用后台方法
				 return;
			 }
			 //每次跨域之前先判断有没有相同ID的跨域，如果有就删除掉，然后新建
			 var removeScript = document.getElementById(scriptClassName);
			 if (removeScript) {
				 removeScript.parentNode.removeChild(removeScript);
			 }
			 //定义一个处理JSONP返回数据的回调函数
			 //			window["callback"] = function(object){
			 //				obj.success(JSON.parse(object));
			 //			}
			 var script = document.createElement("script");
			 script.id = scriptClassName;
			 //组合请求URL
			 var srcStr = obj.url + "?fn=1";
			 for (key in obj.data) {
				 srcStr += "&" + key + "=" + encodeURIComponent(obj.data[key]);
			 }
			 script.src = srcStr;
			 if (script.attachEvent) {
				 script.attachEvent('onerror', function(e) {
					 //JSONP报错，记录报错时间，
					 localStorage.setItem("ihelp_invokedOrNot" + uspJS.appId + window.location.host, new Date().Format("yyyy-MM-dd"));
				 });
			 } else {
				 script.addEventListener('error', function(error) {
					 //JSONP报错，记录报错时间，
					 localStorage.setItem("ihelp_invokedOrNot" + uspJS.appId + window.location.host, new Date().Format("yyyy-MM-dd"));
				 }, false);
			 }
			 //将创建的新节点添加到BOM树上
			 document.getElementsByTagName("head")[0].appendChild(script);
		 } catch (e) {
			 console.log('3=' + JSON.stringify(e));
		 }
	 },
	 //组件向后台发起请求前，先判断cookie中的登录信息
	 getinvokedOrNotBol: function(obj) {
		 try {
			 var methodName = obj.url.split('/');
			 //			console.log('getinvokedOrNotBol=========methodName====='+methodName[methodName.length-1])
			 if (!uspJS.isNull(obj.data) && 'getIhelpComponentVersion' == methodName[methodName.length - 1]) {
				 //获取缓存中的信息
				 var ihelp_invokedOrNot = localStorage.getItem("ihelp_invokedOrNot" + uspJS.appId + window.location.host);
				 if (!uspJS.isNull(ihelp_invokedOrNot)) {
					 //如果时间相等，说明这一天已经发生过请求错误了，那么这一天都不会再像组件后台发起请求了
					 var d = uspJS.daysBetween(ihelp_invokedOrNot, new Date().Format("yyyy-MM-dd"));
					 if (uspJS.isNull(d) && d <= 3) {
						 uspJS.invokedOrNot = true;
					 } else {
						 uspJS.getinvokedOrNotfun();
						 uspJS.removeItem("ihelp_invokedOrNot" + uspJS.appId + window.location.host);
					 }
				 } else {
					 uspJS.getinvokedOrNotfun();
				 }
			 }
		 } catch (e) {
			 console.log("uspJS.invokedOrNot =" + uspJS.invokedOrNot + ",login_logFlag=" + uspJS_logFlag);
		 }
	 },
	 getinvokedOrNotfun: function() {
		 try {
			 // var uspJS_logFlag = uspJS.getCookie("login_logFlag");
			 // 获取通过cookie及localStorage
			 var uspJS_logFlag = !uspJS.isNull(uspJS.getCookie("login_logFlag")) ? uspJS.getCookie("login_logFlag") : localStorage.getItem("login_logFlag");
			 !uspJS.isNull(uspJS.getCookie("login_logFlag")) && localStorage.setItem("login_logFlag", uspJS.getCookie("login_logFlag"));
			 if (uspJS.isNull(uspJS_logFlag)) {
				 uspJS.invokedOrNot = true;
			 } else {
				 uspJS.invokedOrNot = uspJS_logFlag == "in" ? false : true;
			 }
		 } catch (e) { }
	 },
	 daysBetween: function(d1, d2) {
		 try {
			 var time1 = Date.parse(new Date(d1));
			 var time2 = Date.parse(new Date(d2));
			 var days = Math.abs(parseInt((time2 - time1) / 1000 / 3600 / 24));
			 return days;
		 } catch (e) { }
	 },
	 getw3Account: function() {
		 try {
			 uspJS.jsonp({
				 url: uspConfig.uspPortalServiceHost + "servlet/findW3AccountServlet"
			 }, uspJS.scriptClassName);
		 } catch (e) { }
	 },
	 getw3Tel: function() {
		 try {
			 var commonData = {};
			 //记录用户w3账号
			 if (uspJS.userAccount == "" || uspJS.userAccount == null || uspJS.userAccount == undefined) {
				 uspJS.getw3Account();
			 } else {
				 commonData.cratePersonId = uspJS.userAccount;
			 }
			 var getw3TelNum = setTimeout(function() {
				 if (null != uspJS.w3Account && uspJS.w3Account != "" && uspJS.w3Account != undefined) {
					 commonData.cratePersonId = uspJS.w3Account;
				 }
				 commonData.callbackName = "uspJS.getw3TelCallbackName";
				 uspJS.jsonp({
					 data: commonData,
					 url: uspConfig.uspPortalServiceHost + "servlet/findTelephoneNumberServlet"
				 }, uspJS.scriptClassName);
				 clearTimeout(getw3TelNum);
			 }, 3000);
		 } catch (e) {
 
		 }
	 },
	 //获取电话号码返回
	 getw3TelCallbackName: function(data) {
		 //返回成功
		 try {
			 if (data.telephoneNumber) {
				 uspJS.w3TelVal = data.telephoneNumber;
			 }
		 } catch (e) {
		 }
	 },
	 //获取路径后面的参数
	 getUrlParams: function(url, name) {
		 var reg = new RegExp("(^|&|\\?)" + name + "=([^&]*)(&|$)");
		 var r = url.match(reg);
		 if (r != null)
			 return unescape(r[2]);
		 return null;
	 },
	 //创建或打开弹出框
	 openAlert: function(str) {
		 try {
			 var obj = document.getElementById("openAlertUspJSspan");//$("div.openAlertUspJS");
			 if (obj != null) {
				 obj.text(str);
				 obj.css("display", "block");
			 } else {
				 var sttt = document.createElement('style');
				 sttt.type = 'text/css';
				 //修改图片路径为服务器指定绝对路径，不取相对路径
				 var stex = '.openAlertUspJS{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:none;}'
					 + '#openAlertUspJSspan{max-width:350px;z-index: 2000;font-size: 14px;padding: 15px 15px;background: rgb(228, 228, 228);display:inline-block;width: auto;margin: 200px 40%;border-radius: 5px;-moz-border-radius: 5px;-webkitborder-radius: 5px;-o-border-radius: 5px;-ms-border-radius: 5px;}';
				 if (/ie/i.test(navigator.appVersion)) {
					 try {
						 sttt.styleSheet.cssText = stex;
					 } catch (e) {
						 sttt.innerHTML = stex;
					 }
				 } else {
					 sttt.innerHTML = stex;
				 }
				 document.getElementsByTagName('head')[0].appendChild(sttt);
				 //			var html="<div class=\"openAlertUspJS\" style=\"left:0px;right:0px;top:0px;bottom:0px;position:absolute;z-index:1988;background-color:rgba(0,0,0,0.4);\" ><div>"
				 var html = "<div class=\"openAlertUspJS\" ><span id=\"openAlertUspJSspan\" >" + str + "</span><div>";
				 $(document.body).append(html);
			 }
			 setTimeout(function() {
				 var obj = document.getElementById("openAlertUspJSspan");
				 uspJS.clearOpenAlert(obj);
			 }, 5000);
		 } catch (e) {
 
		 }
	 },
	 //关闭弹出框
	 clearOpenAlert: function(obj) {
		 //		obj.css("display","none");
		 obj.style.display = "none";
	 },
	 openPageRanking: function() {
 
		 //加载 解析 sourceURL路径
		 uspJS.initSourceURL();
 
		 uspJS.openLayout();
	 },
	 openLayout: function() {
 
		 var openUrl = uspJS.uspServiceHost + uspJS.uspFeedbackURL + "?isWinLoading=Y&appId=" + (uspJS.appId || '') + "&pageCode=" + (uspJS.pageCode || '')
			 + "&locale=" + (uspJS.locale || '') + "&attribute1=" + (uspJS.attribute1 || '') + "&attribute2=" + (uspJS.attribute2 || '') + "&attribute3="
			 + (uspJS.attribute3 || '') + "&attribute4=" + (uspJS.attribute4 || '') + "&attribute5=" + (uspJS.attribute5 || '') + "&attribute6="
			 + (uspJS.attribute6 || '') + "&attribute7=" + (uspJS.attribute7 || '') + "&attribute8=" + (uspJS.attribute8 || '') + "&attribute9="
			 + (uspJS.attribute9 || '') + "&attribute10=" + (uspJS.attribute10 || '') + "&sourceURL=" + encodeURIComponent((uspJS.sourceURL || "")) + "&sourceURLNoParameters=" + encodeURIComponent((uspJS.sourceURLNoParameters || ""));
 
		 if (uspJS.locale && (uspJS.locale == 'zh_CN' || uspJS.locale == 'en_US')) {
			 var pHtml = { 'feedback': uspJS.feedbackTitle }['feedback'][uspJS.locale];
		 } else {
			 var pHtml = { 'feedback': uspJS.feedbackTitle }['feedback']['en_US'];
		 }
		 var newWin = window.open(openUrl, pHtml, '');
 
		 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
		 newWin.focus();
		 //默认将newWin body 全部隐藏
		 //创建样式
		 setTimeout(function() {
			 try {
				 newWin.frames[0].document.body.style.display = 'none';
			 } catch (e) {
			 }
		 }, 100);
	 },
 
	 openLayout2: function(optType) {
 
		 var openUrl = uspJS.uspServiceHost + uspJS.uspBadFeedbackURL + "?isWinLoading=Y&optType=" + optType + "&appId=" + (uspJS.appId || '') + "&pageCode=" + (uspJS.pageCode || '')
			 + "&locale=" + (uspJS.locale || '') + "&attribute1=" + (uspJS.attribute1 || '') + "&attribute2=" + (uspJS.attribute2 || '') + "&attribute3="
			 + (uspJS.attribute3 || '') + "&attribute4=" + (uspJS.attribute4 || '') + "&attribute5=" + (uspJS.attribute5 || '') + "&attribute6="
			 + (uspJS.attribute6 || '') + "&attribute7=" + (uspJS.attribute7 || '') + "&attribute8=" + (uspJS.attribute8 || '') + "&attribute9="
			 + (uspJS.attribute9 || '') + "&attribute10=" + (uspJS.attribute10 || '') + "&userAccount=" + (uspJS.userAccount || '') +
			 "&sourceURL=" + encodeURIComponent((uspJS.sourceURL || "")) + "&sourceURLNoParameters=" + encodeURIComponent((uspJS.sourceURLNoParameters || ""));
 
		 if (uspJS.locale && (uspJS.locale == 'zh_CN' || uspJS.locale == 'en_US')) {
			 var pHtml = { 'badFeedback': uspJS.badFeedbackTitle }['badFeedback'][uspJS.locale];
		 } else {
			 var pHtml = { 'badFeedback': uspJS.badFeedbackTitle }['badFeedback']['en_US'];
		 }
		 var newWin = window.open(openUrl, pHtml, '');
 
		 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
		 newWin.focus();
		 //默认将newWin body 全部隐藏
		 //创建样式
		 setTimeout(function() {
			 try {
				 newWin.frames[0].document.body.style.display = 'none';
			 } catch (e) {
			 }
		 }, 100);
	 },
 
	 //获取最顶层的window对象，如果是被iframe 嵌套，window就无法获取到正确的地址栏
	 getSuperWindow: function() {
 
		 var usp_window = window;
		 while (usp_window != usp_window.parent) {
			 usp_window = usp_window.parent;
		 }
		 return usp_window;
	 }
	 ,
	 /**
		* 获取url的所有参数
		* url ,可以传入url，如果没有传入就默认获取 window.location.href 中的参数
		* w window对象，可以自定义传入，如果没有传入则获取当前window对象
		* 注意，如果传入了url ，w 参数则不考虑。
		*/
	 getURLAllParams: function(url, w) {
 
		 var args = new Object();
		 w = w || window;
		 var fullUrl = url || w.location.href;
		 var pos1 = fullUrl.search("#");
		 if (pos1 < 0)
			 return {};
		 var tempUrl = fullUrl.substr(pos1 + 1).split("?");
		 if (tempUrl.length > 1) {
			 var pairs = tempUrl[1].split("&");
			 for (var i = 0; i < pairs.length; i++) {
				 var pos = pairs[i].indexOf('=');
				 if (pos == -1)
					 continue;
				 var argname = pairs[i].substring(0, pos);
				 var value = pairs[i].substring(pos + 1);
				 value = decodeURIComponent(value);
				 args[argname] = value;
			 }
		 }
		 return args;
	 },
	 /**
		* 获取当前URL对象的所有参数
		*/
	 getURLObj: function() {
 
		 //获取最顶层的window对象
		 var w = uspJS.getSuperWindow();
		 var l = w.location;
		 return {
			 hash: l.hash,
			 host: l.host,
			 hostname: l.hostname,
			 href: l.href,
			 origin: l.origin,
			 pathname: l.pathname,
			 port: l.port,
			 protocol: l.protocol,
			 params: uspJS.getURLAllParams(l.href)
		 };
	 },
	 //获取window的Location
	 getWindowLocation: function() {
		 var url = (uspJS.getClientLocationURL && uspJS.getClientLocationURL()) || window.location.href;
		 return url;
	 },
	 //加载 ,解析 sourceurl路径
	 initSourceURL: function() {
 
		 uspJS.sourceURL = uspJS.getWindowLocation();
		 //创建a对象
		 var a = document.createElement('a');
		 a.href = uspJS.sourceURL;
		 var sourceURL_length = uspJS.sourceURL.lastIndexOf('?');
		 //获取除协议，参数后的url长度
		 sourceURL_length = sourceURL_length == -1 ? uspJS.sourceURL.length : (sourceURL_length - a.protocol.length);
		 //截取协议和参数
		 uspJS.sourceURLNoParameters = uspJS.sourceURL.substr(a.protocol.length, sourceURL_length);
		 //如果前面还有 斜杠或者反斜杠，则将这个字符截取
		 while (uspJS.sourceURLNoParameters.indexOf('/') == 0 || uspJS.sourceURLNoParameters.indexOf('\\') == 0) {
			 uspJS.sourceURLNoParameters = uspJS.sourceURLNoParameters.substr(1);
		 }
		 uspJS.pageCode = uspJS.pageCode || '';
		 uspJS.appId = uspJS.appId || '';
		 uspJS.locale = uspJS.locale || '';
		 uspJS.keyword = uspJS.keyword || '';
		 uspJS.attribute1 = uspJS.attribute1 || '';
		 uspJS.attribute2 = uspJS.attribute2 || '';
		 uspJS.attribute3 = uspJS.attribute3 || '';
		 uspJS.attribute4 = uspJS.attribute4 || '';
		 uspJS.attribute5 = uspJS.attribute5 || '';
		 uspJS.attribute6 = uspJS.attribute6 || '';
		 uspJS.attribute7 = uspJS.attribute7 || '';
		 uspJS.attribute8 = uspJS.attribute8 || '';
		 uspJS.attribute9 = uspJS.attribute9 || '';
		 uspJS.attribute10 = uspJS.attribute10 || '';
	 },
 
	 //获取href 的方法,该方法可重写
	 getClientLocationURL: function() {
		 return uspJS.sourceURL;
	 },
 
	 /**
		* 打开搜索并自动发送关键字(直接调用)
		*/
	 openSearchWindow: function(akeyword, appid, url) {
 
		 uspJS.keyword = akeyword;
		 uspJS.openOnlineHelpWindow(appid, url);
	 },
 
	 /**
		* 打开机器人界面，
		* url与appid可以同时提供或者二者选一个，
		* 如果不提供appId,则默认通过url找appid,如果找不到则系统不能正常使用。
		*/
	 openOnlineHelpWindow: function(appid, url) {
 
		 //临时存储 getClientLocationURL 对象
		 var tempFn = uspJS.getClientLocationURL;
		 uspJS.getClientLocationURL = function() {
			 return url;
		 }
		 uspJS.appId = appid || uspJS.appId;
		 uspJS.openOnlineSupportWindow();
		 //重新赋值
		 uspJS.getClientLocationURL = tempFn;
	 },
 
	 /**
		* 打开页面评价窗口，appid为可选，url/pagecode二选一，
		* 如果同是提供则以pagecode为准，
		* 如果提供的appid与url/pagecode冲突忽略appId. 
		* 如果之前没有配置过appIdgn url/pagecode的关系则会记录此关系。
		* 此关系也可以在后续进入用户支持平台后台修改。
		*/
	 openPageRankDialog: function(appid, url, pagecode) {
 
		 //临时存储 getClientLocationURL 对象
		 var tempFn = uspJS.getClientLocationURL;
		 uspJS.getClientLocationURL = function() {
			 return url;
		 }
		 uspJS.appId = appid || uspJS.appId;
		 uspJS.pageCode = pagecode || uspJS.pageCode;
		 uspJS.openPageRanking();
		 //重新赋值
		 uspJS.getClientLocationURL = tempFn;
 
	 },
	 //全部替换方法
	 replace_All: function(str, sptr, sptr1) {
		 while (str.indexOf(sptr) >= 0) {
			 str = str.replace(sptr, sptr1);
		 }
		 return str;
	 },
	 /**
		* 打开我的所有服务单,该参数可以不传入，如果不传入则表示查看我所有的服务单。
		*/
	 openMyServiceListWindow: function(appid) {
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 var addressurl = uspConfig.grayOpinionAddressURL;//内网//uspConfig.grayOpinionAddressURLApp//外网
			 /*var w3OrAppArr = uspJS.version.w3OrAppArr;
			 for(var i =0,l=w3OrAppArr.length;i<l;i++){
				 if(w3OrAppArr[i]==uspJS.appId){
					 addressurl = uspConfig.grayOpinionAddressURLApp;
				 }
			 }*/
			 var openUrl = uspConfig.grayOpinionAddressURLApp + "?locale=" + uspJS.locale + "&source=ihelp1";
			 var newWin = window.open(openUrl);
			 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
			 newWin.focus();
			 uspJS.addBuriedPoint('service_log');
		 } catch (e) { }
	 },
	 /*
		* 打开社区窗口
		* 
		* */
	 openMyCommunity: function() {
		 //modify by 20151020  将社区URL反编码成原始URL
		 window.open(decodeURIComponent(uspJS.myCommunityURL));
	 },
	 dynamicLoading: {
		 css: function(path) {
			 if (!path || path.length === 0) {
				 throw new Error('argument "path" is required !');
			 }
			 var head = document.getElementsByTagName('head')[0];
			 var link = document.createElement('link');
			 link.href = path;
			 link.rel = 'stylesheet';
			 link.type = 'text/css';
			 head.appendChild(link);
		 },
		 js: function(path) {
			 if (!path || path.length === 0) {
				 throw new Error('argument "path" is required !');
			 }
			 var head = document.getElementsByTagName('head')[0];
			 var script = document.createElement('script');
			 script.src = path;
			 script.type = 'text/javascript';
			 head.appendChild(script);
		 }
	 },
	 judgmentLocale: function(obj, flag, eventtype) {
 
	 },
	 showArrowIconTitle: function(obj) {
		 var arrowIcon = document.getElementById("arrowIconSpan");
 
		 var arrowIconTitle = "";
 
		 //如果当前入口组件是显示的，这里设置为隐藏标题，反正设置为显示标题
		 if (arrowIcon.className == "usp-it-icon-05") {
			 arrowIconTitle = uspJS.arrowIconHideTitle;
		 } else {
			 arrowIconTitle = uspJS.arrowIconShowTitle;
		 }
 
		 //判断locale不为空 且等于 zh_CN或en_US
		 if (uspJS.locale && (uspJS.locale == 'zh_CN' || uspJS.locale == 'en_US')) {
			 obj.title = arrowIconTitle[uspJS.locale];
		 } else {//为空,默认为英文
			 obj.title = arrowIconTitle['en_US'];
		 }
	 },
	 /**
		* 获取指定cookie
		* @param	key	COOKIE的键
		* @return	COOKIE的值
		*/
	 getCookie: function(key) {
		 try {
			 var result = "";
			 var cookieArr = document.cookie.split(";");
			 for (var i = 0; i < cookieArr.length; i++) {
				 var arr = cookieArr[i].split("=");
				 if (arr[0] != null && arr[0].replace(/ /g, "") == key) {
					 result = arr[1].replace(/\"/g, "");
					 break;
				 }
			 } 
			 return result;
		 } catch (e) { }
	 },
 
	 /**
		* 记录 cookie
		* @param	name	COOKIE的键
		*/
	 saveCookie: function(key, value, expires) {
		 try {
			 document.cookie = key + "=" + value + ";path=/ihelp;domain=.huawei.com;expires=" + expires.toGMTString();
		 } catch (e) { }
	 },
 
	 /**
		* 获取当前日期最后一秒的时间
		*/
	 getCurDateLastSeconds: function() {
		 try {
			 var date = new Date();
			 date.setHours(23);
			 date.setMinutes(59)
			 date.setSeconds(59);
			 return date;
		 } catch (e) { }
	 },
 
	 /**
		* 缓存入口移动的位置信息
		*/
	 cachePortalMoveAction: function(key, value) {
		 try {
			 //缓存入口移动的位置信息到COOKIE
			 uspJS.saveCookie(key, value, uspJS.getCurDateLastSeconds());
			 // 设置localStorage
			 localStorage.setItem(key, value);
		 } catch (e) { }
	 },
 
	 /**
		* 删除指定Dom元素
		* @param {} targetId
		*/
	 removeTargetElement: function(targetId, windowObj) {
		 try {
			 var documentObj = window.document;
			 if (windowObj) {
				 documentObj = windowObj.document;
			 }
 
			 var ele = documentObj.getElementById(targetId);
			 var parentEle = ele.parentNode;
			 if (parentEle) {
				 parentEle.removeChild(ele);
			 }
		 } catch (e) { }
	 },
 
	 /**
		* 添加指定Dom元素到尾端
		* @param {} targetId
		* @param {} newElement
		*/
	 createElementFollowTarget: function(targetElement, newElementHtml, newElementId) {
		 try {
			 //如果元素已经存在，这里直接返回
			 if (document.getElementById(newElementId)) {
				 return;
			 }
 
			 var parentEle = targetElement.parentNode;
 
			 if (parentEle) {
				 var newEle = document.createElement("span");
 
				 newEle.id = "span_" + newElementId;
				 newEle.name = "userFaqIconSpan";
				 newEle.innerHTML = newElementHtml;
 
				 parentEle.appendChild(newEle);
 
				 //	    	if (parent.lastChild == targetElement) {
				 //				// 如果最后的节点是目标元素，则直接添加。因为默认是最后
				 //				parentEle.appendChild(newEle);
				 //			} else {
				 //				// 如果不是，则插入在目标元素的下一个兄弟节点的前面。也就是目标元素的后面
				 //				parentEle.insertBefore(newEle, (targetElement.nextSibling).nextSibling);
				 //			}
			 }
		 } catch (e) { }
	 },
 
	 containsInArray: function(arr, value) {
		 try {
			 var result = false;
 
			 if (arr == null || value == null) {
				 return result;
			 }
 
			 for (var a = 0; a < arr.length; a++) {
				 if (arr[a] == value) {
					 result = true;
					 break;
				 }
			 }
 
			 return result;
		 } catch (e) { }
	 },
	 //机器人组件demo
	 ihelpUseDemo: function() {
		 try {
			 var openUrl = uspJS.uspServiceHost + uspJS.uspIhelpDemoURL;
			 openUrl = openUrl + "isWinLoading=Y&locale=" + uspJS.locale + "&vs=1&appId=" + uspJS.appId;
			 var newWin = window.open(openUrl);
			 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
			 newWin.focus();
		 } catch (e) { }
	 },
	 openRecommendationURL: function() {
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 var openUrl = uspJS.uspServiceHost + "?locale=" + uspJS.locale + uspJS.recommendationURL;
			 openUrl = openUrl + "?appId=" + uspJS.appId + "&isWinLoading=Y&switchTo=" + uspJS.locale + "&sourceURL=" + encodeURIComponent((uspJS.sourceURL || window.location.href));
			 var newWin = window.open(openUrl);
			 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
			 newWin.focus();
			 uspJS.addBuriedPoint('advice');
		 } catch (e) { }
	 },
	 openOpinionHTML: function() {
		 try {
			 if (uspJS.dragclickConflict()) {
				 return;
			 }
			 var openUrl = uspJS.uspServiceHost + "?locale=" + uspJS.locale + uspJS.openOpinionHTMLURL;
			 openUrl = openUrl + "?appId=" + uspJS.appId + "&isWinLoading=Y&switchTo=" + uspJS.locale + "&sourceURL=" + encodeURIComponent((uspJS.sourceURL || window.location.href));
			 var newWin = window.open(openUrl);
			 //窗口置顶(如果窗口是已经打开的情况下，不会默认置顶，所以这里手动调用一次)
			 newWin.focus();
		 } catch (e) { }
	 },
	 SwitchLanguage: function(lan) {
		 try {
			 var lan = lan;
			 if (uspJS.isNull(lan)) {
				 return;
			 }
			 if (lan == "en_US" || lan == "zh_CN") {
				 uspJS.locale = lan;
				 var uspjsobj = document.getElementById("usp_entrance_ul").getElementsByTagName("p");
				 var uspJs_Billoflading_val = "";
				 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {//是否研发标识
					 uspJs_Billoflading_val = uspJS.ihelpItemPFBVAL[lan];
				 } else {
					 uspJs_Billoflading_val = uspJS.ihelpItemTidan[lan];
				 }
				 for (var i = 0, l = uspjsobj.length; i < l; i++) {
					 var spanclass = uspjsobj[i].getAttribute("class");
					 switch (spanclass) {
						 case "CustomerSpan":
							 uspjsobj[i].innerText = uspJS.CustomerSpan[lan];
							 break;
						 case "OpinionSpan":
							 uspjsobj[i].innerText = uspJS.Appraises[lan];
							 break;
						 case "OpinionSpanAdvice":
							 uspjsobj[i].innerText = uspJS.OpinionSpanAdvice[lan];
							 break;
						 case "ProgressSpan":
							 uspjsobj[i].innerText = uspJS.ProgressSpan[lan];
							 break;
						 case "arrowIconHideTitle":
							 uspjsobj[i].innerText = uspJS.arrowIconHideTitle[lan];
							 break;
						 case "uspJs_Billoflading":
							 uspjsobj[i].innerText = uspJs_Billoflading_val;
							 break;
						 case "uspJs_Community":
							 uspjsobj[i].innerText = uspJS.ihelpItemCommunity[lan];
							 break;
					 }
					 if (uspJS.customBottomSpan.length > 0) {//判断是否有自定义的组件按钮
						 for (var c = 0, n = uspJS.customBottomSpan.length; c < n; c++) {
							 var spanClassName = uspJS.customBottomSpan[c].spanClassName;
							 if (spanclass == spanClassName) {
								 uspjsobj[i].innerText = uspJS.customBottomSpan[c][lan];
							 }
						 }
					 }
				 }
				 try {
					 if (uspJS.addihelpitemArr.length > 0) {//判断是否有自定义的组件按钮
						 var uspjsliobj = document.getElementById("usp_entrance_ul").getElementsByTagName("li");
						 for (var i = 0, l = uspjsliobj.length; i < l; i++) {
							 var liid = uspjsliobj[i].getAttribute("id");
							 for (var c = 0, n = uspJS.addihelpitemArr.length; c < n; c++) {
								 var itemid = uspJS.addihelpitemArr[c].id;
								 if (liid == itemid) {
									 uspjsliobj[i].innerHtml = uspJS.locale == "en_US" ? uspJS.addihelpitemArr[c].en_US : uspJS.addihelpitemArr[c].zh_CN;
								 }
							 }
						 }
					 }
				 } catch (e) { }
				 try {
					 document.getElementById("ihelp_evaluateTitle").innerText = uspJS.Bdigmsg.msg10[uspJS.locale || 'en_US'];
					 var ulli = "";
					 if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {//是否研发标识
						 try {
							 document.getElementById("ihelp_evaluateTitle").innerText = uspJS.Bdigmsg.msg15[uspJS.locale || 'en_US'];
							 document.getElementById("ihelp_uspclearfix_span1_p").innerText = uspJS.Bdigmsg.msg12[lan];
							 document.getElementById("ihelp_uspclearfix_span2_p").innerText = uspJS.Bdigmsg.msg13[lan];
							 document.getElementById("ihelp_uspclearfix_span3_p").innerText = uspJS.Bdigmsg.msg14[lan];
 
							 var elm1 = document.getElementById("ihelp_uspclearfix_span1").getElementsByTagName("li");
							 var elm2 = document.getElementById("ihelp_uspclearfix_span2").getElementsByTagName("li");
							 var elm3 = document.getElementById("ihelp_uspclearfix_span3").getElementsByTagName("li");
							 var textval = uspJS.ihelpLiforVal(elm1);
							 document.getElementById("ihelp_uspclearfix_span1_checkVal").innerText = textval;
							 var textval = uspJS.ihelpLiforVal(elm2);
							 document.getElementById("ihelp_uspclearfix_span2_checkVal").innerText = textval;
							 var textval = uspJS.ihelpLiforVal(elm3);
							 document.getElementById("ihelp_uspclearfix_span3_checkVal").innerText = textval;
 
							 document.getElementById("uspihelpCheckBoxSpan").innerText = uspJS.Bdigmsg.msg16[lan];
							 document.getElementById("uspihelpCheckBoxSpanRemarks").innerText = uspJS.Bdigmsg.msg17[lan];
							 var yfSvgScore1 = uspJS.yfOpsInfo.yfSvgScore1 === '0' || uspJS.yfOpsInfo.yfSvgScore1 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore1;
							 var yfSvgScore2 = uspJS.yfOpsInfo.yfSvgScore2 === '0' || uspJS.yfOpsInfo.yfSvgScore2 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore2;
							 var yfSvgScore3 = uspJS.yfOpsInfo.yfSvgScore3 === '0' || uspJS.yfOpsInfo.yfSvgScore3 === '0.00' ? '--' : uspJS.yfOpsInfo.yfSvgScore3;
							 yfSvgScore1 = yfSvgScore1 === '--' ? yfSvgScore1 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore1+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
							 yfSvgScore2 = yfSvgScore2 === '--' ? yfSvgScore2 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore2+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
							 yfSvgScore3 = yfSvgScore3 === '--' ? yfSvgScore3 : uspJS.locale === 'en_US'? yfSvgScore1 : yfSvgScore3+uspJS.Bdigmsg.msg21[uspJS.locale || 'en_US'];
							 document.getElementById("ihelp_uspclearfix_span1_score").innerText = yfSvgScore1;
							 document.getElementById("ihelp_uspclearfix_span2_score").innerText = yfSvgScore2;
							 document.getElementById("ihelp_uspclearfix_span3_score").innerText = yfSvgScore3;
							 var opsTotal = uspJS.isNull(uspJS.version.plugIn.opsTotal)?0:uspJS.version.plugIn.opsTotal;
							 var checkaText = uspJS.Bdigmsg.msg18[uspJS.locale || 'en_US']+'('+opsTotal+')';
							 document.getElementById("ihelp_usp_yf_checkBoxa").innerText = checkaText;
							 document.getElementById('ihelp_usp_yf_score1TipId').innerText = uspJS.Bdigmsg.msg22[uspJS.locale || 'en_US']
							 document.getElementById("textareaContentB").setAttribute('placeholder', uspJS.Bdigmsg.msg19[uspJS.locale || 'en_US']);
						 } catch (e) { }
					 } else {
						 try {
							 ulli = document.getElementById("evaluateUl").getElementsByTagName("li");
							 document.getElementById("ihelp_uspclearfix_span").innerText = uspJS.Bdigmsg.msg11[uspJS.locale || 'en_US'] + " :";
							 var textval = uspJS.ihelpLiforVal(ulli);
							 document.getElementById("evaluateUltextval").innerText = textval;
							 document.getElementById("textareaContentB").setAttribute('placeholder', uspJS.Bdigmsg.msg1[uspJS.locale || 'en_US']);
						 } catch (e) { }
					 }
					 document.getElementById("evaluateBtn").innerText = uspJS.Bdigmsg.msg2[uspJS.locale || 'en_US'];
					 document.getElementById("evaluateBtnCancel").innerText = uspJS.Bdigmsg.msg9[uspJS.locale || 'en_US'];
				 } catch (e) { }
			 }
		 } catch (e) { }
	 },
	 ihelpLiforVal: function(ulli) {
		 try {
			 if (ulli.length < 1) {
				 return "";
			 }
			 var elmvals = "0", textval = "";
			 for (var i = 0, l = ulli.length; i < l; i++) {
				 var spanclass = ulli[i].getAttribute("vals");
				 switch (spanclass) {
					 case "10":
						 ulli[i].setAttribute("textval", uspJS.Bdigmsg.msg4[uspJS.locale || 'en_US']);
						 break;
					 case "20":
						 ulli[i].setAttribute("textval", uspJS.Bdigmsg.msg5[uspJS.locale || 'en_US']);
						 break;
					 case "30":
						 ulli[i].setAttribute("textval", uspJS.Bdigmsg.msg6[uspJS.locale || 'en_US']);
						 break;
					 case "40":
						 ulli[i].setAttribute("textval", uspJS.Bdigmsg.msg7[uspJS.locale || 'en_US']);
						 break;
					 case "50":
						 ulli[i].setAttribute("textval", uspJS.Bdigmsg.msg8[uspJS.locale || 'en_US']);
						 break;
				 }
				 var elmclass = ulli[i].getAttribute("class");
				 if ("evaluateTip_false" == elmclass) {
					 elmvals = uspJS.isNull(ulli[i].getAttribute("vals")) ? ulli[i].getAttribute("vals") : elmvals < ulli[i].getAttribute("vals") ? ulli[i].getAttribute("vals") : elmvals;
					 textval = ulli[i].getAttribute("textval");
				 }
			 }
			 return textval;
		 } catch (e) { }
	 },
	 isNull: function(val) {//公用非空校验方法
		 if (val === "" || val === undefined || val === null) {
			 return true;
		 } else {
			 return false;
		 }
	 },
	 S4: function() {
		 return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
	 },
	 NewGuid: function() {
		 return (uspJS.S4() + uspJS.S4() + uspJS.S4() + uspJS.S4() + uspJS.S4());
	 },
	 //	var controlobj =[{'zh_CN':'测试cs','en_US':'cs',libgurl1:'',libgurl2:'',WhetherHidden:''},{'zh_CN':'测试','en_US':'cs2',libgurl1:'',libgurl2:'',WhetherHidden:''}];
	 /*
		* zh_CN自定义组件英文名
		* en_US自定义组件中文名
		* libgurl1自定义组件背景图片路径1（默认展示）
		* libgurl2自定义组件背景图片路径2（鼠标以上展示）
		* WhetherHidden时候跟隐藏一起隐藏（默认会一起隐藏）
		* var controlobj =[{id:"",'zh_CN':'测试cs','en_US':'cs',libgurl1:'usp/common/imgs/evaluateBad_2.png',libgurl2:'usp/common/imgs/evaluateBad_3.png',whetherHidden:true},{'zh_CN':'测试','en_US':'cs2',libgurl1:'',libgurl2:'',whetherHidden:false}];
		 uspJS.addCustomControl(controlobj);//调用添加方法
		 uspJS.SwitchLanguage('en_US');//调用语言切换方法
		* */
	 addCustomControl: function(controlobj) {//添加自定义控件
		 try {
			 if (controlobj.length < 1) {
				 return;
			 }
			 for (var i = 0, l = controlobj.length; i < l; i++) {
				 var spanClassName = 'spanClass' + new Date().getTime();
				 var lihtml = '';
				 var addcustombol = uspJS.isNull(controlobj[i].spanClassName) && (uspJS.isNull(controlobj[i].libgurl1) || uspJS.isNull(controlobj[i].libgurl2));
				 if (!uspJS.isNull(controlobj[i].spanClassName)) {
					 lihtml = '<span class="' + controlobj[i].spanClassName + '" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" style="color:#999;">' +
						 '<i class="tip" ></i><p class="' + controlobj[i].spanClassName + '" style="color:#999;">' + controlobj[i][uspJS.locale || 'en_US'] + '</p></span>';
				 } else if (addcustombol) {
					 controlobj[i].spanClassName = spanClassName;//给对象添加一个随机的class名称
					 lihtml = '<span class="' + controlobj[i].spanClassName + '" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" style="color:#999;">' +
						 '<p class="' + controlobj[i].spanClassName + '" style="color:#999;">' + controlobj[i][uspJS.locale || 'en_US'] + '</p></span>';
				 } else {
					 lihtml = '<span class="' + controlobj[i].spanClassName + '" onmousemove="uspJS.uspentranceullispanmousemove(this);" onmouseout="uspJS.uspentranceullispanmouseout(this);" style="color:#999;">' +
						 '<i style="background-image: url(' + controlobj[i].libgurl1 + ');background-size: 100% 100%;background-position: 0px 0px;" ></i><p class="' + controlobj[i].spanClassName + '" style="color:#999;">' + controlobj[i][uspJS.locale || 'en_US'] + '</p></span>';
				 }
				 //				controlobj[i].spanClassName = spanClassName;//给对象添加一个随机的class名称
 
 
				 var customarr = uspJS.customBottomSpan;
				 var cuswhetherHidden = false;
				 if (controlobj[i].whetherHidden) {
					 for (var ri = 0, rl = customarr.length; ri < rl; ri++) {
						 if (customarr[ri].whetherHidden) {
							 cuswhetherHidden = true;
							 break;
						 }
					 }
				 }
				 if (cuswhetherHidden) {
					 continue;
				 }
				 uspJS.customBottomSpan.push(controlobj[i]);
				 var uspyanobj = document.getElementById("usp_yan");
				 if (!uspyanobj) {//判断组件是否存在，如果存在就继续往下走，不存在就不添加
					 return;
				 }
				 var uspyanulobj = document.getElementById("usp_entrance_ul");
				 if (!uspyanulobj) {//判断组件是否存在，如果存在就继续往下走，不存在就不添加
					 return;
				 }
 
				 var liem = document.createElement('li');
				 if (!uspJS.isNull(controlobj[i].id)) {//判断是否为空
					 liem.id = controlobj[i].id;
					 var liemobj = document.getElementById(controlobj[i].id);
					 if (liemobj) {//判断组件是否存在，如果存在就继续往下走，不存在就不添加
						 //						liemobj.parentElement.removeChild(liemobj);
						 return;
					 }
				 }
				 liem.setAttribute("class", "entrance_icon");
				 liem.setAttribute("tipss", "delli");
				 liem.setAttribute("name", "entrance_icon");
				 liem.innerHTML = lihtml;
				 if (controlobj[i].whetherHidden) {
					 liem.setAttribute("whetherHidden", controlobj[i].whetherHidden);
					 liem.addEventListener('click', function() {
						 if (document.getElementById('entrance_icon_block').style.display == 'block') {
							 uspJS.getIhelpBlock();
						 } else {
 
						 }
					 });
				 } else {
					 liem.style.display = 'none';
				 }
				 var iconHidespan = document.getElementById("usp_arrowIconHideTitle");
				 uspyanulobj.insertBefore(liem, iconHidespan);
 
				 var proxyval = localStorage.getItem("ihelp_portal_index_showhide");//自定义添加的按钮是否展示缓存
				 // 获取通过cookie及localStorage
				 var getusphiddencookie = !uspJS.isNull(uspJS.getCookie('usphidden')) ? uspJS.getCookie('usphidden') : localStorage.getItem('usphidden');
				 !uspJS.isNull(uspJS.getCookie('usphidden')) && localStorage.setItem('usphidden', uspJS.getCookie('usphidden'));
				 if (!uspJS.isNull(proxyval)) {//添加缓存
					 proxyval = JSON.parse(proxyval);
					 proxyval = proxyval["usphidden" + uspJS.appId];
					 "true" == proxyval ? document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "show") : document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "hide");
					 // } else if (uspJS.getCookie('usphidden') == "true") {
				 } else if (getusphiddencookie == "true") {
					 document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "show");
					 // } else if (uspJS.getCookie('usphidden') == "false") {
				 } else if (getusphiddencookie == "false") {
					 document.getElementById("usp_arrowIconHideTitle").setAttribute("litype", "hide");
				 }
				 //				uspJS.getIhelpHiddenshow();
			 }
		 } catch (e) { }
	 },
	 hidControl: function(obj) {//添加需要隐藏的控件
		 try {
			 var objstr = document.getElementById(obj);
			 var objstr_bol = false;
			 var divobj = document.createElement("div");
			 try {
				 divobj.appendChild(objstr.cloneNode(true));
				 objstr_bol = objstr.nodeType == 1 ? true : false;
			 } catch (e) {
				 objstr_bol = false;
			 }
			 if (objstr_bol) {
				 objstr.style.display = "none";
			 }
		 } catch (e) { }
	 },
	 showControl: function(obj) {//添加需要隐藏的控件
		 try {
			 var objstr = document.getElementById(obj);
			 var objstr_bol = false;
			 var divobj = document.createElement("div");
			 try {
				 divobj.appendChild(objstr.cloneNode(true));
				 objstr_bol = objstr.nodeType == 1 ? true : false;
			 } catch (e) {
				 objstr_bol = false;
			 }
			 if (objstr_bol) {
				 objstr.style.display = "block";
			 }
		 } catch (e) { }
	 },
	 removeControl: function(obj) {//删除需要删除的控件
		 try {
			 var objstr = document.getElementById(obj);
			 var objstr_bol = false;
			 var divobj = document.createElement("div");
			 try {
				 divobj.appendChild(objstr.cloneNode(true));
				 objstr_bol = objstr.nodeType == 1 ? true : false;
			 } catch (e) {
				 objstr_bol = false;
			 }
			 if (objstr_bol) {
				 objstr.parentNode.removeChild(objstr);
			 }
		 } catch (e) { }
	 },
	 uspAccessMode: function() {//接入方式
		 try {
			 var uJSIconspan = document.getElementById(uspJS.uspProOpenObj.uspJavascript);//一定有appid
			 var uJSIconspanJalor = document.getElementById(uspJS.uspProOpenObj.uspJavascriptJalor);//可能有，可能没有APPID
			 var uJSIconspanNginx = document.getElementById(uspJS.uspProOpenObj.uspJavascriptNginx);//可能有，可能没有APPID
 
			 if (uJSIconspanJalor && uspJS.isNull(uspJS.appId)) {
				 uspJS.refreshParameters(uspJS.uspProOpenObj.uspJavascriptJalor);//根据接入组件JS ID获取接入参数
				 uspJS.intranetExtranet(uspJS.uspProOpenObj.uspJavascriptJalor);
			 }
			 if (uJSIconspanNginx && uspJS.isNull(uspJS.appId)) {
				 uspJS.refreshParameters(uspJS.uspProOpenObj.uspJavascriptNginx);//根据接入组件JS ID获取接入参数
				 uspJS.intranetExtranet(uspJS.uspProOpenObj.uspJavascriptNginx);
			 }
			 if (uJSIconspan) {//加载当前的参数,
				 uspJS.refreshParameters(uspJS.uspProOpenObj.uspJavascript);//根据接入组件JS ID获取接入参数
				 uspJS.intranetExtranet(uspJS.uspProOpenObj.uspJavascript);
			 }
 
		 } catch (e) { }
	 },
	 sourcePriority: function() {//判断是否展示组件
		 try {
			 uspJS.uspProOpenObj.Producthideshowbol = false;//组件默认不展示
			 if (uspJS.uspProOpenObj.titleNumber > 1) {//让组件每次加载只加载一次
				 return;
			 }
			 uspJS.uspProOpenObj.titleNumber += 1;
			 uspJS.clearlocalStorage("ihelp_uspProOpenObj");//清除缓存
			 uspJS.addlocHrefKeyMap();//添加接入方路径到集合中
			 //如果没有appId,则获取路径获取APPiD
			 if (uspJS.isNull(uspJS.appId)) {
				 uspJS.getAppIdParamHref();//用路径去获取APPID,并且返回是否展示
			 } else {
				 //			uspJS.displayOrNotIhelp();//拿到APPID与已接入APPID进行比对，判断是否已介入
				 uspJS.uspProOpenObj.Producthideshowbol = true;
			 }
			 //判断是否需要向后台发起请求
			 if (uspJS.uspProOpenObj.addNewHrefHttpBol) {
				 //				console.log("打开了一个新的页面所以需要向后台发起请求，记录新路径");
				 uspJS.getUSPRealTimeData();
			 }
		 } catch (e) {
		 }
	 },
	 getlocationHref: function() {//获取打开页面的路径
		 try {
			 var lochref = window.location.href;//获取路径上的sourceURL，如果没有就取当前页面路径；
			 lochref = lochref.split("?")[0];//去除路径问号后面的内容
			 //如果路径长度超长，截取前300个字符
			 if (lochref.length > 300) {
				 lochref = lochref.substr(0, 300);
			 }
			 return lochref;
		 } catch (e) { }
	 },
	 /**
		* 用路径去获取APPID,并且返回是否展示
		*/
	 getAppIdParamHref: function(lochref) {
		 uspJS.uspProOpenObj = JSON.parse(localStorage.getItem("ihelp_uspProOpenObj"));
		 //判断是否有缓存，如果没有缓存直接调用后台方法
		 if (uspJS.isNull(uspJS.uspProOpenObj)) {
			 uspJS.getUSPRealTimeData();
		 }
		 else {
			 var localhref = uspJS.getlocationHref();
			 //判断是否有缓存的路径对应的APPID及是否展示，没有就直接调后台数据，有就判断是否有超过有效时间，如果没有超过有效时间，就用珲春结果，超过有效时间还是调用后台
			 if (uspJS.isNull(uspJS.uspProOpenObj.appIdHrefMap[localhref])) {
				 uspJS.getUSPRealTimeData();
			 } else {
				 var objstr = uspJS.uspProOpenObj.appIdHrefMap[localhref];
				 uspJS.uspProOpenObj.Producthideshowbol = objstr.split(",")[1];
				 var startDate = objstr.split(",")[2];
				 var endDate = new Date().getTime();
				 uspJS.appId = objstr.split(",")[0];
				 //如果这个缓存时间超出了
				 if (parseInt((endDate - startDate) / 1000 / 60) >= 60) {
					 delete uspJS.uspProOpenObj.appIdHrefMap[localhref];//删除掉对象里面的缓存
					 localStorage.setItem("ihelp_uspProOpenObj", uspJS.uspProOpenObj);
					 uspJS.getUSPRealTimeData();
				 }
			 }
		 }
	 },
	 addlocHrefKeyMap: function(lochref) {//给集合添加数据
		 try {
			 uspJS.getlocHrefKeyMapInfo();//初始化数据
			 uspJS.insuranceBolVal();//判断熔断
			 if (uspJS.uspProOpenObj.insuranceBol) {//熔断
				 return;
			 }
			 if (uspJS.isNull(lochref)) {
				 lochref = uspJS.getlocationHref();
			 }
			 var keyvaluehrefisnull = true;//是否有重复
			 var openhrefNum = 0;
			 var minopenkey;
			 for (var i = 0, l = uspJS.uspProOpenObj.locHrefKey.length; i < l; i++) {
				 var keyvaluehref = uspJS.uspProOpenObj.locHrefMap[uspJS.uspProOpenObj.locHrefKey[i]];
				 //判断值是否为空
				 if (uspJS.isNull(keyvaluehref)) {
					 continue;
				 }
				 //判断页面URL跟对象存储的UR是否相等
				 if (keyvaluehref == lochref) {
					 keyvaluehrefisnull = false;
					 uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]] = uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]] + 1;
					 //					console.log("相等的时候相加后="+uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]]);
				 }
				 //获取点击次数最小的KEY
				 if (openhrefNum == 0 || openhrefNum >= uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]]) {
					 openhrefNum = uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]];
					 minopenkey = uspJS.uspProOpenObj.locHrefKey[i];//记住打开最少次数的最后一个KEY值，用来替换成新的href
				 }
				 //判断页面打开次数是否达到预先设定的值
				 if (uspJS.uspProOpenObj.maxOpenNum <= uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]]) {//判断是否达到最大点击次数
					 uspJS.uspProOpenObj.maxOpenHrefBol = true;
				 }
			 }
			 if (!keyvaluehrefisnull) {//判断是否有重复，如果有就退出 ，没有就添加到对象中
				 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
				 return;
			 }
			 var valueisNull = false;//判断是否有为空的值
			 for (var i = 0, l = uspJS.uspProOpenObj.locHrefKey.length; i < l; i++) {//去判断集合中是否已经有了此路径，如果没有添加，如果有就不管
				 var keyvaluehref = uspJS.uspProOpenObj.locHrefMap[uspJS.uspProOpenObj.locHrefKey[i]];
				 //如果达到最大点击次数，重置所有路径的点击次数
				 if (uspJS.uspProOpenObj.maxOpenHrefBol && !uspJS.isNull(keyvaluehref)) {
					 uspJS.uspProOpenObj.locHrefMapValueNum[uspJS.uspProOpenObj.locHrefKey[i]] = 1;
				 }
				 //判断集合中是否有为空的值
				 if (uspJS.isNull(keyvaluehref)) {
					 valueisNull = true;
					 minopenkey = uspJS.uspProOpenObj.locHrefKey[i];
				 }
			 }
			 //覆盖掉打开最少次数的URL
			 if (!uspJS.isNull(minopenkey) && valueisNull) {
				 uspJS.uspProOpenObj.locHrefMap[minopenkey] = lochref;
				 uspJS.uspProOpenObj.locHrefMapValueNum[minopenkey] = 1;
				 uspJS.uspProOpenObj.addNewHrefHttpBol = true;
			 }
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
		 } catch (e) { }
	 },
	 /**
		* 初始化装HREF的集合
		*/
	 getlocHrefKeyMapInfo: function() {
		 try {
			 var uspProOpenObj = JSON.parse(localStorage.getItem("ihelp_uspProOpenObj"));//取缓存，如果缓存有了，就不循环了
			 if (!uspJS.isNull(uspProOpenObj)) {//判断这两个属性时候有值，有值就跳出方法，没值就走下面的循环给赋值
				 uspJS.uspProOpenObj = uspProOpenObj;
				 return;
			 }
			 uspJS.uspProOpenObj.locHrefMap = new Object();
			 uspJS.uspProOpenObj.locHrefKey = new Array();
			 uspJS.uspProOpenObj.locHrefMapValueNum = new Object();
			 uspJS.uspProOpenObj.RefreshDay = (new Date()).Format("yyyyMMdd");
			 for (var i = 0, l = 50; i < l; i++) {
				 var hrefkey = "locHrefKey" + i;
				 uspJS.uspProOpenObj.locHrefKey.push(hrefkey);
				 uspJS.uspProOpenObj.locHrefMap[hrefkey] = "";
				 uspJS.uspProOpenObj.locHrefMapValueNum[hrefkey] = 0;
			 }
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
		 } catch (e) { }
	 },
	 //强制刷新方法
	 /**
		* 实时调用数据的方法
		* appId
		* callbackName 回调函数名称
		* sourceURL 页面路径
		* paramSourceURL 接入时，呆在路径后面的SourceURL的值
		* appId有值的时候，就不需要用sourceURL去查询这个路径是否接入组件，如果没值的时候，就需要用sourceURL去后台判断这个路径是否已经接入了，并且结果返回
		*/
	 getUSPRealTimeData: function() {
		 try {
			 uspJS.insuranceBolVal();//判断熔断
			 if (uspJS.uspProOpenObj.insuranceBol) {//熔断
				 return;
			 }
			 uspJS.uspProOpenObj.addNewHrefHttpBol = false;
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
			 var commonData = {};
			 commonData.appId = uspJS.appId;
			 commonData.callbackName = "uspJS.USPRealTimeDataHandling";
			 commonData.sourceURL = uspJS.getlocationHref();
			 commonData.paramSourceURL = uspJS.sourceURL;
			 uspJS.jsonp({
				 url: uspConfig.uspServiceHost + uspJS.evaluateFeedbackService + "/getIsDisplayComponent",
				 data: commonData,
				 success: uspJS.USPRealTimeDataHandling
			 }, uspJS.scriptClassName);
		 } catch (e) {
			 uspJS.defaultInsurance(0);//默认熔断30分钟方法
		 }
	 },
	 /**
		* 实时数据处理方法
		* 如果接入路径上没有APPID，那么就缓存一个路径对APPID，对是否展示，并且打上时间戳
		* data.allAppId 不等于空的时候，缓存所有的接入APPID
		* data.isDisCom == 0 不展示
		* data.isDisCom == 1 展示
		* data.cirBreTime>0的时候需要熔断，熔断时间根据值决定（单位分钟）
		*/
	 USPRealTimeDataHandling: function(data) {
		 try {
			 if (uspJS.isNull(data)) {
				 return;
			 }
			 if (uspJS.isNull(uspJS.appId)) {
				 uspJS.uspProOpenObj.appIdHrefMap[data.linkUrl] = data.appId + "," + uspJS.uspProOpenObj.Producthideshowbol + "," + new Date().getTime();
				 uspJS.appId = data.appId;
			 }
			 if (!uspJS.isNull(data.allAppId)) {//allAppId所有的接入APPID
				 uspJS.uspProOpenObj.appIdArrStr = data.allAppId.split(",");
			 }
			 if (data.isDisCom == 0) {//isDisCom=0是不展示
				 uspJS.uspProOpenObj.Producthideshowbol = false;
				 uspJS.uspProOpenObj.appIdHideShowBolArr["ihelp_showhide_bol" + data.appId] = uspJS.uspProOpenObj.Producthideshowbol + "," + new Date().getTime();
			 }
			 if (data.isDisCom == 1) {//isDisCom=1是展示
				 uspJS.uspProOpenObj.Producthideshowbol = true;
				 uspJS.uspProOpenObj.appIdHideShowBolArr["ihelp_showhide_bol" + data.appId] = uspJS.uspProOpenObj.Producthideshowbol + "," + new Date().getTime();
			 }
			 if (!uspJS.isNull(data.cirBreTime) && parseInt(data.cirBreTime) > 0) {//当这个值有值的时候，需要主动熔断
				 uspJS.defaultInsurance(data.cirBreTime);
			 }
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
		 } catch (e) {
			 uspJS.defaultInsurance(0);//默认熔断30分钟方法
		 }
	 },
	 insuranceBolVal: function() {//熔断方法，判断是否过了熔断时间，可以向后台请求
		 try {
			 var ihelpUspProOpenObj = JSON.parse(localStorage.getItem("ihelp_uspProOpenObj"));
			 if (!ihelpUspProOpenObj.insuranceBol) {//不需要熔断，直接跳出
				 return;
			 }
			 var endDate = new Date().getTime();
			 var startDate = ihelpUspProOpenObj.insuranceStartDate;
			 var timeNum = ihelpUspProOpenObj.insuranceTimeNum;
			 if (parseInt((endDate - startDate) / 1000 / 60) >= timeNum) {
				 uspJS.uspProOpenObj.insuranceBol = false;//关闭熔断，可以重新向后台请求
			 }
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
		 } catch (e) {
			 uspJS.defaultInsurance(0);//默认熔断30分钟方法
		 }
	 },
	 defaultInsurance: function(timeNum) {//默认熔断方法
		 try {
			 uspJS.uspProOpenObj.insuranceBol = true;//熔断，开启保险
			 uspJS.uspProOpenObj.insuranceTimeNum = 30;//熔断时间
			 if (!uspJS.isNull(timeNum) && parseInt(timeNum) > 0) {
				 uspJS.uspProOpenObj.insuranceTimeNum = parseInt(timeNum);
			 }
			 uspJS.uspProOpenObj.insuranceStartDate = new Date().getTime();
			 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
		 } catch (e) { }
	 },
	 /**
		* 清除缓存
		* 当ihelp_uspProOpenObj的缓存达到
		*/
	 clearlocalStorage: function(itemName) {
		 try {
			 var str = localStorage.getItem(itemName);
			 if (uspJS.isNull(str)) {
				 return;
			 }
			 if (str.length > 200000) {
				 localStorage.removeItem(itemName);
			 }
			 var itemobj = JSON.parse(str);
			 if (itemobj.RefreshDay != (new Date()).Format("yyyyMMdd")) {
				 localStorage.removeItem(itemName);
			 }
		 } catch (e) { }
	 },
	 intranetExtranet: function(elementId) {//刷内外网地址
		 try {
			 if (uspJS.isNull(elementId)) {
				 return;
			 }
			 var wurl = window.location.href;
			 var uspJavascript = document.getElementById(elementId);
			 if (uspJavascript) {
				 var lsURL = uspJavascript.getAttribute('src');
				 var valnum = lsURL.indexOf("app.huawei.com");
				 //				var wurlnum = wurl.indexOf("app.huawei.com");
				 //				if(valnum!=-1 || wurlnum!=-1){
				 if (valnum != -1) {
					 uspConfig.uspServiceHost = uspConfig.uspServiceHost.replace("w3.huawei.com", "app.huawei.com");
					 uspConfig.onlineSupportURLHost = uspConfig.onlineSupportURLHost.replace("w3.huawei.com", "app.huawei.com");
					 uspConfig.uspPortalServiceHost = uspConfig.uspPortalServiceHost.replace("w3.huawei.com", "app.huawei.com");
					 uspConfig.uspPortalServiceHostOutNet = uspConfig.uspPortalServiceHostOutNet.replace("w3.huawei.com", "app.huawei.com");
					 //					uspConfig.uspJSConfigParam = 'usp/common/js/uspJS_config_param_app.js';
					 //					uspJS.uspServiceHost = uspJS.uspServiceHost.replace("w3.huawei.com","app.huawei.com");
				 }
				 var unideskvalnum = lsURL.indexOf("unidesk.huawei.com");
				 if (unideskvalnum > -1) {
					 uspConfig.uspServiceHost = uspConfig.uspServiceHost.replace("w3.huawei.com", "unidesk.huawei.com");
					 uspConfig.onlineSupportURLHost = uspConfig.onlineSupportURLHost.replace("w3.huawei.com", "unidesk.huawei.com");
					 uspConfig.uspPortalServiceHost = uspConfig.uspPortalServiceHost.replace("w3.huawei.com", "unidesk.huawei.com");
					 uspConfig.uspPortalServiceHostOutNet = uspConfig.uspPortalServiceHostOutNet.replace("w3.huawei.com", "unidesk.huawei.com");
				 }
			 }
		 } catch (e) { }
	 },
	 UspHashMap: function() {
		 /** Map 大小 **/
		 var size = 0;
		 /** 对象 **/
		 var entry = new Object();
 
		 /** 存 **/
		 this.put = function(key, value) {
			 if (!this.containsKey(key)) {
				 size++;
			 }
			 entry[key] = value;
		 };
 
		 /** 取 **/
		 this.get = function(key) {
			 if (this.containsKey(key)) {
				 return entry[key];
			 }
			 else {
				 return null;
			 }
		 };
 
		 /** 删除 **/
		 this.remove = function(key) {
			 if (delete entry[key]) {
				 size--;
			 }
		 };
 
		 /** 清空map **/
		 this.clear = function() {
			 try {
				 delete entry;
				 entry = {};
				 size = 0;
			 }
			 catch (e) {
				 return e;
			 }
		 };
 
		 /** 是否包含 Key **/
		 this.containsKey = function(key) {
			 return (key in entry);
		 };
 
		 /** 是否包含 Value **/
		 this.containsValue = function(value) {
			 for (var prop in entry) {
				 if (entry[prop] == value) {
					 return true;
				 }
			 }
			 return false;
		 };
 
		 /** 所有 Value **/
		 this.values = function() {
			 var values = new Array();
			 for (var prop in entry) {
				 values.push(entry[prop]);
			 }
			 return values;
		 };
 
		 /** 所有 Key **/
		 this.keys = function() {
			 var keys = new Array();
			 for (var prop in entry) {
				 keys.push(prop);
			 }
			 return keys;
		 };
 
		 /** Map Size **/
		 this.size = function() {
			 return size;
		 };
	 },
	 addCoverlayer: function() {//添加遮罩层
		 try {
			 var arrobj = ["TTAyMTg4MQ==", "TTAwMzYxMw==", "TTAwMTI5Mw==", "TTAyNDUwMA==", "TTAwMjE4Mg==", "TTAwODIwMA==", "TTAwMzc4MA==", "TTAwMzE0MQ==", "TTAyNjMwMA==", "TTAyODM4MA==",
				 "TTA0MDM4Ng==", "TTAyNDg2MQ==", "TTAyMzg0MA==", "TTAwMzMzMQ==", "TTAyMjYyMA==", "TTAzMDE0MQ==", "TTAxODUwMA==", "TTAyODI4MA==", "TTAwMTg0Mg==", "TTAyNjMwMg==",
				 "TTAwMzYxMg==", "TTAwODEwMA==", "TTAyNDY4NA==", "TTAyODA2MA==", "TTAwMzU4Ng==", "TTAyNTI2MA==", "TTAwMjE2Ng==", "TTAyNTYwMA==", "TTAyMTA4Mg==", "TTAwMjExMQ==",
				 "TTA0MDQxMw==", "TTAwMDQzNQ==", "TTAyNzg4MA==", "TTAwMzU5MQ==", "TTAwMjA0OQ==", "TTAwMjEzMQ==", "TTAwMzQ2Ng==", "TTAwMjc4MA==", "TTAwMTM1NA==", "TTAyNjk4OA==",
				 "TTAyNTIxMQ==", "TTAyMTA4Mw==", "TTAyOTA0MA==", "TTAyOTAyMg==", "TTAyODAyMA==", "TTAyNzU0MA==", "TTAxNzg0Mg==", "TTAyMjY2Mg==", "TTAyNzM0MA==", "TTAwMTQ0OQ==",
				 "TTAyNTEyMA==", "TTAwMDUxNg==", "TTAyNTE4NA==", "TTAyNTIwNw==", "TTAwMDUxMg==", "TTAwMzMwNQ==", "TTAwMDM4OQ==", "TTAyNTIyNg==", "TTA0MDM1MA==", "TTAyNTE5MA==",
				 "TTAyNTE4Mw==", "TTAwMDAwMg==", "TTAyNTE4MA==", "TTAyNjcyMA==", "TTAyNTEwMQ==", "TTAyNTEyMQ==", "TTAyNzg0MA==", "TTAyODcwMA==", "TTAyOTkyMA==", "TTAyNzAwMw==",
				 "TTAyNDc2MA==", "TTAyNDYyMA==", "TTAwNzAyMA==", "TTAyNDQyMA==", "TTAwMzM0OA==", "TTAyNDY4Mw==", "TTAyNzUyMA==", "TTAyNzU2MA==", "TTAyNzc4Mg==", "TTAyOTAyMQ==",
				 "TTA0MDA0NA==", "TTA0MDM0OQ==", "TTAwNzE4MA==", "TTAwMDAwMDMzNDg=", "TTAyNzk2NQ==", "TTA0MDQyOA==", "YXBwXzAwMDAwMDAzNTQ4OQ==", "TTA0MDQzOA==", "TTAyOTA4MA==", "TTA0MDQxMQ==",
				 "TTA0MDQxMA==", "TTAyNjkwMA==", "TTAwMTQ5MQ==", "TTAyNzA4Ng==", "TTAyNjkyMA==", "TTAzMTEwMA==", "TTAyNzA4Nw==", "TTAwMjczMg==", "TTA0MDIzMQ==", "TTAzMTA4NA==",
				 "TTAyNjQ2MQ==", "TTAyNjk4MQ==", "TTA0MDIzNw==", "TTAzMjQ0MA==", "TTAwMjc1Mg==", "TTAzMTA4Mw==", "TTA0MDIzMg==", "TTA0MDQwNQ==", "TTAzMDM0MA==", "TTAyNzkwMA==",
				 "TTAyNzAwMg==", "TTAzMTkyMA==", "TTAyNzA4NQ==", "TTAyOTk2MA==", "TTAyODEwMA==", "TTA0MDMwOQ==", "TTA0MDI2Ng==", "TTAyODgwMA==", "TTAyNjk4Mg==", "TTAzMDUwMA==",
				 "TTAwMzM5OQ==", "TTAyNjkyMw==", "TTAyODYwMA==", "TTAyNjkwMQ==", "TTA0MDMxNg==", "TTAyNzAwMA==", "TTAzMDc0MQ==", "TTA0MDM2MQ==", "TTAyNjk4NQ==", "TTAwMDA3NA==",
				 "TTAyNjk4NA==", "TTAzMDcyMw==", "TTAyNjk4Mw==", "TTAwMDc4NQ==", "TTA0MDU2NA==", "TTA0MDQwNw==", "TTA0MDQwMw==", "TTAzMDcyNA==", "TTAyNjc0MA==", "TTAyNjk4OQ==",
				 "TTAwMDUwMA==", "TTA0MDUzMA==", "TTAzMDMyMA==", "TTAyNjkwMg==", "TTA0MDM0MA==", "TTA0MDE5Ng==", "TTA0MDI5Nw==", "TTAzMTEyNA==", "TTAyNjkyMQ==", "TTAxMjM0MQ==",
				 "TTAyODk2MA==", "TTAzMTA2Mg==", "TTAyNzAyMA==", "TTAzMDY2MA==", "TTA0MDQ2OQ==", "TTAyMDA2MQ==", "TTAzMDc0MA==", "TTAxOTA0MA==", "YXBwXzAwMDAwMDAzMDEyNQ==", "TTAwMjE1Ng==",
				 "TTAwOTMwMw==", "TTAyOTY4Mw==", "TTAwOTMwNQ==", "TTAwOTMwNA==", "TTAwOTMwMg==", "TTA0MDI3OA==", "dmlydHVhbF9hcHBfdW5pa25vdzAwMDA4NDI=", "TTAyMTA2MA==", "TTAyMTA2MQ==", "TTAyMTA2Mg==",
				 "TTAyMTA2Mw==", "TTAyMTA2NA==", "TTAyMTA2NQ==", "TTAyMTA4MA==", "TTAyMTA2Ng==", "TTAyMTA2Nw==", "TTAyMTA2OA==", "TTAyMTA2OQ==", "TTAyMTA3MA==", "TTAyMTA3MQ==",
				 "TTAyMTA3Mg==", "TTAwMTQxMQ==", "dmlydHVhbF9hcHBfaWhlbHAwMDAwMDEw", "TTAwMzM2MQ==", "TTAwMjQxNg==", "TTAwMzU1NQ==", "TTAwNDg2MA==", "TTAwMTY0NA==", "TTAwMDExMA==", "TTAwMzc3NA==",
				 "TTAwMTY0MA==", "TTAwMTY0Mg==", "TTAwMjU4Mg==", "TTAwNDU2Ng==", "TTAwMTYzNw==", "TTAwNDM4MA==", "TTAwNDQwOA==", "TTAwNDU1Mw==", "TTAwNDM4OA==", "TTAwNDU2NA==",
				 "TTAwNDU2Nw==", "TTAwNDM4Nw==", "TTAwNjA0MA==", "TTAwNDQwMQ==", "TTAwODUyMA==", "TTAwNDQwMg==", "TTAwNDU2Mw==", "TTAwNDU0OA==", "TTAwNDU0Nw==", "TTAwNDQwNw==",
				 "TTAwNDQwNg==", "TTAwNDQwOQ==", "TTA0MDU5NA==", "TTAxNTQ0Mg==", "TTAyOTYwMA==", 'TTA0MDIwNg=='];
			 var uspProCoverlayerBol = true;//是否走组件展示判断，
			 for (var i = 0, l = arrobj.length; i < l; i++) {//给特定的产品添加遮罩层
				 var arrobjval = uspJS.Base64.decode(arrobj[i]);
				 if (uspJS.appId == arrobjval) {
					 uspProCoverlayerBol = false;
					 break;
				 }
			 }
			 if (uspProCoverlayerBol) {
				 return;
			 }
			 //创建之前先清除存在的
			 var uspyanobj = document.getElementById("usp_ihelp_Coverlayer");
			 if (uspyanobj) {
				 var uspyanparent = uspyanobj.parentElement.removeChild(uspyanobj);
			 }
			 //创建结构
			 var coverlayer = document.createElement('div');
			 coverlayer.id = "usp_ihelp_Coverlayer";
			 document.getElementsByTagName("body")[0].appendChild(coverlayer);
		 } catch (e) {
			 console.log("添加遮罩层失败=" + e);
		 }
	 },
	 removeCoverlayer: function() {//删除遮罩层
		 try {
			 var uspyanobj = document.getElementById("usp_ihelp_Coverlayer");
			 if (uspyanobj) {
				 var uspyanparent = uspyanobj.parentElement.removeChild(uspyanobj);
			 }
		 } catch (e) { }
	 },
	 evaluationPosition: function() {//评价位置
		 try {
			 var drag = document.getElementById('usp_yan');
			 var locWidthVal = document.body.clientWidth / 2;
			 var appDiv = document.getElementById("evaluateBadDivB");//评价框
			 //			var appDivSuc = document.getElementById("evaluateSuccessDiv");//评价提示成功框
			 if (!uspJS.isNull(appDiv)) {
				 appDiv.style.left = locWidthVal > drag.offsetLeft ? '50px' : '-477px';
				 //				appDivSuc.style.left = locWidthVal>drag.offsetLeft ? '50px':'-356px';
				 if (locWidthVal > drag.offsetLeft) {
					 document.getElementById("ihelp_lefttips").style.display = "block";
					 document.getElementById("ihelp_righttips").style.display = "none";
				 } else {
					 document.getElementById("ihelp_lefttips").style.display = "none";
					 document.getElementById("ihelp_righttips").style.display = "block";
				 }
			 }
		 } catch (e) { }
	 },
	 loadUserAccount: function(obj) {
		 try {
			 if (null != obj.w3Account) {
				 uspJS.w3Account = obj.w3Account;
			 }
		 } catch (e) { }
	 },
	 uspJS_param: function() {//组件在服务订阅的配置数据
		 try {
			 var commonData = {};
			 //			commonData.callbackName = "uspJS.uspJS_paramSuccess";
			 //			commonData.moduleID = uspJS.appId ||"";
			 commonData.moduleID = "";
			 uspJS.jsonp({
				 url: uspConfig.uspServiceHost + "services/soa/universalInterface/getPlugIn",
				 data: commonData,
				 success: uspJS.USPRealTimeDataHandling
			 }, uspJS.scriptClassName);
		 } catch (e) { }
	 },
	 uspJS_paramSuccess: function(data) {
		 try {//1客服，2评价，3进展，4建议，5提单，6社区
			 var sucdata = data.success;
			 if (!uspJS.isNull(sucdata)) {
				 uspJS.uspProOpenObj.ButtonConfig = sucdata
				 localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj))
			 }
 
		 } catch (e) { }
	 },
	 dynamicLoadingBody: function(path, callback) {
		 if (!path || path.length === 0) {
			 throw new Error('argument "path" is required !');
		 }
		 var script = document.createElement('script');
		 script.src = path;
		 script.type = 'text/javascript';
		 if (callback) {
			 script.onload = script.onreadystatechange = function() {
				 if (script.readyState && script.readyState != 'loaded' && script.readyState != 'complete')
					 return;
				 script.onreadystatechange = script.onload = null;
				 callback();
			 };
		 }
		 var head = document.body.appendChild(script);
	 },
	 loadScriptCallback: function(path, callback) {
		 try {
			 if (!path || path.length === 0) {
				 throw new Error('argument "path" is required !');
			 }
			 var head = document.getElementsByTagName('head')[0];
			 var script = document.createElement('script');
			 script.src = path;
			 script.type = 'text/javascript';
			 if (script.attachEvent) {
				 script.attachEvent('onreadystatechange', function() {
					 var target = window.event.srcElement;
					 //					console.log("target.readyState="+target.readyState);
					 if (target.readyState == 'loaded' || target.readyState == 'complete') {
						 callback();
					 }
				 });
				 script.attachEvent('onerror', function() {
					 uspJS.version.ButtonConfig = "";
					 uspJS.initUI();
					 document.getElementById("goodBtnTips").style.visibility = "hidden";
					 document.getElementById("badBtnTips").style.visibility = "hidden";
				 });
			 } else {
				 script.addEventListener('load', function() {
					 callback();
				 }, false);
				 script.addEventListener('error', function() {
					 uspJS.version.ButtonConfig = "";
					 uspJS.initUI();
					 document.getElementById("goodBtnTips").style.visibility = "hidden";
					 document.getElementById("badBtnTips").style.visibility = "hidden";
				 }, false);
			 }
			 head.appendChild(script);
 
		 } catch (e) {
			 console.log("loadScriptCallback=" + e);
		 }
	 },
	 uspJScheckResize: function() {//判断浏览器窗口大小是否发生变化
		 try {
			 var drag = document.getElementById("usp_yan");
			 var dragHeight = document.getElementById("usp_yan").clientHeight;
			 var left = parseInt(drag.style.left.split("px")[0]);
			 var top = parseInt(drag.style.top.split("px")[0]);
			 var right = parseInt(drag.style.right.split("px")[0]);
			 if (isNaN(left) || isNaN(top)) {
				 left = drag.getBoundingClientRect().left;
				 top = drag.getBoundingClientRect().top;
			 }
			 //			left = window.innerWidth-left-50>0? left:left+(window.innerWidth-left-50);
			 left = window.innerWidth - right - 50 > 0 ? window.innerWidth - right - 50 : left + (window.innerWidth - left - 50);
			 top = window.innerHeight - top - dragHeight > 0 ? top < 0 ? 0 : top : top + (window.innerHeight - top - dragHeight);
			 drag.style.left = left + "px";
			 drag.style.top = top + "px";
			 uspJS.cachePortalMoveAction("ihelp_portal_index_" + uspJS.appId, drag.style.left + "_" + drag.style.top);
			 //			uspJS.getInitLocation();//初始化位置信息
			 uspJS.normalWidth = window.innerWidth;
		 } catch (e) { }
	 },
	 addiHelpItem: function(obj) {
		 try {
			 if (uspJS.hasAdded || !obj) {
				 return;//用来控制只加载一次
			 }
			 if (obj && obj.length > 0) {
				 for (var i = 0; i < obj.length; i++) {
					 if (uspJS.isNull(obj[i])) {
						 continue;
					 }
					 var myIhelpIcon = document.createElement('li');
					 var id = uspJS.NewGuid();
					 myIhelpIcon.name = "entrance_icon";
					 myIhelpIcon.setAttribute("id", "li" + id);
					 obj[i].id = "li" + id;
					 myIhelpIcon.setAttribute("class", "entrance_icon");
					 myIhelpIcon.setAttribute("tipss", "delli");
					 myIhelpIcon.setAttribute("style", "display:none;");
					 try {
						 myIhelpIcon.setAttribute("whetherHidden", obj.btnShowHide);
					 } catch (e) { }
					 if (uspJS.locale && uspJS.locale == 'zh_CN') {
						 myIhelpIcon.innerHTML = obj[i].zh_CN;
					 } else {
						 myIhelpIcon.innerHTML = obj[i].en_US;
					 }
					 try {
						 obj[i].whetherHidden
							 ? myIhelpIcon.setAttribute("style", "display:block;")
							 : myIhelpIcon.setAttribute("style", "display:none;");
 
					 } catch (e) { }
					 if (document.getElementById('usp_arrowIconHideTitle').before) {
						 document.getElementById('usp_arrowIconHideTitle').before(myIhelpIcon);
					 } else {
						 var uspyanulobj = document.getElementById("usp_entrance_ul");
						 var iconHidespan = document.getElementById("usp_arrowIconHideTitle");
						 uspyanulobj.insertBefore(myIhelpIcon, iconHidespan);
					 }
					 uspJS.addihelpitemArr.push(obj[i]);
 
				 }
				 uspJS.hasAdded = true;//已经执行过增加组件操作的标识
			 }
		 } catch (e) { }
	 },
	 deliHelpItem: function(obj) {
		 try {
			 if (!obj) {
				 return;
			 }
			 if (obj && obj.length > 0) {
				 for (var i = 0; i < obj.length; i++) {
					 if (document.getElementById("" + obj[i].delItem)) {
						 document.getElementById("" + obj[i].delItem).innerHTML = "";
					 }
				 }
			 }
		 } catch (e) { }
	 },
	 Base64: {
		 b64chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
		 encode: function(input) {
			 var output = "";
			 var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
			 var i = 0;
			 input = uspJS.Base64._utf8_encode(input);
			 while (i < input.length) {
				 chr1 = input.charCodeAt(i++);
				 chr2 = input.charCodeAt(i++);
				 chr3 = input.charCodeAt(i++);
 
				 enc1 = chr1 >> 2;
				 enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
				 enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
				 enc4 = chr3 & 63;
 
				 if (isNaN(chr2)) {
					 enc3 = enc4 = 64;
				 } else if (isNaN(chr3)) {
					 enc4 = 64;
				 }
				 output = output + uspJS.Base64.b64chars.charAt(enc1) + uspJS.Base64.b64chars.charAt(enc2)
					 + uspJS.Base64.b64chars.charAt(enc3) + uspJS.Base64.b64chars.charAt(enc4);
			 }
			 return output;
		 },
		 decode: function(input) {
			 var output = "";
			 var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
			 var i = 0;
			 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "")
			 while (i < input.length) {
				 enc1 = uspJS.Base64.b64chars.indexOf(input.charAt(i++));
				 enc2 = uspJS.Base64.b64chars.indexOf(input.charAt(i++));
				 enc3 = uspJS.Base64.b64chars.indexOf(input.charAt(i++));
				 enc4 = uspJS.Base64.b64chars.indexOf(input.charAt(i++));
 
				 chr1 = (enc1 << 2) | (enc2 >> 4);
				 chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
				 chr3 = ((enc3 & 3) << 6) | enc4;
 
				 output = output + String.fromCharCode(chr1);
 
				 if (enc3 != 64) {
					 output = output + String.fromCharCode(chr2);
				 }
				 if (enc4 != 64) {
					 output = output + String.fromCharCode(chr3);
				 }
			 }
			 output = uspJS.Base64._utf8_decode(output);
			 return output;
		 },
		 _utf8_encode: function(string) {
			 string = string.replace(/\r\n/g, "\n");
			 var utftext = "";
			 for (var n = 0; n < string.length; n++) {
				 var c = string.charCodeAt(n);
				 if (c < 128) {
					 utftext += String.fromCharCode(c);
				 } else if ((c > 127) && (c < 2048)) {
					 utftext += String.fromCharCode((c >> 6) | 192);
					 utftext += String.fromCharCode((c & 63) | 128);
				 } else {
					 utftext += String.fromCharCode((c >> 12) | 224);
					 utftext += String.fromCharCode(((c >> 6) & 63) | 128);
					 utftext += String.fromCharCode((c & 63) | 128);
				 }
			 }
			 return utftext;
		 },
		 _utf8_decode: function(utftext) {
			 var string = "";
			 var i = 0;
			 var c = c1 = c2 = 0;
			 while (i < utftext.length) {
				 c = utftext.charCodeAt(i);
				 if (c < 128) {
					 string += String.fromCharCode(c);
					 i++;
				 } else if ((c > 191) && (c < 224)) {
					 c2 = utftext.charCodeAt(i + 1);
					 string += String.fromCharCode((c & 31) << 6 | c2 & 63);
					 i += 2;
				 } else {
					 c2 = utftext.charCodeAt(i + 1);
					 c3 = utftext.charCodeAt(i + 2);
					 string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
					 i += 3;
				 }
			 }
			 return string;
		 }
	 },
	 moudeIDdecode: function() {//给集合中的moudeID解码
		 var butList = [];
		 butList = butList.concat(uspJS.version.ButtonConfig);
		 for (var i = 0, l = butList.length; i < l; i++) {
			 butList[i].moduleID = uspJS.Base64.decode(butList[i].moduleID);
		 }
	 },
	 isChina: function(s) {
		 try {
			 var reg = new RegExp("[\\u4E00-\\u9FFF]+", "g");
			 if (reg.test(s)) {
				 return true;
			 } else {
				 return false;
			 }
		 } catch (e) { }
	 },
	 dynamicLoading: {
		 css: function(path) {
			 try {
				 if (!path || path.length === 0) {
					 throw new Error('argument "path" is required !');
				 }
				 var head = document.getElementsByTagName('head')[0];
				 var link = document.createElement('link');
				 link.href = path;
				 link.rel = 'stylesheet';
				 link.type = 'text/css';
				 head.appendChild(link);
			 } catch (e) {
				 console.log(e);
			 }
		 },
		 js: function(path) {
			 try {
				 if (!path || path.length === 0) {
					 throw new Error('argument "path" is required !');
				 }
				 var head = document.getElementsByTagName('head')[0];
				 var script = document.createElement('script');
				 script.src = path;
				 script.type = 'text/javascript';
				 head.appendChild(script);
			 } catch (e) {
				 console.log(e);
			 }
		 },
		 analyUrl: function(p) {
			 p += (p.indexOf('?') == -1) ? '?' : '&';
			 p += 'uspRandom=' + uspConfig.getCurrDateTime();
			 return p;
		 }
	 },
	 //动态获取租户的版本
	 getAppidVersion: function(appid) {
		 try {
			 //			var arrversion = ['M000682','M001372','M001667','M001784','M002477',
			 //			                  'M002701','M003326','M003645','M003724','M000832',
			 //			                  'M000070','M002398','M003330','M014440','M001162',
			 //			                  'M003480','M012420','M002172','M008002'];
			 //			var appidbol = true;
			 //			for(var i=0,l=arrversion.length;i<l;i++){
			 //				if(appid == arrversion[i]){
			 //					appidbol= false;
			 //				}
			 //			}
			 //			if(appidbol){
			 //				return;
			 //			}
			 var commonData = { appId: appid, pageCode: (new Date()).Format("yyyyMMdd") };
			 //			commonData.callbackName = "uspJS.getAppidVersionSuccess";
			 //记录用户w3账号
			 uspJS.jsonp({
				 url: uspConfig.uspServiceHost + "services/soa/universalInterface/getIhelpComponentVersion",
				 data: commonData
			 }, uspJS.scriptClassName);
			 //			uspJS.getAppidVersionSuccess(data);
		 } catch (e) { }
	 },
	 /**
		* 动态获取租户的版本，返回值处理
		* uspJS.version.butPlugInArr 按钮
		* uspJS.appIdVersion 租户版本
		* uspJS.version.plugIn.moduleID 租户ID
		* uspJS.version.plugIn.url5 提单按钮路径
		* uspJS.version.plugIn.url6 社区路径
		*/
	 getIhelpComponen: function(data) {
		 try {
			 if (!uspJS.isNull(JSON.stringify(data))) {
				 data.verTime = new Date().Format("yyyy-MM-dd-hh");
				 localStorage.setItem("uspJS_plugIn_" + uspJS.appId, JSON.stringify(data));
				 uspJS.version.plugIn = data;
				 //				uspJS.initUI();
				 //				uspJS.loadUspUI();
			 }
		 } catch (e) { }
	 },
	 /**
		* 给uspJS.version.plugIn赋值
		* 
		*/
	 getVersionplugIn: function() {
		 try {
			 uspJS.version.plugIn = localStorage.getItem("uspJS_plugIn_" + uspJS.appId);
			 var ihep_usp_AppidVersion_bol = false;
			 if (!uspJS.isNull(uspJS.version.plugIn)) {
				 uspJS.version.plugIn = JSON.parse(uspJS.version.plugIn);
				 ihep_usp_AppidVersion_bol = uspJS.isNull(uspJS.version.plugIn.verTime)
					 ?
					 true
					 : uspJS.version.plugIn.verTime == new Date().Format("yyyy-MM-dd-hh") ? false : true;
			 } else {
				 ihep_usp_AppidVersion_bol = true;//如果uspJS.version.plugIn为空说明没有缓存，则需要调用后台方法
			 }
			 if (!uspJS.isNull(uspJS.version.plugIn)) {
				 uspJS.appIdVersion = uspJS.version.plugIn.ver;
				 try {
					 uspJS.ihelp_Switch.keepUrlBol = uspJS.version.plugIn.keepUrl == 1 ? true : false;
				 } catch (e) { }
				 try {
					 uspJS.version.plugIn.moduleID = uspJS.Base64.decode(uspJS.version.plugIn.moduleID);//uspJS.version.plugIn.moduleID;//解码
				 } catch (e) { }
				 try {
					 uspJS.version.butPlugInArr = uspJS.version.plugIn.plugIn.split('-');
				 } catch (e) { }
				 uspJS.ihelp_Switch.proEvaBol = uspJS.version.plugIn.isHot == 1 ? true : false || false;
				 if (!uspJS.isNull(uspJS.version.plugIn.url5)) {
					 uspJS.version.plugIn.url5 = uspJS.version.plugIn.url5;//解码
				 }
				 if (!uspJS.isNull(uspJS.version.plugIn.url6)) {
					 uspJS.version.plugIn.url6 = uspJS.version.plugIn.url6;//解码
				 }
				 if(!uspJS.isNull(uspJS.version.plugIn.opsInfo)){
					 for(var i=0;i<uspJS.version.plugIn.opsInfo.length;i++){
						 var yfObj = uspJS.version.plugIn.opsInfo[i];
						 if(yfObj.evaluateTag === '流程规则是否合理' || yfObj.evaluateTag === '流程规则/数据是否合理'){
							 uspJS.yfOpsInfo.yfSvgScore1 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
						 if(yfObj.evaluateTag === 'IT工具好不好用'){
							 uspJS.yfOpsInfo.yfSvgScore2 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
						 if(yfObj.evaluateTag === '服务满意度'){
							 uspJS.yfOpsInfo.yfSvgScore3 = parseFloat(yfObj.avgScore).toFixed(2);
						 }
					 }
				 }
			 }
			 if (ihep_usp_AppidVersion_bol) {
				 uspJS.getAppidVersion(uspJS.appId);//动态获取脚本
			 }
			 if (uspJS.ihelp_Switch.keepUrlBol) {
				 uspJS.getOpenHtmlUrl();//开始收集URL
			 }
		 } catch (e) { }
	 },
	 getInervalHour: function(d1, d2) {//获取两个时间相隔几个小时
		 try {
			 var time1 = Date.parse(new Date(d1));
			 var time2 = Date.parse(new Date(d2));
			 var hour = Math.abs(parseInt((time2 - time1) / 1000 / 3600));
			 return hour;
		 } catch (e) { }
	 },
	 // 入口图标当前高度
	 getUspYanHeight: function() {
		 //		if (uspYanHeight == 0) {
		 //			uspYanHeight = document.getElementById("usp_yan").offsetHeight;
		 //			uspJS.setUspYanHeightOfOpen();
		 //		}
		 return document.getElementById("usp_yan").offsetHeight;
	 },
	 //入口图标最大高度
	 setUspYanHeightOfOpen: function() {
		 if (uspYanHeightOfOpen == 0) {
			 uspYanHeightOfOpen = document.getElementById("usp_yan").offsetHeight;
			 //			uspYanDivRemoveArrowTop = uspYanHeightOfOpen - uspYanHeightOfHide;
		 }
	 },
	 // 获取窗口高度
	 findDimensionsHeight: function() {
		 var winHeight = 0; // 浏览器可见区域的高度
		 if (window.innerHeight) {
			 winHeight = window.innerHeight;
		 } else if ((document.body) && (document.body.clientHeight)) {
			 winHeight = document.body.clientHeight;
		 }
 
		 if (document.documentElement && document.documentElement.clientHeight && document.documentElement.clientWidth) {
			 winHeight = document.documentElement.clientHeight;
		 }
		 return winHeight;
	 },
	 // 获取窗口宽度
	 findDimensionsWidth: function() {
		 var winWidth = 0; // 浏览器可见区域的宽度
		 if (window.innerWidth) {
			 winWidth = window.innerWidth;
		 } else if ((document.body) && (document.body.clientWidth)) {
			 winWidth = document.body.clientWidth;
		 }
 
		 if (document.documentElement && document.documentElement.clientHeight && document.documentElement.clientWidth) {
			 winWidth = document.documentElement.clientWidth;
		 }
		 return winWidth;
	 },
	 /**
		* 重新设置APPID，并重新初始化UI
		* 对外公开
		*/
	 updateIhelpCustomServiceAppIdAndLoadUI: function(appidval) {
		 try {
			 //判断入参appidval是否为空
			 if (uspJS.isNull(appidval)) {
				 return;
			 }
			 //给组件APPID赋值
			 uspJS.appId = appidval;
			 //调用初始化方法
			 uspJS.loadUspUI();
		 } catch (e) { }
	 },
	 /**
		* 收集租户接入的URL
		*/
	 getOpenHtmlUrl: function() {
		 try {
			 //			var uspProOpenObjBol = false;//是否走组件展示判断，
			 //			var proarr = uspJS.uspProOpenObj.permissionArr;//收集路径灰度数组
			 //			for(var i=0,l=proarr.length;i<l;i++){
			 //				if(uspJS.appId == proarr[i]){
			 //					uspProOpenObjBol=true;
			 //					break;
			 //				}
			 //			}
			 //			if(uspProOpenObjBol){
			 //				uspJS.sourcePriority();//判断是否展示
			 //				if(uspJS.uspProOpenObj.Producthideshowbol == false){
			 //					return;//不展示组件
			 //				}
			 //			}else if(uspJS.isNull(uspJS.appId)){//判断是否有APPID，如果APPID为空，就跳出方法，不继续向下走
			 //				return;
			 //			}
			 uspJS.sourcePriority();//判断是否展示
		 } catch (e) { }
	 },
	 initNewHot: function() {
		 try {
			 uspJS.getihelpNewHotLocStr();
			 var objiNew = document.getElementById("usp_title_icon_new");
			 if (!uspJS.isNull(objiNew)) {
				 var iconNewsh = uspJS.ihelp_locStr.newBol == false ? 'd_n' : 'd_b';
				 objiNew.setAttribute("class", "usp_title_icon_new " + iconNewsh);
			 }
			 var objiHot = document.getElementById("usp_evaluation_icon_hot");
			 if (!uspJS.isNull(objiHot)) {
				 var iconHotsh = uspJS.ihelp_locStr.hotBol == false ? 'd_n' : 'd_b';
				 objiHot.setAttribute("class", "usp_evaluation_icon_hot " + iconHotsh);
			 }
		 } catch (e) { }
	 },
	 setCustomerUrlParameter: function(value) {
		 try {
			 if (uspJS.isNull(value)) {
				 return;
			 }
			 uspJS.CustomerUrlParameter = value;
		 } catch (e) { }
	 },
	 appIdcompareVersionModuleID: function() {//APPID与版本信息里面的模块ID比较，如果不匹配，就需要重新获取这个版本数据，或者说是需要重新去加载UI
		 try {
			 var fl = true;
			 if (!uspJS.isNull(uspJS.version.plugIn) && !uspJS.isNull(uspJS.version.plugIn.moduleID)) {
 
				 fl = uspJS.appId == uspJS.version.plugIn.moduleID ? true : false;
			 }
			 return fl;
		 } catch (e) { }
	 },
	 mouseoverScore1Tip: function(){
		 document.getElementById('ihelp_usp_yf_score1TipId').style.display = 'block';
		 document.getElementById('ihelp_usp_yf_score1TipId_i').style.display = 'block';
	 },
	 mouseoutScore1Tip: function(){
		 document.getElementById('ihelp_usp_yf_score1TipId').style.display = 'none';
		 document.getElementById('ihelp_usp_yf_score1TipId_i').style.display = 'none';
	 },
	 addBuriedPoint: function(clickModule){ // 埋点方法
		try {
			uspJS.uspProOpenObj.addNewHrefHttpBol = false;
			localStorage.setItem("ihelp_uspProOpenObj", JSON.stringify(uspJS.uspProOpenObj));
			var commonData = {};
			commonData.serviceCode = uspJS.appId;
			commonData.clickModule = clickModule;
			commonData.language = uspJS.locale || 'zh_CN';
			commonData.sourceUrl = uspJS.sourceURL;
			// commonData.callbackName = 'uspJS.anli.getCaseButtonSuccess'
			uspJS.jsonp({
				url: uspConfig.uspServiceHost + "componentServlet",
				data: commonData,
				success: uspJS.USPRealTimeDataHandling
			}, uspJS.scriptClassName);
		} catch (e) {
			uspJS.defaultInsurance(0);//默认熔断30分钟方法
		}
	 },
	 	getAnonymousVal:function(val) {
			try{
				if (!uspJS.isNull(uspJS.version.plugIn.YN) && uspJS.version.plugIn.YN == "Y") {
					var anonymousVal = uspJS.getCookie('ihelp_anonymous')
					anonymousVal = anonymousVal === 'undefined' ? '':anonymousVal;
					if(uspJS.isNull(anonymousVal) && uspJS.isNull(val)){
						uspJS.setCookieDomain('ihelp_anonymous', '1');
					}else{
						if(uspJS.isNull(val)){
							val = uspJS.isNull(anonymousVal)? '1' : anonymousVal === 'undefined' ? '1' : anonymousVal;
						}
						uspJS.setCookieDomain('ihelp_anonymous', val);
					}
				}
			}catch(e){
				window.console.log('e = ' + e);
			}
		},
		anCheckBoxValChange:function(obj){
			var cbList = document.getElementsByName("uspihelpCheckBox");
			uspJS.getAnonymousVal(cbList[0].checked ? 1 : 0)
		},
		setCookieDomain: function(cname, cvalue) {
			var nowTime = new Date().toLocaleDateString();
			var d = new Date(new Date(nowTime));
			d.setTime(d.getTime() + (24 * 60 * 60 * 1000 - 1000));
			var expires = "expires=" + d.toGMTString();
			document.cookie = cname + "=" + cvalue + "; " + expires + ";path=/;";
		}
 }
 
 //将uspJS绑定到window上，可供其他窗口互掉用
 window.uspJS = uspJS;
 //合并uspJS和tempUspJS对象
 if (window.tempUpsJS) {
	 for (var p in window.tempUpsJS) {
		 if (window.tempUpsJS.hasOwnProperty(p)) {
			 uspJS[p] = window.tempUpsJS[p];
		 }
	 };
 }
 window.tempUpsJS = undefined;
 uspConfig.initNetModel();
 uspJS.init();
 if (window.attachEvent) {//做兼容，兼容IE低版本
	 window.attachEvent('onresize', function() {
		 uspJS.uspJScheckResize();//判断浏览器窗口大小是否发生变化
	 });
 } else {
	 window.addEventListener('resize', function() {//addEventListener这个对象在IE8中不兼容
		 uspJS.uspJScheckResize();//判断浏览器窗口大小是否发生变化
	 });
 }
 
 
 